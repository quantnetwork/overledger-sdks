=begin
#Quant Overledger API

#Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::BlockSearchApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BlockSearchApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::BlockSearchApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BlockSearchApi' do
    it 'should create an instance of BlockSearchApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::BlockSearchApi)
    end
  end

  # unit tests for auto_execute_search_block_request
  # Prepare and automatically execute a search for a block on a DLT.
  # Generates a request ID and automatically executes the block search on the requested DLT.
  # @param authorization 
  # @param block_id 
  # @param prepare_search_schema 
  # @param [Hash] opts the optional parameters
  # @return [AutoExecuteSearchBlockResponseSchema]
  describe 'auto_execute_search_block_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for execute_prepared_search_request_block
  # Execute a search for a block on a DLT
  # Takes a request ID and searches for the block on the requested DLT based on the parameters specified in the prepare request
  # @param authorization 
  # @param request_id 
  # @param [Hash] opts the optional parameters
  # @return [ExecuteSearchBlockResponse]
  describe 'execute_prepared_search_request_block test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for prepare_search_block_by_block_id
  # Prepare Search Block by Block Id.
  # Returns a request ID for executing a block search on the requested DLT. Block searches can be prepared based on the Block ID, Block Number or for the latest block at the time
  # @param authorization 
  # @param block_id 
  # @param prepare_search_schema 
  # @param [Hash] opts the optional parameters
  # @return [PrepareSearchResponseSchema]
  describe 'prepare_search_block_by_block_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
