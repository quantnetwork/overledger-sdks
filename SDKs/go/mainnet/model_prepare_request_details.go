/*
Quant Overledger API

Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PrepareRequestDetails struct for PrepareRequestDetails
type PrepareRequestDetails struct {
	Mandate *[]Mandate `json:"mandate,omitempty"`
	AliasDetails *AliasDetails `json:"aliasDetails,omitempty"`
	Pagination *Pagination `json:"pagination,omitempty"`
	Origin *[]Origin `json:"origin,omitempty"`
	Destination *[]Destination `json:"destination,omitempty"`
	// Name of the token
	TokenName *string `json:"tokenName,omitempty"`
	BlockSearchType *string `json:"blockSearchType,omitempty"`
	Payer *[]Payer `json:"payer,omitempty"`
	Collector *Collector `json:"collector,omitempty"`
	Payee *[]Payee `json:"payee,omitempty"`
	AdditionalOwner *AdditionalOwner `json:"additionalOwner,omitempty"`
	Owner *Owner `json:"owner,omitempty"`
	Creator *Creator `json:"creator,omitempty"`
	Receiver *[]Receiver `json:"receiver,omitempty"`
	// Unique identifier for the specific token
	TokenId *string `json:"tokenId,omitempty"`
	Message *string `json:"message,omitempty"`
	LockDetails *LockDetails `json:"lockDetails,omitempty"`
	BlockId *string `json:"blockId,omitempty"`
	// The unique identifiers of the account
	AccountId *string `json:"accountId,omitempty"`
	// The unit of this token
	TokenUnit *string `json:"tokenUnit,omitempty"`
	Beneficiary *Beneficiary `json:"beneficiary,omitempty"`
	Sender *[]Sender `json:"sender,omitempty"`
	AccountDetails *AccountDetails `json:"accountDetails,omitempty"`
	OverledgerSigningType *string `json:"overledgerSigningType,omitempty"`
	TotalPaymentAmount *Payment `json:"totalPaymentAmount,omitempty"`
	SignerAccount *SignerAccount `json:"signerAccount,omitempty"`
}

// NewPrepareRequestDetails instantiates a new PrepareRequestDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepareRequestDetails() *PrepareRequestDetails {
	this := PrepareRequestDetails{}
	return &this
}

// NewPrepareRequestDetailsWithDefaults instantiates a new PrepareRequestDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepareRequestDetailsWithDefaults() *PrepareRequestDetails {
	this := PrepareRequestDetails{}
	return &this
}

// GetMandate returns the Mandate field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetMandate() []Mandate {
	if o == nil || o.Mandate == nil {
		var ret []Mandate
		return ret
	}
	return *o.Mandate
}

// GetMandateOk returns a tuple with the Mandate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetMandateOk() (*[]Mandate, bool) {
	if o == nil || o.Mandate == nil {
		return nil, false
	}
	return o.Mandate, true
}

// HasMandate returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasMandate() bool {
	if o != nil && o.Mandate != nil {
		return true
	}

	return false
}

// SetMandate gets a reference to the given []Mandate and assigns it to the Mandate field.
func (o *PrepareRequestDetails) SetMandate(v []Mandate) {
	o.Mandate = &v
}

// GetAliasDetails returns the AliasDetails field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetAliasDetails() AliasDetails {
	if o == nil || o.AliasDetails == nil {
		var ret AliasDetails
		return ret
	}
	return *o.AliasDetails
}

// GetAliasDetailsOk returns a tuple with the AliasDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetAliasDetailsOk() (*AliasDetails, bool) {
	if o == nil || o.AliasDetails == nil {
		return nil, false
	}
	return o.AliasDetails, true
}

// HasAliasDetails returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasAliasDetails() bool {
	if o != nil && o.AliasDetails != nil {
		return true
	}

	return false
}

// SetAliasDetails gets a reference to the given AliasDetails and assigns it to the AliasDetails field.
func (o *PrepareRequestDetails) SetAliasDetails(v AliasDetails) {
	o.AliasDetails = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetPagination() Pagination {
	if o == nil || o.Pagination == nil {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetPaginationOk() (*Pagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *PrepareRequestDetails) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetOrigin() []Origin {
	if o == nil || o.Origin == nil {
		var ret []Origin
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetOriginOk() (*[]Origin, bool) {
	if o == nil || o.Origin == nil {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasOrigin() bool {
	if o != nil && o.Origin != nil {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given []Origin and assigns it to the Origin field.
func (o *PrepareRequestDetails) SetOrigin(v []Origin) {
	o.Origin = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetDestination() []Destination {
	if o == nil || o.Destination == nil {
		var ret []Destination
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetDestinationOk() (*[]Destination, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given []Destination and assigns it to the Destination field.
func (o *PrepareRequestDetails) SetDestination(v []Destination) {
	o.Destination = &v
}

// GetTokenName returns the TokenName field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetTokenName() string {
	if o == nil || o.TokenName == nil {
		var ret string
		return ret
	}
	return *o.TokenName
}

// GetTokenNameOk returns a tuple with the TokenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetTokenNameOk() (*string, bool) {
	if o == nil || o.TokenName == nil {
		return nil, false
	}
	return o.TokenName, true
}

// HasTokenName returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasTokenName() bool {
	if o != nil && o.TokenName != nil {
		return true
	}

	return false
}

// SetTokenName gets a reference to the given string and assigns it to the TokenName field.
func (o *PrepareRequestDetails) SetTokenName(v string) {
	o.TokenName = &v
}

// GetBlockSearchType returns the BlockSearchType field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetBlockSearchType() string {
	if o == nil || o.BlockSearchType == nil {
		var ret string
		return ret
	}
	return *o.BlockSearchType
}

// GetBlockSearchTypeOk returns a tuple with the BlockSearchType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetBlockSearchTypeOk() (*string, bool) {
	if o == nil || o.BlockSearchType == nil {
		return nil, false
	}
	return o.BlockSearchType, true
}

// HasBlockSearchType returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasBlockSearchType() bool {
	if o != nil && o.BlockSearchType != nil {
		return true
	}

	return false
}

// SetBlockSearchType gets a reference to the given string and assigns it to the BlockSearchType field.
func (o *PrepareRequestDetails) SetBlockSearchType(v string) {
	o.BlockSearchType = &v
}

// GetPayer returns the Payer field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetPayer() []Payer {
	if o == nil || o.Payer == nil {
		var ret []Payer
		return ret
	}
	return *o.Payer
}

// GetPayerOk returns a tuple with the Payer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetPayerOk() (*[]Payer, bool) {
	if o == nil || o.Payer == nil {
		return nil, false
	}
	return o.Payer, true
}

// HasPayer returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasPayer() bool {
	if o != nil && o.Payer != nil {
		return true
	}

	return false
}

// SetPayer gets a reference to the given []Payer and assigns it to the Payer field.
func (o *PrepareRequestDetails) SetPayer(v []Payer) {
	o.Payer = &v
}

// GetCollector returns the Collector field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetCollector() Collector {
	if o == nil || o.Collector == nil {
		var ret Collector
		return ret
	}
	return *o.Collector
}

// GetCollectorOk returns a tuple with the Collector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetCollectorOk() (*Collector, bool) {
	if o == nil || o.Collector == nil {
		return nil, false
	}
	return o.Collector, true
}

// HasCollector returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasCollector() bool {
	if o != nil && o.Collector != nil {
		return true
	}

	return false
}

// SetCollector gets a reference to the given Collector and assigns it to the Collector field.
func (o *PrepareRequestDetails) SetCollector(v Collector) {
	o.Collector = &v
}

// GetPayee returns the Payee field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetPayee() []Payee {
	if o == nil || o.Payee == nil {
		var ret []Payee
		return ret
	}
	return *o.Payee
}

// GetPayeeOk returns a tuple with the Payee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetPayeeOk() (*[]Payee, bool) {
	if o == nil || o.Payee == nil {
		return nil, false
	}
	return o.Payee, true
}

// HasPayee returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasPayee() bool {
	if o != nil && o.Payee != nil {
		return true
	}

	return false
}

// SetPayee gets a reference to the given []Payee and assigns it to the Payee field.
func (o *PrepareRequestDetails) SetPayee(v []Payee) {
	o.Payee = &v
}

// GetAdditionalOwner returns the AdditionalOwner field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetAdditionalOwner() AdditionalOwner {
	if o == nil || o.AdditionalOwner == nil {
		var ret AdditionalOwner
		return ret
	}
	return *o.AdditionalOwner
}

// GetAdditionalOwnerOk returns a tuple with the AdditionalOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetAdditionalOwnerOk() (*AdditionalOwner, bool) {
	if o == nil || o.AdditionalOwner == nil {
		return nil, false
	}
	return o.AdditionalOwner, true
}

// HasAdditionalOwner returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasAdditionalOwner() bool {
	if o != nil && o.AdditionalOwner != nil {
		return true
	}

	return false
}

// SetAdditionalOwner gets a reference to the given AdditionalOwner and assigns it to the AdditionalOwner field.
func (o *PrepareRequestDetails) SetAdditionalOwner(v AdditionalOwner) {
	o.AdditionalOwner = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetOwner() Owner {
	if o == nil || o.Owner == nil {
		var ret Owner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetOwnerOk() (*Owner, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given Owner and assigns it to the Owner field.
func (o *PrepareRequestDetails) SetOwner(v Owner) {
	o.Owner = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetCreator() Creator {
	if o == nil || o.Creator == nil {
		var ret Creator
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetCreatorOk() (*Creator, bool) {
	if o == nil || o.Creator == nil {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasCreator() bool {
	if o != nil && o.Creator != nil {
		return true
	}

	return false
}

// SetCreator gets a reference to the given Creator and assigns it to the Creator field.
func (o *PrepareRequestDetails) SetCreator(v Creator) {
	o.Creator = &v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetReceiver() []Receiver {
	if o == nil || o.Receiver == nil {
		var ret []Receiver
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetReceiverOk() (*[]Receiver, bool) {
	if o == nil || o.Receiver == nil {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasReceiver() bool {
	if o != nil && o.Receiver != nil {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given []Receiver and assigns it to the Receiver field.
func (o *PrepareRequestDetails) SetReceiver(v []Receiver) {
	o.Receiver = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetTokenId() string {
	if o == nil || o.TokenId == nil {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetTokenIdOk() (*string, bool) {
	if o == nil || o.TokenId == nil {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasTokenId() bool {
	if o != nil && o.TokenId != nil {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *PrepareRequestDetails) SetTokenId(v string) {
	o.TokenId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PrepareRequestDetails) SetMessage(v string) {
	o.Message = &v
}

// GetLockDetails returns the LockDetails field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetLockDetails() LockDetails {
	if o == nil || o.LockDetails == nil {
		var ret LockDetails
		return ret
	}
	return *o.LockDetails
}

// GetLockDetailsOk returns a tuple with the LockDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetLockDetailsOk() (*LockDetails, bool) {
	if o == nil || o.LockDetails == nil {
		return nil, false
	}
	return o.LockDetails, true
}

// HasLockDetails returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasLockDetails() bool {
	if o != nil && o.LockDetails != nil {
		return true
	}

	return false
}

// SetLockDetails gets a reference to the given LockDetails and assigns it to the LockDetails field.
func (o *PrepareRequestDetails) SetLockDetails(v LockDetails) {
	o.LockDetails = &v
}

// GetBlockId returns the BlockId field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetBlockId() string {
	if o == nil || o.BlockId == nil {
		var ret string
		return ret
	}
	return *o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetBlockIdOk() (*string, bool) {
	if o == nil || o.BlockId == nil {
		return nil, false
	}
	return o.BlockId, true
}

// HasBlockId returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasBlockId() bool {
	if o != nil && o.BlockId != nil {
		return true
	}

	return false
}

// SetBlockId gets a reference to the given string and assigns it to the BlockId field.
func (o *PrepareRequestDetails) SetBlockId(v string) {
	o.BlockId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *PrepareRequestDetails) SetAccountId(v string) {
	o.AccountId = &v
}

// GetTokenUnit returns the TokenUnit field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetTokenUnit() string {
	if o == nil || o.TokenUnit == nil {
		var ret string
		return ret
	}
	return *o.TokenUnit
}

// GetTokenUnitOk returns a tuple with the TokenUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetTokenUnitOk() (*string, bool) {
	if o == nil || o.TokenUnit == nil {
		return nil, false
	}
	return o.TokenUnit, true
}

// HasTokenUnit returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasTokenUnit() bool {
	if o != nil && o.TokenUnit != nil {
		return true
	}

	return false
}

// SetTokenUnit gets a reference to the given string and assigns it to the TokenUnit field.
func (o *PrepareRequestDetails) SetTokenUnit(v string) {
	o.TokenUnit = &v
}

// GetBeneficiary returns the Beneficiary field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetBeneficiary() Beneficiary {
	if o == nil || o.Beneficiary == nil {
		var ret Beneficiary
		return ret
	}
	return *o.Beneficiary
}

// GetBeneficiaryOk returns a tuple with the Beneficiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetBeneficiaryOk() (*Beneficiary, bool) {
	if o == nil || o.Beneficiary == nil {
		return nil, false
	}
	return o.Beneficiary, true
}

// HasBeneficiary returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasBeneficiary() bool {
	if o != nil && o.Beneficiary != nil {
		return true
	}

	return false
}

// SetBeneficiary gets a reference to the given Beneficiary and assigns it to the Beneficiary field.
func (o *PrepareRequestDetails) SetBeneficiary(v Beneficiary) {
	o.Beneficiary = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetSender() []Sender {
	if o == nil || o.Sender == nil {
		var ret []Sender
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetSenderOk() (*[]Sender, bool) {
	if o == nil || o.Sender == nil {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given []Sender and assigns it to the Sender field.
func (o *PrepareRequestDetails) SetSender(v []Sender) {
	o.Sender = &v
}

// GetAccountDetails returns the AccountDetails field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetAccountDetails() AccountDetails {
	if o == nil || o.AccountDetails == nil {
		var ret AccountDetails
		return ret
	}
	return *o.AccountDetails
}

// GetAccountDetailsOk returns a tuple with the AccountDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetAccountDetailsOk() (*AccountDetails, bool) {
	if o == nil || o.AccountDetails == nil {
		return nil, false
	}
	return o.AccountDetails, true
}

// HasAccountDetails returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasAccountDetails() bool {
	if o != nil && o.AccountDetails != nil {
		return true
	}

	return false
}

// SetAccountDetails gets a reference to the given AccountDetails and assigns it to the AccountDetails field.
func (o *PrepareRequestDetails) SetAccountDetails(v AccountDetails) {
	o.AccountDetails = &v
}

// GetOverledgerSigningType returns the OverledgerSigningType field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetOverledgerSigningType() string {
	if o == nil || o.OverledgerSigningType == nil {
		var ret string
		return ret
	}
	return *o.OverledgerSigningType
}

// GetOverledgerSigningTypeOk returns a tuple with the OverledgerSigningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetOverledgerSigningTypeOk() (*string, bool) {
	if o == nil || o.OverledgerSigningType == nil {
		return nil, false
	}
	return o.OverledgerSigningType, true
}

// HasOverledgerSigningType returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasOverledgerSigningType() bool {
	if o != nil && o.OverledgerSigningType != nil {
		return true
	}

	return false
}

// SetOverledgerSigningType gets a reference to the given string and assigns it to the OverledgerSigningType field.
func (o *PrepareRequestDetails) SetOverledgerSigningType(v string) {
	o.OverledgerSigningType = &v
}

// GetTotalPaymentAmount returns the TotalPaymentAmount field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetTotalPaymentAmount() Payment {
	if o == nil || o.TotalPaymentAmount == nil {
		var ret Payment
		return ret
	}
	return *o.TotalPaymentAmount
}

// GetTotalPaymentAmountOk returns a tuple with the TotalPaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetTotalPaymentAmountOk() (*Payment, bool) {
	if o == nil || o.TotalPaymentAmount == nil {
		return nil, false
	}
	return o.TotalPaymentAmount, true
}

// HasTotalPaymentAmount returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasTotalPaymentAmount() bool {
	if o != nil && o.TotalPaymentAmount != nil {
		return true
	}

	return false
}

// SetTotalPaymentAmount gets a reference to the given Payment and assigns it to the TotalPaymentAmount field.
func (o *PrepareRequestDetails) SetTotalPaymentAmount(v Payment) {
	o.TotalPaymentAmount = &v
}

// GetSignerAccount returns the SignerAccount field value if set, zero value otherwise.
func (o *PrepareRequestDetails) GetSignerAccount() SignerAccount {
	if o == nil || o.SignerAccount == nil {
		var ret SignerAccount
		return ret
	}
	return *o.SignerAccount
}

// GetSignerAccountOk returns a tuple with the SignerAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareRequestDetails) GetSignerAccountOk() (*SignerAccount, bool) {
	if o == nil || o.SignerAccount == nil {
		return nil, false
	}
	return o.SignerAccount, true
}

// HasSignerAccount returns a boolean if a field has been set.
func (o *PrepareRequestDetails) HasSignerAccount() bool {
	if o != nil && o.SignerAccount != nil {
		return true
	}

	return false
}

// SetSignerAccount gets a reference to the given SignerAccount and assigns it to the SignerAccount field.
func (o *PrepareRequestDetails) SetSignerAccount(v SignerAccount) {
	o.SignerAccount = &v
}

func (o PrepareRequestDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mandate != nil {
		toSerialize["mandate"] = o.Mandate
	}
	if o.AliasDetails != nil {
		toSerialize["aliasDetails"] = o.AliasDetails
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	if o.Origin != nil {
		toSerialize["origin"] = o.Origin
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.TokenName != nil {
		toSerialize["tokenName"] = o.TokenName
	}
	if o.BlockSearchType != nil {
		toSerialize["blockSearchType"] = o.BlockSearchType
	}
	if o.Payer != nil {
		toSerialize["payer"] = o.Payer
	}
	if o.Collector != nil {
		toSerialize["collector"] = o.Collector
	}
	if o.Payee != nil {
		toSerialize["payee"] = o.Payee
	}
	if o.AdditionalOwner != nil {
		toSerialize["additionalOwner"] = o.AdditionalOwner
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Creator != nil {
		toSerialize["creator"] = o.Creator
	}
	if o.Receiver != nil {
		toSerialize["receiver"] = o.Receiver
	}
	if o.TokenId != nil {
		toSerialize["tokenId"] = o.TokenId
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.LockDetails != nil {
		toSerialize["lockDetails"] = o.LockDetails
	}
	if o.BlockId != nil {
		toSerialize["blockId"] = o.BlockId
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.TokenUnit != nil {
		toSerialize["tokenUnit"] = o.TokenUnit
	}
	if o.Beneficiary != nil {
		toSerialize["beneficiary"] = o.Beneficiary
	}
	if o.Sender != nil {
		toSerialize["sender"] = o.Sender
	}
	if o.AccountDetails != nil {
		toSerialize["accountDetails"] = o.AccountDetails
	}
	if o.OverledgerSigningType != nil {
		toSerialize["overledgerSigningType"] = o.OverledgerSigningType
	}
	if o.TotalPaymentAmount != nil {
		toSerialize["totalPaymentAmount"] = o.TotalPaymentAmount
	}
	if o.SignerAccount != nil {
		toSerialize["signerAccount"] = o.SignerAccount
	}
	return json.Marshal(toSerialize)
}

type NullablePrepareRequestDetails struct {
	value *PrepareRequestDetails
	isSet bool
}

func (v NullablePrepareRequestDetails) Get() *PrepareRequestDetails {
	return v.value
}

func (v *NullablePrepareRequestDetails) Set(val *PrepareRequestDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepareRequestDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepareRequestDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepareRequestDetails(val *PrepareRequestDetails) *NullablePrepareRequestDetails {
	return &NullablePrepareRequestDetails{value: val, isSet: true}
}

func (v NullablePrepareRequestDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepareRequestDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


