/*
Quant Overledger API

Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MintRequestDetailsSchemaQrc20 struct for MintRequestDetailsSchemaQrc20
type MintRequestDetailsSchemaQrc20 struct {
	Creator *CreatorMintSchema `json:"creator,omitempty"`
	Beneficiary *BeneficiaryMintSchemaQrc20 `json:"beneficiary,omitempty"`
	// Any text-based element of the data payload
	Message *string `json:"message,omitempty"`
	OverledgerSigningType *string `json:"overledgerSigningType,omitempty"`
}

// NewMintRequestDetailsSchemaQrc20 instantiates a new MintRequestDetailsSchemaQrc20 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMintRequestDetailsSchemaQrc20() *MintRequestDetailsSchemaQrc20 {
	this := MintRequestDetailsSchemaQrc20{}
	return &this
}

// NewMintRequestDetailsSchemaQrc20WithDefaults instantiates a new MintRequestDetailsSchemaQrc20 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMintRequestDetailsSchemaQrc20WithDefaults() *MintRequestDetailsSchemaQrc20 {
	this := MintRequestDetailsSchemaQrc20{}
	return &this
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *MintRequestDetailsSchemaQrc20) GetCreator() CreatorMintSchema {
	if o == nil || o.Creator == nil {
		var ret CreatorMintSchema
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintRequestDetailsSchemaQrc20) GetCreatorOk() (*CreatorMintSchema, bool) {
	if o == nil || o.Creator == nil {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *MintRequestDetailsSchemaQrc20) HasCreator() bool {
	if o != nil && o.Creator != nil {
		return true
	}

	return false
}

// SetCreator gets a reference to the given CreatorMintSchema and assigns it to the Creator field.
func (o *MintRequestDetailsSchemaQrc20) SetCreator(v CreatorMintSchema) {
	o.Creator = &v
}

// GetBeneficiary returns the Beneficiary field value if set, zero value otherwise.
func (o *MintRequestDetailsSchemaQrc20) GetBeneficiary() BeneficiaryMintSchemaQrc20 {
	if o == nil || o.Beneficiary == nil {
		var ret BeneficiaryMintSchemaQrc20
		return ret
	}
	return *o.Beneficiary
}

// GetBeneficiaryOk returns a tuple with the Beneficiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintRequestDetailsSchemaQrc20) GetBeneficiaryOk() (*BeneficiaryMintSchemaQrc20, bool) {
	if o == nil || o.Beneficiary == nil {
		return nil, false
	}
	return o.Beneficiary, true
}

// HasBeneficiary returns a boolean if a field has been set.
func (o *MintRequestDetailsSchemaQrc20) HasBeneficiary() bool {
	if o != nil && o.Beneficiary != nil {
		return true
	}

	return false
}

// SetBeneficiary gets a reference to the given BeneficiaryMintSchemaQrc20 and assigns it to the Beneficiary field.
func (o *MintRequestDetailsSchemaQrc20) SetBeneficiary(v BeneficiaryMintSchemaQrc20) {
	o.Beneficiary = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *MintRequestDetailsSchemaQrc20) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintRequestDetailsSchemaQrc20) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *MintRequestDetailsSchemaQrc20) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *MintRequestDetailsSchemaQrc20) SetMessage(v string) {
	o.Message = &v
}

// GetOverledgerSigningType returns the OverledgerSigningType field value if set, zero value otherwise.
func (o *MintRequestDetailsSchemaQrc20) GetOverledgerSigningType() string {
	if o == nil || o.OverledgerSigningType == nil {
		var ret string
		return ret
	}
	return *o.OverledgerSigningType
}

// GetOverledgerSigningTypeOk returns a tuple with the OverledgerSigningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintRequestDetailsSchemaQrc20) GetOverledgerSigningTypeOk() (*string, bool) {
	if o == nil || o.OverledgerSigningType == nil {
		return nil, false
	}
	return o.OverledgerSigningType, true
}

// HasOverledgerSigningType returns a boolean if a field has been set.
func (o *MintRequestDetailsSchemaQrc20) HasOverledgerSigningType() bool {
	if o != nil && o.OverledgerSigningType != nil {
		return true
	}

	return false
}

// SetOverledgerSigningType gets a reference to the given string and assigns it to the OverledgerSigningType field.
func (o *MintRequestDetailsSchemaQrc20) SetOverledgerSigningType(v string) {
	o.OverledgerSigningType = &v
}

func (o MintRequestDetailsSchemaQrc20) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Creator != nil {
		toSerialize["creator"] = o.Creator
	}
	if o.Beneficiary != nil {
		toSerialize["beneficiary"] = o.Beneficiary
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.OverledgerSigningType != nil {
		toSerialize["overledgerSigningType"] = o.OverledgerSigningType
	}
	return json.Marshal(toSerialize)
}

type NullableMintRequestDetailsSchemaQrc20 struct {
	value *MintRequestDetailsSchemaQrc20
	isSet bool
}

func (v NullableMintRequestDetailsSchemaQrc20) Get() *MintRequestDetailsSchemaQrc20 {
	return v.value
}

func (v *NullableMintRequestDetailsSchemaQrc20) Set(val *MintRequestDetailsSchemaQrc20) {
	v.value = val
	v.isSet = true
}

func (v NullableMintRequestDetailsSchemaQrc20) IsSet() bool {
	return v.isSet
}

func (v *NullableMintRequestDetailsSchemaQrc20) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMintRequestDetailsSchemaQrc20(val *MintRequestDetailsSchemaQrc20) *NullableMintRequestDetailsSchemaQrc20 {
	return &NullableMintRequestDetailsSchemaQrc20{value: val, isSet: true}
}

func (v NullableMintRequestDetailsSchemaQrc20) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMintRequestDetailsSchemaQrc20) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


