/*
Quant Overledger API

Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AliasDetails Alias Details of an account
type AliasDetails struct {
	AccountId *string `json:"accountId,omitempty"`
	Unit *string `json:"unit,omitempty"`
	DisposableAlias *bool `json:"disposableAlias,omitempty"`
	AliasHash *string `json:"aliasHash,omitempty"`
	AliasType *string `json:"aliasType,omitempty"`
	EsipId *string `json:"esipId,omitempty"`
}

// NewAliasDetails instantiates a new AliasDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAliasDetails() *AliasDetails {
	this := AliasDetails{}
	return &this
}

// NewAliasDetailsWithDefaults instantiates a new AliasDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliasDetailsWithDefaults() *AliasDetails {
	this := AliasDetails{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AliasDetails) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AliasDetails) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AliasDetails) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AliasDetails) SetAccountId(v string) {
	o.AccountId = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *AliasDetails) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AliasDetails) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *AliasDetails) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *AliasDetails) SetUnit(v string) {
	o.Unit = &v
}

// GetDisposableAlias returns the DisposableAlias field value if set, zero value otherwise.
func (o *AliasDetails) GetDisposableAlias() bool {
	if o == nil || o.DisposableAlias == nil {
		var ret bool
		return ret
	}
	return *o.DisposableAlias
}

// GetDisposableAliasOk returns a tuple with the DisposableAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AliasDetails) GetDisposableAliasOk() (*bool, bool) {
	if o == nil || o.DisposableAlias == nil {
		return nil, false
	}
	return o.DisposableAlias, true
}

// HasDisposableAlias returns a boolean if a field has been set.
func (o *AliasDetails) HasDisposableAlias() bool {
	if o != nil && o.DisposableAlias != nil {
		return true
	}

	return false
}

// SetDisposableAlias gets a reference to the given bool and assigns it to the DisposableAlias field.
func (o *AliasDetails) SetDisposableAlias(v bool) {
	o.DisposableAlias = &v
}

// GetAliasHash returns the AliasHash field value if set, zero value otherwise.
func (o *AliasDetails) GetAliasHash() string {
	if o == nil || o.AliasHash == nil {
		var ret string
		return ret
	}
	return *o.AliasHash
}

// GetAliasHashOk returns a tuple with the AliasHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AliasDetails) GetAliasHashOk() (*string, bool) {
	if o == nil || o.AliasHash == nil {
		return nil, false
	}
	return o.AliasHash, true
}

// HasAliasHash returns a boolean if a field has been set.
func (o *AliasDetails) HasAliasHash() bool {
	if o != nil && o.AliasHash != nil {
		return true
	}

	return false
}

// SetAliasHash gets a reference to the given string and assigns it to the AliasHash field.
func (o *AliasDetails) SetAliasHash(v string) {
	o.AliasHash = &v
}

// GetAliasType returns the AliasType field value if set, zero value otherwise.
func (o *AliasDetails) GetAliasType() string {
	if o == nil || o.AliasType == nil {
		var ret string
		return ret
	}
	return *o.AliasType
}

// GetAliasTypeOk returns a tuple with the AliasType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AliasDetails) GetAliasTypeOk() (*string, bool) {
	if o == nil || o.AliasType == nil {
		return nil, false
	}
	return o.AliasType, true
}

// HasAliasType returns a boolean if a field has been set.
func (o *AliasDetails) HasAliasType() bool {
	if o != nil && o.AliasType != nil {
		return true
	}

	return false
}

// SetAliasType gets a reference to the given string and assigns it to the AliasType field.
func (o *AliasDetails) SetAliasType(v string) {
	o.AliasType = &v
}

// GetEsipId returns the EsipId field value if set, zero value otherwise.
func (o *AliasDetails) GetEsipId() string {
	if o == nil || o.EsipId == nil {
		var ret string
		return ret
	}
	return *o.EsipId
}

// GetEsipIdOk returns a tuple with the EsipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AliasDetails) GetEsipIdOk() (*string, bool) {
	if o == nil || o.EsipId == nil {
		return nil, false
	}
	return o.EsipId, true
}

// HasEsipId returns a boolean if a field has been set.
func (o *AliasDetails) HasEsipId() bool {
	if o != nil && o.EsipId != nil {
		return true
	}

	return false
}

// SetEsipId gets a reference to the given string and assigns it to the EsipId field.
func (o *AliasDetails) SetEsipId(v string) {
	o.EsipId = &v
}

func (o AliasDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if o.DisposableAlias != nil {
		toSerialize["disposableAlias"] = o.DisposableAlias
	}
	if o.AliasHash != nil {
		toSerialize["aliasHash"] = o.AliasHash
	}
	if o.AliasType != nil {
		toSerialize["aliasType"] = o.AliasType
	}
	if o.EsipId != nil {
		toSerialize["esipId"] = o.EsipId
	}
	return json.Marshal(toSerialize)
}

type NullableAliasDetails struct {
	value *AliasDetails
	isSet bool
}

func (v NullableAliasDetails) Get() *AliasDetails {
	return v.value
}

func (v *NullableAliasDetails) Set(val *AliasDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAliasDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAliasDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAliasDetails(val *AliasDetails) *NullableAliasDetails {
	return &NullableAliasDetails{value: val, isSet: true}
}

func (v NullableAliasDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAliasDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


