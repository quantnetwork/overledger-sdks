/*
Quant Overledger API

Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LockDetails Lock Details of the tokens
type LockDetails struct {
	ExpiryDate *string `json:"expiryDate,omitempty"`
	LockId *string `json:"lockId,omitempty"`
	AccountId *string `json:"accountId,omitempty"`
	Amount *string `json:"amount,omitempty"`
	Unit *string `json:"unit,omitempty"`
	AccountOwningInstitutionId *string `json:"accountOwningInstitutionId,omitempty"`
	LockDescription *string `json:"lockDescription,omitempty"`
	PayeeId *string `json:"payeeId,omitempty"`
	Secret *string `json:"secret,omitempty"`
	Hash *string `json:"hash,omitempty"`
	PayeeOwningInstitutionId *string `json:"payeeOwningInstitutionId,omitempty"`
	LockOwningInstitutionId *string `json:"lockOwningInstitutionId,omitempty"`
}

// NewLockDetails instantiates a new LockDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockDetails() *LockDetails {
	this := LockDetails{}
	return &this
}

// NewLockDetailsWithDefaults instantiates a new LockDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockDetailsWithDefaults() *LockDetails {
	this := LockDetails{}
	return &this
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *LockDetails) GetExpiryDate() string {
	if o == nil || o.ExpiryDate == nil {
		var ret string
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetExpiryDateOk() (*string, bool) {
	if o == nil || o.ExpiryDate == nil {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *LockDetails) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate != nil {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given string and assigns it to the ExpiryDate field.
func (o *LockDetails) SetExpiryDate(v string) {
	o.ExpiryDate = &v
}

// GetLockId returns the LockId field value if set, zero value otherwise.
func (o *LockDetails) GetLockId() string {
	if o == nil || o.LockId == nil {
		var ret string
		return ret
	}
	return *o.LockId
}

// GetLockIdOk returns a tuple with the LockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetLockIdOk() (*string, bool) {
	if o == nil || o.LockId == nil {
		return nil, false
	}
	return o.LockId, true
}

// HasLockId returns a boolean if a field has been set.
func (o *LockDetails) HasLockId() bool {
	if o != nil && o.LockId != nil {
		return true
	}

	return false
}

// SetLockId gets a reference to the given string and assigns it to the LockId field.
func (o *LockDetails) SetLockId(v string) {
	o.LockId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *LockDetails) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *LockDetails) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *LockDetails) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *LockDetails) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *LockDetails) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *LockDetails) SetAmount(v string) {
	o.Amount = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *LockDetails) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *LockDetails) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *LockDetails) SetUnit(v string) {
	o.Unit = &v
}

// GetAccountOwningInstitutionId returns the AccountOwningInstitutionId field value if set, zero value otherwise.
func (o *LockDetails) GetAccountOwningInstitutionId() string {
	if o == nil || o.AccountOwningInstitutionId == nil {
		var ret string
		return ret
	}
	return *o.AccountOwningInstitutionId
}

// GetAccountOwningInstitutionIdOk returns a tuple with the AccountOwningInstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetAccountOwningInstitutionIdOk() (*string, bool) {
	if o == nil || o.AccountOwningInstitutionId == nil {
		return nil, false
	}
	return o.AccountOwningInstitutionId, true
}

// HasAccountOwningInstitutionId returns a boolean if a field has been set.
func (o *LockDetails) HasAccountOwningInstitutionId() bool {
	if o != nil && o.AccountOwningInstitutionId != nil {
		return true
	}

	return false
}

// SetAccountOwningInstitutionId gets a reference to the given string and assigns it to the AccountOwningInstitutionId field.
func (o *LockDetails) SetAccountOwningInstitutionId(v string) {
	o.AccountOwningInstitutionId = &v
}

// GetLockDescription returns the LockDescription field value if set, zero value otherwise.
func (o *LockDetails) GetLockDescription() string {
	if o == nil || o.LockDescription == nil {
		var ret string
		return ret
	}
	return *o.LockDescription
}

// GetLockDescriptionOk returns a tuple with the LockDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetLockDescriptionOk() (*string, bool) {
	if o == nil || o.LockDescription == nil {
		return nil, false
	}
	return o.LockDescription, true
}

// HasLockDescription returns a boolean if a field has been set.
func (o *LockDetails) HasLockDescription() bool {
	if o != nil && o.LockDescription != nil {
		return true
	}

	return false
}

// SetLockDescription gets a reference to the given string and assigns it to the LockDescription field.
func (o *LockDetails) SetLockDescription(v string) {
	o.LockDescription = &v
}

// GetPayeeId returns the PayeeId field value if set, zero value otherwise.
func (o *LockDetails) GetPayeeId() string {
	if o == nil || o.PayeeId == nil {
		var ret string
		return ret
	}
	return *o.PayeeId
}

// GetPayeeIdOk returns a tuple with the PayeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetPayeeIdOk() (*string, bool) {
	if o == nil || o.PayeeId == nil {
		return nil, false
	}
	return o.PayeeId, true
}

// HasPayeeId returns a boolean if a field has been set.
func (o *LockDetails) HasPayeeId() bool {
	if o != nil && o.PayeeId != nil {
		return true
	}

	return false
}

// SetPayeeId gets a reference to the given string and assigns it to the PayeeId field.
func (o *LockDetails) SetPayeeId(v string) {
	o.PayeeId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *LockDetails) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *LockDetails) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *LockDetails) SetSecret(v string) {
	o.Secret = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *LockDetails) GetHash() string {
	if o == nil || o.Hash == nil {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetHashOk() (*string, bool) {
	if o == nil || o.Hash == nil {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *LockDetails) HasHash() bool {
	if o != nil && o.Hash != nil {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *LockDetails) SetHash(v string) {
	o.Hash = &v
}

// GetPayeeOwningInstitutionId returns the PayeeOwningInstitutionId field value if set, zero value otherwise.
func (o *LockDetails) GetPayeeOwningInstitutionId() string {
	if o == nil || o.PayeeOwningInstitutionId == nil {
		var ret string
		return ret
	}
	return *o.PayeeOwningInstitutionId
}

// GetPayeeOwningInstitutionIdOk returns a tuple with the PayeeOwningInstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetPayeeOwningInstitutionIdOk() (*string, bool) {
	if o == nil || o.PayeeOwningInstitutionId == nil {
		return nil, false
	}
	return o.PayeeOwningInstitutionId, true
}

// HasPayeeOwningInstitutionId returns a boolean if a field has been set.
func (o *LockDetails) HasPayeeOwningInstitutionId() bool {
	if o != nil && o.PayeeOwningInstitutionId != nil {
		return true
	}

	return false
}

// SetPayeeOwningInstitutionId gets a reference to the given string and assigns it to the PayeeOwningInstitutionId field.
func (o *LockDetails) SetPayeeOwningInstitutionId(v string) {
	o.PayeeOwningInstitutionId = &v
}

// GetLockOwningInstitutionId returns the LockOwningInstitutionId field value if set, zero value otherwise.
func (o *LockDetails) GetLockOwningInstitutionId() string {
	if o == nil || o.LockOwningInstitutionId == nil {
		var ret string
		return ret
	}
	return *o.LockOwningInstitutionId
}

// GetLockOwningInstitutionIdOk returns a tuple with the LockOwningInstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockDetails) GetLockOwningInstitutionIdOk() (*string, bool) {
	if o == nil || o.LockOwningInstitutionId == nil {
		return nil, false
	}
	return o.LockOwningInstitutionId, true
}

// HasLockOwningInstitutionId returns a boolean if a field has been set.
func (o *LockDetails) HasLockOwningInstitutionId() bool {
	if o != nil && o.LockOwningInstitutionId != nil {
		return true
	}

	return false
}

// SetLockOwningInstitutionId gets a reference to the given string and assigns it to the LockOwningInstitutionId field.
func (o *LockDetails) SetLockOwningInstitutionId(v string) {
	o.LockOwningInstitutionId = &v
}

func (o LockDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExpiryDate != nil {
		toSerialize["expiryDate"] = o.ExpiryDate
	}
	if o.LockId != nil {
		toSerialize["lockId"] = o.LockId
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if o.AccountOwningInstitutionId != nil {
		toSerialize["accountOwningInstitutionId"] = o.AccountOwningInstitutionId
	}
	if o.LockDescription != nil {
		toSerialize["lockDescription"] = o.LockDescription
	}
	if o.PayeeId != nil {
		toSerialize["payeeId"] = o.PayeeId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.Hash != nil {
		toSerialize["hash"] = o.Hash
	}
	if o.PayeeOwningInstitutionId != nil {
		toSerialize["payeeOwningInstitutionId"] = o.PayeeOwningInstitutionId
	}
	if o.LockOwningInstitutionId != nil {
		toSerialize["lockOwningInstitutionId"] = o.LockOwningInstitutionId
	}
	return json.Marshal(toSerialize)
}

type NullableLockDetails struct {
	value *LockDetails
	isSet bool
}

func (v NullableLockDetails) Get() *LockDetails {
	return v.value
}

func (v *NullableLockDetails) Set(val *LockDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableLockDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableLockDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockDetails(val *LockDetails) *NullableLockDetails {
	return &NullableLockDetails{value: val, isSet: true}
}

func (v NullableLockDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


