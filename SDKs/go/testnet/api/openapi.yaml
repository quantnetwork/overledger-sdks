openapi: 3.0.1
info:
  description: |-
    Quant's Overledger API allows developers to create applications for multiple DLT's using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps â€“ prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
  title: Quant Overledger API
  version: "2.0"
  x-logo:
    url: https://developer.quant.network/images/quant_logo_white.png
servers:
- url: https://api.sandbox.overledger.io
tags:
- name: Create Transaction
- name: Transaction Search
- name: mDapp Transaction Query
- name: Monitor a Resource
- name: Manage Monitored Resources
- name: Create Subscription
- name: Manage Subscription
paths:
  /v2/preparation/debit:
    post:
      description: Transforms a transaction request ready to be signed and returns
        a request ID for executing. The supported transaction types are "Approve Debit"
        and "Create Debit". The 'Approve Debit' transaction type will allow you to
        approve someone to make a pull payment from your account and the "Create Debit"
        transaction type will create the payment to pull the approved amount from
        an account.
      operationId: prepareDebitRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              QRC20 Create Debit:
                description: QRC20 Create Debit
                summary: QRC20 Create Debit
                value:
                  urgency: normal
                  requestDetails:
                    payee:
                    - payment:
                        amount: "1.0"
                        unit: QNT
                      payeeId: 0x8917cf2A57DF39D311a96c53FCCA76dAFB25392B
                    overledgerSigningType: overledger-javascript-library
                    message: OVL Transaction Message
                    payer:
                    - payerId: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39d
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: Create Debit
              QRC20 Approve Debit:
                description: QRC20 Approve Debit
                summary: QRC20 Approve Debit
                value:
                  urgency: normal
                  requestDetails:
                    mandate:
                    - payment:
                        amount: "1.0"
                        unit: QNT
                      payeeId: 0x8917cf2A57DF39D311a96c53FCCA76dAFB25392B
                    overledgerSigningType: overledger-javascript-library
                    message: OVL Transaction Message
                    payer:
                    - payerId: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39d
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: Approve Debit
            schema:
              $ref: '#/components/schemas/PrepareCreditTransactionRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: e566fab4-141d-445e-8c3c-e936c553cc99
                    dltFee:
                      amount: "0.000061839000453486"
                      unit: ETH
                    nativeData:
                      data: 0xa9059cbb000000000000000000000000d8b31b65878a6b1a6caf9f4819c1a42d68a7a11600000000000000000000000000000000000000000000000000038d7ea4c68000
                      chainId: 3
                      gas: "41226"
                      to: 0xF9cd6C86992Fce1481dBc4bDB7E1b101c1e8cEE2
                      nonce: 122
                      value: "0"
                      gasPrice: "1500000011"
              schema:
                $ref: '#/components/schemas/PrepareTransactionResponse'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04036
                    description: Technology data object is required and must be either
                      Ethereum, XRP Ledger or Bitcoin.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare a QRC20 token debit transaction for signing
      tags:
      - Create a QRC20 Debit Transaction
  /v2/preparation/search/smartcontract:
    post:
      description: Returns a request ID for executing a smart contract read on Ethereum.
      operationId: prepareSmartContractQueryRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Smart Contract Search:
                description: Smart Contract Search
                summary: Smart Contract Search
                value:
                  requestDetails:
                    destination:
                    - smartContract:
                        function:
                          name: balanceOf
                          inputParameters:
                          - type: address
                            value: 0x8917cf2A57DF39D311a96c53FCCA76dAFB25392B
                          outputParameters:
                          - type: uint256
                        smartContractId: 0xF9cd6C86992Fce1481dBc4bDB7E1b101c1e8cEE2
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSmartContractRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: 13765b06-eaf3-4f02-acb4-b7e9da8b0380
              schema:
                $ref: '#/components/schemas/PrepareSearchResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare a read of a smart contract on a DLT
      tags:
      - Smart Contract Search
  /v2/execution/search/address/balance:
    post:
      description: Takes a request ID, searches for the address and retrieves the
        balance on the requested DLT. This API is only applicable for account based
        DLTs
      operationId: executePreparedSearchRequestAddressBalance
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: requestId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Response:
                  description: Execute Response
                  value:
                    balances:
                    - unit: ETH
                      amount: "4.99719116955385472"
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    addressId: 0x650A87cfB9165C9F4Ccc7B971D971f50f753e761
              schema:
                $ref: '#/components/schemas/ExecuteSearchBalanceResponse'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a search for an address balance on a DLT
      tags:
      - Address Search
  /v2/execution/search/smartcontract:
    post:
      description: Takes a request ID and reads the smart contract on Ethereum based
        on the parameters specified in the prepare request.
      operationId: executePreparedSearchRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: requestId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Response:
                  description: Execute Response
                  value:
                    smartContract:
                      function:
                        functionId: 0x70a08231
                        name: balanceOf
                        inputParameters:
                        - type: address
                          value: 0x8917cf2A57DF39D311a96c53FCCA76dAFB25392B
                        outputParameters:
                        - type: uint256
                          value: "141999998900488372232"
                      smartContractId: 0xF9cd6C86992Fce1481dBc4bDB7E1b101c1e8cEE2
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
              schema:
                $ref: '#/components/schemas/ExecuteSmartContractReadResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a read of a smart contract on a DLT
      tags:
      - Smart Contract Search
  /v2/autoexecution/search/address/sequence/{addressId}:
    post:
      description: Generates a request ID and automatically executes the address sequence
        search on the requested DLT.
      operationId: prepareAddressSequenceSearchRequest_1
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: addressId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Address Sequence Search:
                description: Address Sequence Search
                summary: Address Sequence Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Prepare and Address not found Execute Response:
                  description: Successful Prepare and Address not found Execute Response
                  value:
                    preparationAddressSequenceSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: ba74dab3-0012-4dfe-ade4-4f4b045b8bf1
                    prepareAndExecuteOverledgerErrorResponse:
                      code: ADD04024
                      description: Address rUy24rW7XnhWLWMcmQ9AbMx6wvjKa6iqaD cannot
                        be found on xrp ledger testnet.
                      category: Validation Error
                Successful Prepare and Failed Execute Response:
                  description: Successful Prepare and Failed Execute Response
                  value:
                    preparationAddressSequenceSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: db52bd25-ff9f-49e2-ad07-7e782a70cec2
                    prepareAndExecuteOverledgerErrorResponse:
                      code: TRS04004
                      description: Your free trial has ended.
                      category: Validation Error
                Successful Prepare and Execute Response:
                  description: Successful Prepare and Execute Response
                  value:
                    preparationAddressSequenceSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 117f8ee7-8b16-480d-adc9-4a76a7b15b54
                    executionAddressSequenceSearchResponse:
                      sequence: "160"
                      location:
                        technology: Ethereum
                        network: Ropsten Testnet
                      addressId: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39d
              schema:
                $ref: '#/components/schemas/AutoExecSearchAddressSequenceResponseSchema'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Address not valid:
                  description: Address not valid
                  value:
                    code: ADD04002
                    description: 'The address provided: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39,
                      is not valid a valid address for ethereum'
                    category: Validation Error
                Bitcoin not supported:
                  description: Bitcoin not supported
                  value:
                    code: PRP04001
                    description: Currently, the address-sequence-query is not supported
                      on the bitcoin testnet
                    category: Validation Error
                Address id param must be provided:
                  description: Address id param must be provided
                  value:
                    code: ADD04005
                    description: API request must include an address as a path parameter.
                    category: Validation Error
                Technology or network not supported:
                  description: Technology or network not supported
                  value:
                    code: TXN04005
                    description: Overledger does not currently support the requested
                      technology or network.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/autoexecution/search/address/sequence/rUy24rW7XnhWLWMcmQ9AbMx6wvjKa6iqaD
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare and automatically execute a search for an Address Sequence.
      tags:
      - Address Search
  /v2/autoexecution/search/address/balance/{addressId}:
    post:
      description: Generates a request ID and automatically executes the address balance
        search on the requested DLT.
      operationId: autoExecuteSearchAddressBalanceRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: addressId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Address Balance Search:
                description: Address Balance Search
                summary: Address Balance Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Prepare and Address not found Execute Response:
                  description: Successful Prepare and Address not found Execute Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: ADD04024
                      description: Address rUy24rW7XnhWLWMcmQ9AbMx6wvjKa6iqaD cannot
                        be found on xrp ledger testnet.
                      category: Validation Error
                    preparationAddressBalanceSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: ba74dab3-0012-4dfe-ade4-4f4b045b8bf1
                Successful Prepare and Failed Execute Response:
                  description: Successful Prepare and Failed Execute Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: TRS04004
                      description: Your free trial has ended.
                      category: Validation Error
                    preparationAddressBalanceSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: db52bd25-ff9f-49e2-ad07-7e782a70cec2
                Successful Prepare and Execute Response:
                  description: Successful Prepare and Execute Response
                  value:
                    executionAddressBalanceSearchResponse:
                      balances:
                      - unit: ETH
                        amount: "0"
                      addressId: 0x316D046b0Ce356F248b215B01b459f8b8f77E5a7
                    preparationAddressBalanceSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 82a03be0-4612-4eec-80da-85724b0db769
              schema:
                $ref: '#/components/schemas/AutoExecuteSearchAddressBalanceResponseSchema'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Address not valid:
                  description: Address not valid
                  summary: Invalid address
                  value:
                    code: ADD04002
                    description: 'The address provided: rJWA2US129duH761aoRsX3qZv6ubAKLCX,
                      is not valid a valid address for xrp ledger'
                    category: Validation Error
                Bitcoin not supported:
                  description: Bitcoin not supported
                  summary: Bitcoin Not Supported
                  value:
                    code: PRP04001
                    description: Currently, the address-balance-query is not supported
                      on the bitcoin testnet
                    category: Validation Error
                Address id param must be provided:
                  description: Address id param must be provided
                  summary: Empty Path Parameter
                  value:
                    code: ADD04009
                    description: API request must include an address as a path parameter.
                    category: Validation Error
                Technology or network not supported:
                  description: Technology or network not supported
                  summary: Technology or Network Not Supported
                  value:
                    code: TXN04005
                    description: Overledger does not currently support the requested
                      technology or network.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/autoexecution/search/address/balance/0x316d046b0ce356f248b215b01b459f8b8f77e5a7
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare and automatically execute a search for an address balance on
        a DLT.
      tags:
      - Address Search
  /v2/execution/search/address/sequence:
    post:
      description: Takes a request ID, searches for the address and retrieves the
        sequence on the requested DLT. This API is only applicable for account based
        DLT's
      operationId: executePreparedSearchRequestAddressSequence
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: requestId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Response:
                  description: Execute Response
                  value:
                    sequence: "1848"
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    addressId: 0x650A87cfB9165C9F4Ccc7B971D971f50f753e761
              schema:
                $ref: '#/components/schemas/ExecuteSearchSequenceResponse'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a search for an address sequence on a DLT
      tags:
      - Address Search
  /v2/autoexecution/search/smartcontract:
    post:
      description: Generates a request ID and automatically executes the smart contract
        query search on the requested DLT.
      operationId: autoExecuteSearchSmartContractQueryRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Smart contract query Search:
                description: Smart contract query Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Prepare and Failed Execute Response:
                  description: Successful Prepare and Failed Execute Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: TRS04004
                      description: Your free trial has ended.
                      category: Validation Error
                    preparationSmartContractSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: db52bd25-ff9f-49e2-ad07-7e782a70cec2
                Successful Prepare and Smart Contract not found Execute Response:
                  description: Successful Prepare and Smart Contract not found Execute
                    Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: "404"
                      description: Smart contract 0x8688b56bC4f46e6B02Bd5DFA2708adcd047d641
                        could not be found.
                      category: Validation Error
                    preparationSmartContractSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 5a20a258-fa74-4a14-b9cf-d5d2b69d7b5c
                Successful Prepare and Execute Response:
                  description: Successful Prepare and Execute Response
                  value:
                    executionSmartContractSearchResponse:
                      smartContract:
                        function:
                          functionId: 0xd4d14c42
                          name: addBytes5
                          inputParameters:
                          - type: bytes5
                            value: "0000000001"
                          outputParameters: []
                        smartContractId: 0x8688B56Bc4f46E6b02bD5DFA2708aDcd047D6410
                      location:
                        technology: Ethereum
                        network: ropsten testnet
                    preparationSmartContractSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 6c076084-509c-4bfd-bbfd-4ea32af3bcb7
              schema:
                $ref: '#/components/schemas/AutoExecuteSearchAddressBalanceResponseSchema'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Bitcoin not supported:
                  description: Bitcoin not supported
                  summary: Bitcoin Not Supported
                  value:
                    code: PRP04001
                    description: Currently, the smart-contract-query is not supported
                      on the bitcoin testnet
                    category: Validation Error
                Network is required:
                  description: Network is required
                  summary: Network data object is required.
                  value:
                    code: LOC4001
                    description: Network data object is required.
                    category: Validation Error
                OutputParameters type not supported:
                  description: OutputParameters type not supported
                  summary: OutputParameters type not supported.
                  value:
                    code: SMC04008
                    description: SmartContact.function.outputParameters.type data
                      object is not a supported type.
                    category: Validation Error
                InputParameters type not supported:
                  description: InputParameters type not supported
                  summary: InputParameters type not supported.
                  value:
                    code: SMC04005
                    description: SmartContact.function.inputParameters.type data object
                      is not a supported type.
                    category: Validation Error
                Technology is required:
                  description: Technology is required
                  summary: Technology data object is required.
                  value:
                    code: LOC4001
                    description: Technology data object is required.
                    category: Validation Error
                SmartContract Id is required:
                  description: SmartContract Id is required
                  summary: smartContract Id data object is required.
                  value:
                    code: "400"
                    description: SmartContract.smartContractId data object is required.
                    category: Validation error
                InputParameters type is required:
                  description: InputParameters type is required
                  summary: InputParameters type is required.
                  value:
                    code: SMC04007
                    description: SmartContract.function.inputParameters.type data
                      object is required.
                    category: Validation Error
                Function name invalid pattern:
                  description: Function name invalid pattern
                  summary: function name invalid pattern.
                  value:
                    code: "400"
                    description: SmartContract.function.name must match ^[a-zA-Z0-9,_
                      ]{1,50}$
                    category: Validation error
                Function name is required:
                  description: Function name is required
                  summary: function name data object is required.
                  value:
                    code: "400"
                    description: SmartContract.function.name data object is required.
                    category: Validation error
                Technology or network not supported:
                  description: Technology or network not supported
                  summary: Technology or Network Not Supported
                  value:
                    code: TXN04005
                    description: Overledger does not currently support the requested
                      technology or network.
                    category: Validation Error
                smartContract Id size limitation:
                  description: smartContract Id size limitation
                  summary: smartContract Id size must be between 0 and 44.
                  value:
                    code: "400"
                    description: smartContractId size must be between 0 and 44
                    category: Validation error
                InputParameters value is required:
                  description: InputParameters value is required
                  summary: InputParameters value is required.
                  value:
                    code: SMC04006
                    description: SmartContract.function.inputParameters.value data
                      object is required.
                    category: Validation Error
                smartContract Id invalid pattern:
                  description: smartContract Id invalid pattern
                  summary: smartContract Id invalid pattern.
                  value:
                    code: "400"
                    description: smartContractId must match the pattern ^[A-Za-z0-9]{1,44}$
                    category: Validation error
                OutputParameters type is required:
                  description: OutputParameters type is required
                  summary: OutputParameters type is required.
                  value:
                    code: SMC04010
                    description: SmartContract.function.outputParameters.type data
                      object is required.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/autoexecution/search/smartcontract
                    error: Internal Server Error
                    message: No message available
                    timestamp: "1624007506"
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare and automatically execute a search for a smart contract query
        on a DLT.
      tags:
      - Smart Contract Search
  /v2/execution/search/transaction:
    post:
      description: Takes a request ID and searches for the transaction on the requested
        DLT
      operationId: executePreparedSearchRequestTransaction
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: requestId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Response:
                  description: Execute Response
                  value:
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    type: PAYMENT
                    transaction:
                      signature:
                      - 0xb04ffb9b699a1cf1c9d63d07b16a250ba7d682b07556a4267296a09a0e112cd2
                      - 0x76352abdb2eca00e0390ba70ec822dd6cf081dff302645da04cc5c60c9ccc685
                      - "42"
                      origin:
                      - sequence: "1143"
                        originId: 0x650a87cfb9165c9f4ccc7b971d971f50f753e761
                      destination:
                      - destinationId: 0xb3ea4d180f31b4000f2fbcc58a085ef2ffd5a763
                      totalPaymentAmount:
                      - amount: "0"
                        unit: ETH
                      message: OVL SDK Test
                      transactionId: 0x124b79341eac1dbe05ad66508d0865ef2b64a2af05087457ea015af1e8b34737
                      nativeData:
                        gasRaw: 0x13880
                        blockHash: 0xf4291d3de8b16499523eea3b164d69918d157a4d2d3a5e6995d7d9e4baf4702c
                        transactionIndexRaw: 0x2
                        valueRaw: 0x0
                        transactionIndex: 2
                        nonce: 1143
                        input: 0x4f564c2053444b2054657374
                        gasPriceRaw: 0x1dcd65000
                        r: 0xb04ffb9b699a1cf1c9d63d07b16a250ba7d682b07556a4267296a09a0e112cd2
                        s: 0x76352abdb2eca00e0390ba70ec822dd6cf081dff302645da04cc5c60c9ccc685
                        blockNumberRaw: 0x99bff5
                        nonceRaw: 0x477
                        chainId: 3
                        v: 42
                        blockNumber: 10076149
                        gas: 80000
                        from: 0x650a87cfb9165c9f4ccc7b971d971f50f753e761
                        to: 0xb3ea4d180f31b4000f2fbcc58a085ef2ffd5a763
                        value: 0
                        hash: 0x124b79341eac1dbe05ad66508d0865ef2b64a2af05087457ea015af1e8b34737
                        gasPrice: 8000000000
                    timestamp: "1624007506"
                    status:
                      code: TXN1003
                      description: Transaction successful
                      message: Transaction successful
                      value: SUCCESSFUL
                      timestamp: "1624007506"
              schema:
                $ref: '#/components/schemas/ExecuteSearchTransactionResponse'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: "400"
                    description: 'java.lang.IllegalArgumentException: Invalid UUID
                      string: 1'
                    category: Constraint Violations
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a search for a transaction on a DLT
      tags:
      - Transaction Search
  /v2/resourcemonitoring/smartcontractevents:
    get:
      description: Returns a list of smart contracts being monitored for your application
        and the corresponding Resource Monitoring ID
      operationId: getListOfSmartContractEvents
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                List Resource Monitoring:
                  description: List Resource Monitoring
                  value:
                  - resourceMonitoring:
                      resourceMonitoringId: 808697d9-9383-4841-9d2c-e7880850116a
                      location:
                        technology: Ethereum
                        network: Ropsten
                      type: Address
                      timestamp: 2021-06-09T14:59:15.509Z
                      status:
                        code: MON1001
                        description: Resource Monitoring Inactive
                        message: MON1001 - Resource Monitoring is currently paused.
                        value: INACTIVE
                        timestamp: 2021-06-09T14:59:15.509Z
              schema:
                items:
                  $ref: '#/components/schemas/SmartContractMonitoringSchema'
                type: array
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve a list of smart contracts being monitored
      tags:
      - Manage Monitored Resources
  /v2/autoexecution/search/transaction:
    post:
      description: Generates a request ID and automatically executes the transaction
        search on the requested DLT.
      operationId: autoExecuteSearchTransactionRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: transactionId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Prepare And Execute Transaction Search:
                description: Prepare And Execute Transaction Search
                summary: Prepare And Execute Transaction Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Prepare and Failed Execute Response:
                  description: Successful Prepare and Failed Execute Response
                  value:
                    executionTransactionSearchOverledgerErrorResponse:
                      code: TRS04004
                      description: Your free trial has ended.
                      category: Validation Error
                    preparationTransactionSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: db52bd25-ff9f-49e2-ad07-7e782a70cec2
                Successful Prepare and Execute Response:
                  description: Successful Prepare and Execute Response
                  value:
                    preparationTransactionSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 50574948-b140-47a7-a897-1bd9f6ef0929
                    executionTransactionSearchResponse:
                      location:
                        technology: Ethereum
                        network: Ropsten Testnet
                      type: CONTRACT_CREATION
                      transaction:
                        signature:
                        - 0xeaae6e89e19d65daf570f7926e19dddcec5c0cba81fc8b15794f05e6cc49a924
                        - 0x45048a7377deeab5b29b3a497107f616be27d46b5127188613f1cff9f5d087e9
                        - "28"
                        origin:
                        - sequence: "3"
                          originId: 0xfc4f441e29a38a6323fa4da998227b0ff9e0cd45
                        destination:
                        - destinationId: 0x4a02c0dc2658b12c77a35307c091b8eec60c1a62
                        totalPaymentAmount:
                        - amount: "0"
                          unit: ETH
                        transactionId: 0x64c8b77426e500e7ac9af3c1c79c60ea5b325bc6b5f4238fb6d62a91f6b70275
                        nativeData:
                          gasRaw: 0x5817f
                          blockHash: 0xad8d1b5d73ae5384202f4455c498b86ea42d12ea1473128e6300bf4529964fd9
                          transactionIndexRaw: 0x4
                          valueRaw: 0x0
                          transactionIndex: 4
                          type: 0x0
                          nonce: 3
                          gasPriceRaw: 0x3b9aca0e
                          input: 0x608060405234801561001057600080fd5b506127106000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103d6806100656000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637bd703e81461004657806390b98a111461009e578063f8b2cb4f14610104575b600080fd5b6100886004803603602081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061015c565b6040518082815260200191505060405180910390f35b6100ea600480360360408110156100b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610200565b604051808215151515815260200191505060405180910390f35b6101466004803603602081101561011a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610359565b6040518082815260200191505060405180910390f35b60007388c1ca5917c29a361fed82d98a1492617515f8146396e4ee3d61018184610359565b60026040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156101be57600080fd5b505af41580156101d2573d6000803e3d6000fd5b505050506040513d60208110156101e857600080fd5b81019080805190602001909291905050509050919050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102515760009050610353565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190505b92915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905091905056fea265627a7a72315820dc4476efcd2381d275d9c3bced7d4316d8c557c2e03ece057484ee7dfdc733ac64736f6c63430005100032
                          r: 0xeaae6e89e19d65daf570f7926e19dddcec5c0cba81fc8b15794f05e6cc49a924
                          s: 0x45048a7377deeab5b29b3a497107f616be27d46b5127188613f1cff9f5d087e9
                          blockNumberRaw: 0xab53b0
                          nonceRaw: 0x3
                          v: 28
                          blockNumber: 11228080
                          gas: 360831
                          creates: 0x4a02c0dc2658b12c77a35307c091b8eec60c1a62
                          from: 0xfc4f441e29a38a6323fa4da998227b0ff9e0cd45
                          value: 0
                          hash: 0x64c8b77426e500e7ac9af3c1c79c60ea5b325bc6b5f4238fb6d62a91f6b70275
                          gasPrice: 1000000014
                      timestamp: "1624007506"
                      status:
                        code: TXN1003
                        description: Transaction successful
                        message: Transaction successful
                        value: SUCCESSFUL
                        timestamp: "1624007506"
              schema:
                $ref: '#/components/schemas/PrepareAndExecuteTransactionResponse'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: ""
                    description: transaction ID 0x64c8b77426e500e7ac9af3c1c79c60ea5b325bc6b5f4238fb6d62a91f6b702
                      for Ethereum is the incorrect format.
                    category: ""
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: ""
                    description: Transaction ID da2e77de3edb175744ff8502ad9dbcfbfe070a156aec6714823a621cd4bf355f
                      was not found on Bitcoin DLT Connector.
                    category: ""
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare and automatically execute a search for a transaction on a DLT.
      tags:
      - Transaction Search
  /v2/preparation/search/utxo/{utxoId}:
    post:
      description: Returns a request ID for executing a search for the status ofa
        UTXO on UTXO based DLT's
      operationId: prepareSearchUTXOState
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: utxoId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: '^[a-zA-Z0-9-: ]{1,100}$'
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              UTXO Transaction Search:
                description: UTXO Transaction Search
                summary: UTXO Transaction Search
                value:
                  location:
                    technology: Bitcoin
                    network: Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: 13765b06-eaf3-4f02-acb4-b7e9da8b0380
              schema:
                $ref: '#/components/schemas/PrepareSearchResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare Search for a UTXO State.
      tags:
      - UTXO Status Search
  /v2/execution/search/block:
    post:
      description: Takes a request ID and searches for the block on the requested
        DLT based on the parameters specified in the prepare request
      operationId: executePreparedSearchRequestBlock
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: requestId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Response:
                  description: Execute Response
                  value:
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    block:
                      blockId: 0xb67dd34c0182e3da1db437914dcac38349a4565177ed1fabf2bf430a10a51002
                      number: 10463066
                      transactionIds:
                      - 0x23f735f928b965338b6106d3a5498d1c917636356cde5eff387be9057a89600a
                      - 0x5be54c39aa333c179780835e71d0aa53ace947e87cbe773f78e01d3ec1d3c2f5
                      - 0xa1d2ffb6fce00c2a88d3ce6009ba2a0292be0833b1a5b44dff29f4f45bf8eb55
                      - 0x24772822aafbecdc13d8b7beb47409c4aedd51d2085f613285c5170b452589b4
                      - 0xe6cbe261766fd39b97a804010ce0ab4a41343435669d0034bfbe4ca148a37a53
                      - 0xf3858d514aecba7269053073f8d8c0c60e28caf5d57862283284e65000d97402
                      - 0x411c05394cc2945dc5db398caa99f1fb298d9e00f169aa951c95df44cf2faec5
                      - 0x035be53f62cf734f9d5b5e24865bdb887972c0eb4fb969a07ddc73548cfd073f
                      - 0x8e652054607f55fb37662e92131f89a4cfe47a434c35dc1773be7617d490e3a0
                      - 0xc522af58fe60a117f253885e25002623e914691ae3ea690a0d001508cb12c27b
                      - 0x4bf99363f2b761178841dfd81d5b0a8685fc93ba79971f04b3985e182207a0dc
                      - 0x84aede3ee9d86ed657af280ed50f81869e93ea5f506460f2b20014cd8b31dc87
                      - 0x7a2553921c527b764e10ded79f0776f982ba655f5a95a8249579a5fe1dd06454
                      - 0x43b7b1e933a7f96bb6071d572b42d2383638a77a4880873d11e4b714cf985242
                      - 0x855e6186a26e5e135de3749379e10e5801174bb5bf731545b468f50c98368b8f
                      - 0x1610909fc0115cfd5f529f7203046897c5efd4edafac704c0fe82ab05a4d546e
                      - 0x4694fbd19645f7f33d9ec20ff3cf94bbc65faaf6af7bcb1661e19055497ba77e
                      - 0xfac3052e8325e6e28b09a787fc10c9f6eba025aa264b9cb3162c269878053bd2
                      - 0x640b80e30e5d52672a7da74ccc3e93ee415e227829d85745b602642ba2361b2e
                      - 0xe9ac6eefeb5e114e11c83a1e8efa014166078514ce80d331f2702ad2473e6a6d
                      size:
                      - type: MEMORY
                        value: "51701"
                      - type: COMPUTATION
                        value: "5283861"
                      hashes:
                      - type: PARENT_HASH
                        value: 0xc8638744e19f70f5cb3f04b5972ba7a66ba1070ec4fe3ccf7bb82976b1d69407
                      - type: BLOCK_HASH
                        value: 0xb67dd34c0182e3da1db437914dcac38349a4565177ed1fabf2bf430a10a51002
                      - type: TRANSACTIONS_MERKLE_ROOT
                        value: 0xd4ab2a26720b544f65e48aaf7fb8c8a334c9b02c6d8ecb6d205907733d399ff1
                      - type: STATE_MERKLE_ROOT
                        value: 0xb442598a07d4c208757d270d73bb2e61c1885039a6c8e8b06a12a6796dac68b4
                      - type: TRANSACTION_RECEIPTS_MERKLE_ROOT
                        value: 0x8c5000c1da750dc69a4fca3c785d1346224982bfef3b3142cb04f2289fce83bb
                      linkedBlocks:
                        parent: 0xc8638744e19f70f5cb3f04b5972ba7a66ba1070ec4fe3ccf7bb82976b1d69407
                        child: 0x64040d7cf80d6f77dd01537bfb765423908fd2e0d7933a0ef5f10a113cf5b89e
                      numberOfTransactions: 20
                      message: 0xdb830302068c4f70656e457468657265756d86312e35312e30826c69
                      timestamp: "1624007506"
                      nativeData:
                        logsBloom: 0x01280000010400000000000080004082000000444020400008010100000800100000820000001480000000000000000000000000104200200c0080014820040004060000000840000000000800044060080001084018002000c000008000000802a0800802001082510080000440280800000a0000000000010000120020408000800300030800800044000000410400000004212320802c88008040000060808000000001a000020010000000000000000020022208005000001005000000000000000200c000000400001004805040040000214880001000002200080030002000220800010101020a00000010000004602000000000400021202800080408
                        totalDifficulty: 33823156854004820
                        receiptsRoot: 0x8c5000c1da750dc69a4fca3c785d1346224982bfef3b3142cb04f2289fce83bb
                        extraData: 0xdb830302068c4f70656e457468657265756d86312e35312e30826c69
                        transactions:
                        - 0x23f735f928b965338b6106d3a5498d1c917636356cde5eff387be9057a89600a
                        - 0x5be54c39aa333c179780835e71d0aa53ace947e87cbe773f78e01d3ec1d3c2f5
                        - 0xa1d2ffb6fce00c2a88d3ce6009ba2a0292be0833b1a5b44dff29f4f45bf8eb55
                        - 0x24772822aafbecdc13d8b7beb47409c4aedd51d2085f613285c5170b452589b4
                        - 0xe6cbe261766fd39b97a804010ce0ab4a41343435669d0034bfbe4ca148a37a53
                        - 0xf3858d514aecba7269053073f8d8c0c60e28caf5d57862283284e65000d97402
                        - 0x411c05394cc2945dc5db398caa99f1fb298d9e00f169aa951c95df44cf2faec5
                        - 0x035be53f62cf734f9d5b5e24865bdb887972c0eb4fb969a07ddc73548cfd073f
                        - 0x8e652054607f55fb37662e92131f89a4cfe47a434c35dc1773be7617d490e3a0
                        - 0xc522af58fe60a117f253885e25002623e914691ae3ea690a0d001508cb12c27b
                        - 0x4bf99363f2b761178841dfd81d5b0a8685fc93ba79971f04b3985e182207a0dc
                        - 0x84aede3ee9d86ed657af280ed50f81869e93ea5f506460f2b20014cd8b31dc87
                        - 0x7a2553921c527b764e10ded79f0776f982ba655f5a95a8249579a5fe1dd06454
                        - 0x43b7b1e933a7f96bb6071d572b42d2383638a77a4880873d11e4b714cf985242
                        - 0x855e6186a26e5e135de3749379e10e5801174bb5bf731545b468f50c98368b8f
                        - 0x1610909fc0115cfd5f529f7203046897c5efd4edafac704c0fe82ab05a4d546e
                        - 0x4694fbd19645f7f33d9ec20ff3cf94bbc65faaf6af7bcb1661e19055497ba77e
                        - 0xfac3052e8325e6e28b09a787fc10c9f6eba025aa264b9cb3162c269878053bd2
                        - 0x640b80e30e5d52672a7da74ccc3e93ee415e227829d85745b602642ba2361b2e
                        - 0xe9ac6eefeb5e114e11c83a1e8efa014166078514ce80d331f2702ad2473e6a6d
                        nonce: "13962578926352311470"
                        miner: 0x635b4764d1939dfacd3a8014726159abc277becc
                        difficulty: 1997831755
                        number: 10463066
                        gasLimit: 8000029
                        gasUsed: 5283861
                        uncles: []
                        sha3Uncles: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
                        size: 51701
                        transactionsRoot: 0xd4ab2a26720b544f65e48aaf7fb8c8a334c9b02c6d8ecb6d205907733d399ff1
                        stateRoot: 0xb442598a07d4c208757d270d73bb2e61c1885039a6c8e8b06a12a6796dac68b4
                        mixHash: 0xfbbb4da4c5f2bc6c53a220e41a6576e824b6042eca78087b1f32a38edfb244c5
                        parentHash: 0xc8638744e19f70f5cb3f04b5972ba7a66ba1070ec4fe3ccf7bb82976b1d69407
                        hash: 0xb67dd34c0182e3da1db437914dcac38349a4565177ed1fabf2bf430a10a51002
                        timestamp: "1624007506"
                    status:
                      code: BLK1003
                      description: Block is confirmed in the blockchain
                      message: Block is successful.
                      value: SUCCESSFUL
                      timestamp: "1624007506"
              schema:
                $ref: '#/components/schemas/ExecuteSearchBlockResponse'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a search for a block on a DLT
      tags:
      - Block Search
  /v2/mdapptransactions:
    get:
      description: Returns a list of transactions and the corresponding Overledger
        Transaction ID your application has created in Overledger. Does not require
        a Prepare step, as this data is held within Overledger, rather than on the
        DLT
      operationId: getOvlTransactionsByClientId
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: length
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List Overledger Transactions:
                  description: List Overledger Transactions
                  value:
                  - requestId: f5023411-20b6-456d-9966-b01dd5fddb32
                    overledgerTransactionId: c73135fb-7264-4183-93e8-b067f03ecda1
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    transactionId: 0xa9b1529e1f2ebaed7c865b1e24e283f905e0b9cc2a2cbe6ba80b987deb6780db
                    status:
                      code: TXN1003
                      description: Transaction successful
                      message: Transaction successful
                      value: SUCCESSFUL
                      timestamp: 2021-08-06T16:45:53.496463Z
                    timestamp: 2021-08-06T16:42:18.220242Z
                  - requestId: a3a091d3-6718-4e77-afb5-0cd3ffc266bf
                    overledgerTransactionId: c849b101-dd64-4100-a809-7812cf64dbcb
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    transactionId: 0x401ab7fafc12b97d63ec825de6557b8f13b077373e1bb4ded62b4b263c0a2e23
                    status:
                      code: TXN1003
                      description: Transaction successful
                      message: Transaction successful
                      value: SUCCESSFUL
                      timestamp: 2021-08-06T16:46:23.482390Z
                    timestamp: 2021-08-06T16:43:02.644028Z
              schema:
                items:
                  $ref: '#/components/schemas/OverledgerTransactionResponseSchema'
                type: array
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/mdapptransaction/c849b101-dd64-4100-a809-7812cf64dbcb
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve a list of transactions created by your application in Overledger
      tags:
      - mDapp Transaction Query
  /v2/execution/transaction:
    post:
      description: Takes a request ID and submits a signed transaction to the requested
        DLT.
      operationId: executePreparedRequestTransaction
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Execute Transaction:
                description: Execute Transaction
                summary: Execute Transaction
                value:
                  requestId: 79763168-a4f9-42bf-9f10-2e08491136a7
                  signed: 0xf8a9398501ef4f86e682a0c294f9cd6c86992fce1481dbc4bdb7e1b101c1e8cee280b844a9059cbb000000000000000000000000d8b31b65878a6b1a6caf9f4819c1a42d68a7a11600000000000000000000000000000000000000000000000000038d7ea4c6800029a088680bffd2eb74053e968ac8bcd1f76beaa61b353d8616a8cc559e57685080bea07a77b7591f09290fbb9cda5263471e8a9ca46f4c7b30d6a4885e583771d809f5
            schema:
              $ref: '#/components/schemas/ExecuteTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Bitcoin:
                  description: Bitcoin
                  value:
                    urgency: normal
                    requestId: 5d4935ae-d395-4cc7-a7e6-3777127cfd09
                    overledgerTransactionId: ac71c2f4-ab67-434f-b83a-4514ce10847a
                    location:
                      technology: Bitcoin
                      network: Testnet
                    type: payment
                    transactionId: 320034aa1ea43541fcdcfa65ef7e127c19935b532bc59f92ad227370011d9cef
                    status:
                      code: TXN1002
                      description: The transaction has been successfully broadcasted
                        to the network. The status will next be updated after a sufficient
                        block number has been reached. At this point we can be confident
                        that the transaction will be successful or will have failed.
                      message: Transaction is pending.
                      value: PENDING
                      timestamp: "1624007506"
                Ethereum:
                  description: Ethereum
                  value:
                    urgency: normal
                    requestId: 012c6f4e-926e-47b8-b3f0-acfa056cd017
                    overledgerTransactionId: 1f50d3ce-6ede-4540-8f49-1718d9e4a96a
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    type: PAYMENT
                    transactionId: 0x6c497169f22fa420bfb96669960c15ab53caf4d9162f2c0d0a3ff29121773597
                    status:
                      code: TXN1002
                      description: The transaction has been successfully broadcasted
                        to the network. The status will next be updated after a sufficient
                        block number has been reached. At this point we can be confident
                        that the transaction will be successful or will have failed.
                      message: Transaction is pending.
                      value: PENDING
                      timestamp: "1624007506"
                Smart Contract Invoke:
                  description: Smart Contract Invoke
                  value:
                    urgency: normal
                    requestId: 609e2199-db0c-4528-baf3-7392f026dae2
                    overledgerTransactionId: b5c62bda-58cb-47c6-9b21-971f55030881
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    type: Contract Invoke
                    transactionId: 0x5a9b7f8d44ad0bdddf58705cf886b501d6a5a017729d2ca96765a3421e9e84db
                    status:
                      code: TXN1002
                      description: The transaction has been successfully broadcasted
                        to the network. The status will next be updated after a sufficient
                        block number has been reached. At this point we can be confident
                        that the transaction will be successful or will have failed.
                      message: Transaction is pending.
                      value: PENDING
                      timestamp: "1624007506"
                XRP Ledger:
                  description: XRP Ledger
                  value:
                    urgency: normal
                    requestId: df84a5d4-23ea-4390-96a6-965053e1ce04
                    overledgerTransactionId: 9c7cfa58-e07f-4843-ac75-1b356063da9f
                    location:
                      technology: XRP Ledger
                      network: Testnet
                    type: payment
                    transactionId: 8FA814AB243AC4ABB170C4ED3069F4364CA3B0E092C6767192A9D1C8BDE2B67C
                    status:
                      code: TXN1002
                      description: The transaction has been successfully broadcasted
                        to the network. The status will next be updated after a sufficient
                        block number has been reached. At this point we can be confident
                        that the transaction will be successful or will have failed.
                      message: The transaction was applied. Only final in a validated
                        ledger.
                      value: PENDING
                      timestamp: "1624007506"
              schema:
                $ref: '#/components/schemas/ExecuteTransactionResponse'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a transaction on the DLT
      tags:
      - Create Transaction
  /v2/webhook/subscription/{subscriptionId}:
    delete:
      description: Deletes a subscription created by your application based onthe
        given Subscription ID. Deleting a subscription will stop updates being sent
        to the requested callback URL
      operationId: deleteSubscription
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          maxLength: 24
          minLength: 0
          pattern: ^[a-z0-9-]{1,24}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                "200 Delete Successful":
                  description: 200 Delete Successful
                  value:
                    subscriptionDetails:
                      ids:
                      - 3606e1a2-ae85-4676-8fb3-40917cb63bd4
                      status:
                        code: SUB1002
                        description: Subscription Deleted.
                        message: Subscription has been deleted and will no longer
                          send updates to the relevant callback URL
                        value: DELETED
                        timestamp: 2021-09-15T09:15:40.530993Z
                    callbackUrl: https://test-post.free.beeceptor.com/comments
                    subscriptionId: 6141b9bcb65cf749ea893c45
                    type: resourceMonitoringId
              schema:
                $ref: '#/components/schemas/SubscriptionDeletionResponse'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                "404 Not Found":
                  description: 404 Not Found
                  value:
                    code: SUB2403
                    description: SUB2403 - Subscription 6141b9bcb65cf749ea893c45 does
                      not exist.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: You do not currently have any subscriptions
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/webhook/subscription/61406222b65cf749ea893c1a
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T10:40:57.801+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Remove a subscription created by your application
      tags:
      - Manage Subscription
    patch:
      description: Updates the subscription callback URL and/or the subscription status
        to be either active or track only for the given Subscription ID. Updating
        the status to be track only will pause updates being sent to the requested
        callback URL
      operationId: updateSubscription
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          maxLength: 24
          minLength: 0
          pattern: ^[a-z0-9-]{1,24}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update Subscription:
                description: Update Subscription
                summary: Update Subscription
                value:
                  statusUpdate:
                    value: ACTIVE
                  callbackUrl: https://newcallbackUrl/endpoint
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                "200 Update Success":
                  description: 200 Update Success
                  value:
                    subscriptionDetails:
                      ids:
                      - 73bdc298-525e-4848-9510-5f12a6b43224
                      status:
                        code: SUB1001
                        description: SUB1001
                        message: Subscription existed but is not currently active.
                          Currently only monitoring is in place.
                        value: TRACK ONLY
                        timestamp: 2021-09-14T08:49:38.741488Z
                    callbackUrl: https://test-post.free.beeceptor.com/comments
                    subscriptionId: 61406222b65cf749ea893c1a
                    type: resourceMonitoringId
              schema:
                $ref: '#/components/schemas/SubscriptionUpdateResponse'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                "404 Not Found":
                  description: 404 Not Found
                  value:
                    code: SUB2403
                    description: SUB2403 - Subscription 61406222b65cf749ea893c1 does
                      not exist.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: You do not currently have any subscriptions
        "405":
          content:
            application/json:
              examples:
                "405 Method is not allowed":
                  description: 405 Method is not allowed
                  value:
                    code: SUB2404
                    description: ' SUB2404 - Status cannot be changed from ACTIVE
                      to INACTIVE.'
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Method is not allowed
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/webhook/subscription/61406222b65cf749ea893c1a
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T10:40:57.801+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Update a specific subscription created by your application
      tags:
      - Manage Subscription
  /v2/preparation/search/address/sequence/{addressId}:
    post:
      description: Perform an address sequence search on the requested DLT.Returns
        a request ID to execute
      operationId: prepareAddressSequenceSearchRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: addressId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Address Sequence Search:
                description: Address Sequence Search
                summary: Address Sequence Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: 13765b06-eaf3-4f02-acb4-b7e9da8b0380
              schema:
                $ref: '#/components/schemas/PrepareSearchResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare Search for an Address Sequence.
      tags:
      - Address Search
  /v2/preparation/transaction:
    post:
      description: "Transforms a transaction request into a payload ready for signing\
        \ for the requested DLT and returns a request ID for executing. Supported\
        \ transaction types in this release are \"Payment\" (to send payments) and\
        \ \"Smart Contract Invoke\" (to invoke arbitrary smart contract functions).\
        \ \n Warning: Bitcoin transaction fees will be deducted from the last destination\
        \ provided in the transaction payment request. If the last destination payment\
        \ value is not enough to cover the fees, your Bitcoin payment transaction\
        \ will fail."
      operationId: prepareTransactionRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ERC20 Payment:
                description: ERC20 Payment
                summary: ERC20 Payment
                value:
                  urgency: normal
                  requestDetails:
                    overledgerSigningType: overledger-javascript-library
                    origin:
                    - originId: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39d
                    destination:
                    - payment:
                        amount: "0.001"
                        unit: QNT
                      destinationId: 0xd8b31B65878a6B1a6cAf9f4819C1A42d68a7A116
                    message: Example message here
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: PAYMENT
              ERC721 Transfer:
                description: ERC721 Transfer
                summary: ERC721 Transfer
                value:
                  urgency: normal
                  requestDetails:
                    overledgerSigningType: overledger-javascript-library
                    origin:
                    - originId: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39d
                    destination:
                    - transfer:
                        tokenId: "6"
                        tokenName: QNTNFT
                      destinationId: 0x8917cf2A57DF39D311a96c53FCCA76dAFB25392B
                    message: Example message here
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: Transfer
              Bitcoin:
                description: Bitcoin
                summary: Bitcoin Payment
                value:
                  urgency: normal
                  requestDetails:
                    overledgerSigningType: overledger-javascript-library
                    origin:
                    - originId: 3d6e8f9904f53b29fd0791b89ed0cb460485f359808f25f65b35beb8de15a47e:0
                    destination:
                    - payment:
                        amount: "0.01718383"
                        unit: BTC
                      destinationId: miArbiuPSMbyZZbetikbkauxDu8Y7ZDhX1
                    message: sample Message
                  location:
                    technology: Bitcoin
                    network: Testnet
                  type: payment
              Ethereum:
                description: Ethereum
                summary: Ethereum Payment
                value:
                  urgency: normal
                  requestDetails:
                    overledgerSigningType: overledger-javascript-library
                    origin:
                    - originId: 0x03B651d2251eA03cf3ceD600E3B4948303A94BE6
                    destination:
                    - payment:
                        amount: "0.00001"
                        unit: ETH
                      destinationId: 0xfD218E9A20400535ffaa8FAe54D07d375B3A3827
                    message: sample Message
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: PAYMENT
              Smart Contract Invoke:
                description: Smart Contract Invoke
                summary: Smart Contract Invoke
                value:
                  urgency: normal
                  requestDetails:
                    origin:
                    - originId: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39d
                    destination:
                    - smartContract:
                        function:
                          name: transfer
                          inputParameters:
                          - type: address
                            value: 0xd8b31B65878a6B1a6cAf9f4819C1A42d68a7A116
                          - type: uint256
                            value: "1000000000000000"
                      payment:
                        amount: "0.00"
                        unit: ETH
                      destinationId: 0xF9cd6C86992Fce1481dBc4bDB7E1b101c1e8cEE2
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: Contract Invoke
              Polygon:
                description: Polygon
                summary: Polygon Payment
                value:
                  urgency: normal
                  requestDetails:
                    overledgerSigningType: overledger-javascript-library
                    origin:
                    - originId: 0x03B651d2251eA03cf3ceD600E3B4948303A94BE6
                    destination:
                    - payment:
                        amount: "0.00001"
                        unit: MATIC
                      destinationId: 0xfD218E9A20400535ffaa8FAe54D07d375B3A3827
                    message: sample Message
                  location:
                    technology: Ethereum
                    network: Polygon Mumbai Testnet
                  type: PAYMENT
              XRP Ledger:
                description: XRP Ledger
                summary: XRP Ledger Payment
                value:
                  urgency: normal
                  requestDetails:
                    overledgerSigningType: overledger-javascript-library
                    origin:
                    - originId: rhTa8RGotyJQAW8sS2tFVVfvcHYXaps9hC
                    destination:
                    - payment:
                        amount: "1"
                        unit: XRP
                      destinationId: rKoGTTkPefCuQR31UHsfk9jKnrQHz6LtKe
                    message: sample Message
                  location:
                    technology: XRP Ledger
                    network: Testnet
                  type: payment
            schema:
              $ref: '#/components/schemas/PreparePaymentTransactionRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: e566fab4-141d-445e-8c3c-e936c553cc99
                    dltFee:
                      amount: "0.000061839000453486"
                      unit: ETH
                    nativeData:
                      data: 0xa9059cbb000000000000000000000000d8b31b65878a6b1a6caf9f4819c1a42d68a7a11600000000000000000000000000000000000000000000000000038d7ea4c68000
                      chainId: 3
                      gas: "41226"
                      to: 0xF9cd6C86992Fce1481dBc4bDB7E1b101c1e8cEE2
                      nonce: 122
                      value: "0"
                      gasPrice: "1500000011"
              schema:
                $ref: '#/components/schemas/PrepareTransactionResponse'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04036
                    description: Technology data object is required and must be either
                      Ethereum, XRP Ledger or Bitcoin.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare a DLT transaction for signing
      tags:
      - Create Transaction
  /v2/resourcemonitoring/address:
    post:
      description: Overledger creates a tracking record for the given address and
        records information each time the given address receives or sends transactions
        on the DLT
      operationId: resourceMonitoringAddress
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Monitor Address:
                description: Monitor Address
                summary: Monitor Address
                value:
                  callBackURL: https://callbackurl/endpoint
                  location:
                    technology: Ethereum
                    network: Ropsten
                  addressId: 0xd8b31B65878a6B1a6cAf9f4819C1A42d68a7A116
            schema:
              $ref: '#/components/schemas/AddressMonitoringRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create Resource Monitoring:
                  description: Create Resource Monitoring
                  value:
                    subscriptionDetails:
                      ids:
                      - 42c2452b-6af9-4238-aacf-4669864cd879
                      status:
                        code: SUB1000
                        description: Subscription Successful.
                        message: Subscription has been set up successfully and updates
                          will be sent to the relevant callback URL.
                        value: ACTIVE
                        timestamp: 2021-09-22T11:24:47.082521Z
                    resourceMonitoring:
                      resourceMonitoringId: 42c2452b-6af9-4238-aacf-4669864cd879
                      location:
                        technology: Ethereum
                        network: Ropsten
                      type: Address
                      timestamp: 2021-09-22T11:24:46.530619Z
                      status:
                        code: MON1000
                        description: Resource Monitoring Successful
                        message: MON1000 - Resource Monitoring has been set up successfully.
                        value: ACTIVE
                        timestamp: 2021-09-22T11:24:47.176055Z
                    subscription:
                      callbackUrl: https://test-post.free.beeceptor.com/comments
                      subscriptionId: 614b127f60a15b6def675af3
                      type: resourceMonitoringId
              schema:
                $ref: '#/components/schemas/AddressMonitoringResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Monitor an address for incoming and outgoing transactions
      tags:
      - Monitor a Resource
  /v2/preparation/nativetransaction:
    post:
      description: Allows advanced developers to submit their own DLT native transactions
        via Overledger. Returns a request ID for executing a DLT native transaction
        on the requested DLT
      operationId: prepareNativeTransaction
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Native Transaction:
                description: Native Transaction
                summary: Native Transaction
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: Native Transaction
            schema:
              $ref: '#/components/schemas/PrepareNativeTransactionRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: 13765b06-eaf3-4f02-acb4-b7e9da8b0380
              schema:
                $ref: '#/components/schemas/PrepareSearchResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare a DLT native transaction
      tags:
      - Create Transaction
  /v2/preparation/search/address/balance/{addressId}:
    post:
      description: Perform an address balance search on the requested DLT. Returns
        a request ID to execute
      operationId: prepareAddressBalanceSearchRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: addressId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Address Balance Search:
                description: Address Balance Search
                summary: Address Balance Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: 13765b06-eaf3-4f02-acb4-b7e9da8b0380
              schema:
                $ref: '#/components/schemas/PrepareSearchResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare Search for an Address Balance.
      tags:
      - Address Search
  /v2/resourcemonitoring:
    get:
      description: Returns a list of all of the resources being monitored for your
        application and the corresponding Resource Monitoring ID
      operationId: getListOfResources
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                List Resource Monitoring:
                  description: List Resource Monitoring
                  value:
                  - resourceMonitoring:
                      resourceMonitoringId: 808697d9-9383-4841-9d2c-e7880850116a
                      location:
                        technology: Ethereum
                        network: Ropsten
                      type: Address
                      timestamp: 2021-06-09T14:59:15.509Z
                      status:
                        code: MON1001
                        description: Resource Monitoring Inactive
                        message: MON1001 - Resource Monitoring is currently paused.
                        value: INACTIVE
                        timestamp: 2021-06-09T14:59:15.509Z
              schema:
                items:
                  $ref: '#/components/schemas/SmartContractMonitoringSchema'
                type: array
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve a list of all resources being monitored
      tags:
      - Manage Monitored Resources
  /v2/autoexecution/search/utxo/{utxoId}:
    post:
      description: Generates a request ID and automatically executes the utxo search
        on the requested DLT.
      operationId: autoExecuteSearchUtxoRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: utxoId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: '^[a-zA-Z0-9-: ]{1,100}$'
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              UTXO Search:
                description: UTXO Search
                summary: UTXO Search
                value:
                  location:
                    technology: Bitcoin
                    network: Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Prepare and Address transaction not found Execute Response:
                  description: Successful Prepare and Address transaction not found
                    Execute Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: "404"
                      description: No Transaction can be found for UTXO:74f513dae1a7c238eda6e2b3e667a4b0e75f422882512466dd2d5ea702c43466
                        on Bitcoin testnet
                      category: Overledger Error
                    preparationUtxoSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: d96894c1-e516-42dd-bbdb-0cdd9b961885
                Successful Prepare and Address vout not found Execute Response:
                  description: Successful Prepare and Address vout not found Execute
                    Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: "404"
                      description: 'UTXO not found for transaction Id: 74f513dae1a7c238eda6e2b3e667a4b0e75f422882512466dd2d5ea702c43465,
                        vout: 2'
                      category: Overledger Error
                    preparationUtxoSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: f02447b2-33bf-4dc8-a94c-730ff7e55a3d
                Successful Prepare and Execute Response:
                  description: Successful Prepare and Execute Response
                  value:
                    executionUtxoSearchResponse:
                      destination:
                      - smartContract:
                          detail: OP_DUP OP_HASH160 8c202dc31b453e900cc7c14c17dd852ac517a504
                            OP_EQUALVERIFY OP_CHECKSIG
                          type: pubkeyhash
                          extraFields:
                            requiredSignatures: 1
                        payment:
                          amount: "0.0001"
                          unit: BTC
                        destinationId: mtHsSjGeVhSQVqcM3fv5A79qoSJ5TgEjtj
                      location:
                        technology: Bitcoin
                        network: testnet
                      timestamp: "1624007506"
                      status:
                        code: UNSPENT_SUCCESSFUL
                        description: The UTXO has been created in a transaction that
                          is in successful status and can be spent.
                        message: UTXO can be spent.
                        value: UTX1000
                        timestamp: "1624007506"
                      nativeData:
                        vout:
                        - scriptPubKey:
                            addresses:
                            - mtHsSjGeVhSQVqcM3fv5A79qoSJ5TgEjtj
                            asm: OP_DUP OP_HASH160 8c202dc31b453e900cc7c14c17dd852ac517a504
                              OP_EQUALVERIFY OP_CHECKSIG
                            hex: 76a9148c202dc31b453e900cc7c14c17dd852ac517a50488ac
                            type: pubkeyhash
                            reqSigs: 1
                          value: 1.0E-4
                          n: 0
                    preparationUtxoSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 970b955d-bb70-4ad4-aafe-95aebe3ec0a3
              schema:
                $ref: '#/components/schemas/AutoExecuteSearchUTXOResponseSchema'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Utxo not valid:
                  description: Utxo not valid
                  summary: Invalid utxo
                  value:
                    code: UTX04006
                    description: UTXO ID format is incorrect, the UTXO must be TransactionHash:Integer
                    category: Validation Error
                Utxo id param must be provided:
                  description: Utxo id param must be provided
                  summary: Empty Path Parameter
                  value:
                    code: UTX04002
                    description: API request must include a valid utxo ID as a path
                      parameter.
                    category: Validation Error
                Ethereum not supported:
                  description: Ethereum not supported
                  summary: Ethereum Not Supported
                  value:
                    code: PRP04001
                    description: Currently, the utxo-query is not supported on the
                      ethereum ropsten testnet
                    category: Validation Error
                Technology or network not supported:
                  description: Technology or network not supported
                  summary: Technology or Network Not Supported
                  value:
                    code: TXN04005
                    description: Overledger does not currently support the requested
                      technology or network.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/autoexecution/search/address/balance/0x316d046b0ce356f248b215b01b459f8b8f77e5a7
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare and automatically execute a search for a UTXO on a DLT.
      tags:
      - UTXO Status Search
  /v2/resourcemonitoring/smartcontractevent/{resourceMonitoringId}:
    delete:
      description: Deletes the tracking record in Overledger to stop Overledger from
        recording updates for a smart contract based on the given Resource Monitoring
        ID
      operationId: deleteEventMonitoring
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceMonitoringId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9-]{1,36}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Update Monitoring:
                  description: Update Monitoring
                  value:
                    smartContractEventMonitoringDetails:
                      eventName: mul
                      eventParameters: 0xc8a4ac9cf5aac391a07a9bdc2c522f2e824978425be99588f97394814d127214
                      smartContractId: 0x8681d54E454377451D9c6928538DB544Caa65CDf
                    resourceMonitoring:
                      resourceMonitoringId: 27a9dba9-bd0d-4d97-8aa2-373d9c5313c8
                      location:
                        technology: Ethereum
                        network: Ethereum Ropsten Testnet
                      type: Smart Contract Event
                      timestamp: 2021-09-22T12:36:40.050Z
                      status:
                        code: MON1001
                        description: Resource Monitoring Inactive.
                        message: MON1001 - Resource Monitoring is currently paused.
                        value: INACTIVE
                        timestamp: 2021-09-22T12:40:11.910117Z
              schema:
                $ref: '#/components/schemas/SmartContractMonitoringSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Stop monitoring a smart contract
      tags:
      - Manage Monitored Resources
    get:
      description: Returns the update information recorded in Overledger for asmart
        contract being monitored by your application for a given Resource Monitoring
        ID
      operationId: getMonitoredSmartContractEventDetails
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceMonitoringId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9-]{1,36}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Resource Monitoring Details:
                  description: Get Resource Monitoring Details
                  value:
                    smartContractEventHistory: []
                    smartContractEventDetails:
                      eventName: mul
                      eventParameters: 0xc8a4ac9cf5aac391a07a9bdc2c522f2e824978425be99588f97394814d127214
                      smartContractId: 0x8781d54e454377451D9C6928538Db544Caa65CDf
                    location:
                      technology: Ethereum
                      network: Ethereum Ropsten Testnet
                    type: Smart Contract Event
                    status:
                      code: MON1000
                      description: Resource Monitoring Successful
                      message: MON1000 - Resource Monitoring has been set up successfully.
                      value: ACTIVE
                      timestamp: 2021-09-15T15:09:24.279Z
                    timestamp: 2021-09-22T12:46:19.810922Z
              schema:
                $ref: '#/components/schemas/SmartContractMonitoringDetailsSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve recorded updates for a specific monitored smart contract
      tags:
      - Manage Monitored Resources
    patch:
      description: Updates the resource monitoring status to be either active or inactive
        for the given Resource Monitoring ID. Updating the status to be inactive will
        pause Overledger recording updates for the requested smart contract
      operationId: updateEventMonitoring
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceMonitoringId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9-]{1,36}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update Monitoring:
                description: Update Monitoring
                summary: Update Monitoring
                value:
                  statusUpdate:
                    value: INACTIVE
            schema:
              $ref: '#/components/schemas/StatusUpdateMonitoringRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Update Monitoring:
                  description: Update Monitoring
                  value:
                    smartContractEventMonitoringDetails:
                      eventName: mul
                      eventParameters: 0xc8a4ac9cf5aac391a07a9bdc2c522f2e824978425be99588f97394814d127214
                      smartContractId: 0x8681d54E454377451D9c6928538DB544Caa65CDf
                    resourceMonitoring:
                      resourceMonitoringId: 27a9dba9-bd0d-4d97-8aa2-373d9c5313c8
                      location:
                        technology: Ethereum
                        network: Ethereum Ropsten Testnet
                      type: Smart Contract Event
                      timestamp: 2021-09-22T12:36:40.050Z
                      status:
                        code: MON1001
                        description: Resource Monitoring Inactive.
                        message: MON1001 - Resource Monitoring is currently paused.
                        value: INACTIVE
                        timestamp: 2021-09-22T12:40:11.910117Z
              schema:
                $ref: '#/components/schemas/SmartContractMonitoringSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Update the monitoring status of a smart contract
      tags:
      - Manage Monitored Resources
  /v2/preparation/search/block/{blockId}:
    post:
      description: Returns a request ID for executing a block search on the requested
        DLT. Block searches can be prepared based on the Block ID, Block Number or
        for the latest block at the time
      operationId: prepareSearchBlockByBlockId
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - examples:
          Latest Block:
            description: Search latest block
            value: latest
          Number:
            description: Search block by Block ID
            value: 54678
          Block Hash:
            description: Search block by Block Hash
            value: 0x1032d0f10fad4a5ada02960f552063e862e952d7d808ecf43b25a4f26d640a56
        explode: false
        in: path
        name: blockId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Block Search:
                description: Block Search
                summary: Block Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: 13765b06-eaf3-4f02-acb4-b7e9da8b0380
              schema:
                $ref: '#/components/schemas/PrepareSearchResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare Search Block by Block Id.
      tags:
      - Block Search
  /v2/preparation/credit:
    post:
      description: Transforms a transaction request ready to be signed and returns
        a request ID for executing. The supported transaction type is "Create Credit"
        which will allow you to make a payment to another specified account.
      operationId: prepareCreditRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              QRC20 Create Credit:
                description: QRC20 Create Credit
                summary: QRC20 Create Credit
                value:
                  urgency: normal
                  requestDetails:
                    payee:
                    - payment:
                        amount: "0.0000001"
                        unit: TEST
                      payeeId: 0x8917cf2A57DF39D311a96c53FCCA76dAFB25392B
                    overledgerSigningType: overledger-javascript-library
                    message: OVL Transaction Message
                    payer:
                    - payerId: 0x08f0C8451eC8283638F35D863DfFD8c1e1b3E39d
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
                  type: Create Credit
            schema:
              $ref: '#/components/schemas/PrepareCreditTransactionRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: e566fab4-141d-445e-8c3c-e936c553cc99
                    dltFee:
                      amount: "0.000061839000453486"
                      unit: ETH
                    nativeData:
                      data: 0xa9059cbb000000000000000000000000d8b31b65878a6b1a6caf9f4819c1a42d68a7a11600000000000000000000000000000000000000000000000000038d7ea4c68000
                      chainId: 3
                      gas: "41226"
                      to: 0xF9cd6C86992Fce1481dBc4bDB7E1b101c1e8cEE2
                      nonce: 122
                      value: "0"
                      gasPrice: "1500000011"
              schema:
                $ref: '#/components/schemas/PrepareTransactionResponse'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04036
                    description: Technology data object is required and must be either
                      Ethereum, XRP Ledger or Bitcoin.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare a QRC20 token credit transaction for signing
      tags:
      - Create a QRC20 Credit Transaction
  /v2/mdapptransaction/{overledgertransactionid}:
    get:
      description: Returns information for a specific transaction based on a given
        Overledger Transaction ID. Does not require a Prepare step, as this data is
        held within Overledger, rather than on the DLT
      operationId: getOvlTransactionByTxId
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: overledgertransactionid
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9\-]{1,36}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Overledger Transaction:
                  description: Overledger Transaction
                  value:
                    clientId: 66vioicl7k3kh99thp3g4vgsl7
                    requestId: a3a091d3-6718-4e77-afb5-0cd3ffc266bf
                    overledgerTransactionId: c849b101-dd64-4100-a809-7812cf64dbcb
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    transactionHistory:
                    - code: TXN1001
                      description: Transaction created
                      message: The transaction was created. It will be updated to
                        Pending if it is handled succesfully by a connector.
                      value: CREATED
                      timestamp: 2021-08-06T16:43:02.644028Z
                    - code: TXN1002
                      description: The transaction has been successfully broadcasted
                        to the network. The status will next be updated after a sufficient
                        block number has been reached. At this point we can be confident
                        that the transaction will be successful or will have failed.
                      message: Transaction is pending.
                      value: PENDING
                      timestamp: 2021-08-06T16:43:03.106891Z
                    - code: TXN1003
                      description: Transaction successful
                      message: Transaction successful
                      value: SUCCESSFUL
                      timestamp: 2021-08-06T16:46:23.482390Z
                    type: Contract Invoke
                    transactionId: 0x401ab7fafc12b97d63ec825de6557b8f13b077373e1bb4ded62b4b263c0a2e23
                    status:
                      code: TXN1003
                      description: Transaction successful
                      message: Transaction successful
                      value: SUCCESSFUL
                      timestamp: 2021-08-06T16:46:23.482390Z
              schema:
                $ref: '#/components/schemas/OverledgerTransactionResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                "404 Not Found":
                  description: 404 Not Found
                  value:
                    code: OTX04001
                    description: Overledger Transaction c849b101-dd64-4100-a809-7812cf64dbcc
                      does not exist.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/mdapptransaction/c849b101-dd64-4100-a809-7812cf64dbcb
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve information about a specific transaction created by your application
        in Overledger
      tags:
      - mDapp Transaction Query
  /v2/autoexecution/search/block/{blockId}:
    post:
      description: Generates a request ID and automatically executes the block search
        on the requested DLT.
      operationId: autoExecuteSearchBlockRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - examples:
          Latest Block:
            description: Search latest block
            value: latest
          Number:
            description: Search block by Block ID
            value: 54678
          Block Hash:
            description: Search block by Block Hash
            value: 0x1032d0f10fad4a5ada02960f552063e862e952d7d808ecf43b25a4f26d640a56
        explode: false
        in: path
        name: blockId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Block Search:
                description: Block Search
                summary: Block Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Prepare and Failed Execute Response:
                  description: Successful Prepare and Failed Execute Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: TRS04004
                      description: Your free trial has ended.
                      category: Validation Error
                    preparationBlockSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 4f4822f7-ea3d-400c-b51c-289cc5f77746
                Successful Prepare and Block not found Execute Response:
                  description: Successful Prepare and Block not found Execute Response
                  value:
                    prepareAndExecuteOverledgerErrorResponse:
                      code: BLK04008
                      description: blockId 0x0538cd36b3d04801c3d0493c2c04cb13da825f51d5f00cd4f39e6eae13d6d857
                        is not a valid block for ethereum on ropsten testnet
                      category: Validation Error
                    preparationBlockSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: 55b51d7c-2847-4002-acb7-49929cd3284c
                Successful Prepare and Execute Response:
                  description: Successful Prepare and Execute Response
                  value:
                    executionBlockSearchResponse:
                      location:
                        technology: XRP Ledger
                        network: Testnet
                      block:
                        blockId: 7AD0BFBE6757A0C5B6B89EA0ED8F6D68545563525A376E2524148D98F960C879
                        number: 22046922
                        hashes:
                        - type: BLOCK_HASH
                          value: 7AD0BFBE6757A0C5B6B89EA0ED8F6D68545563525A376E2524148D98F960C879
                        - type: STATE_HASH
                          value: 42CB597D6EFE93EB2367AC44D7C06D8E054FADB63EAD2CEBAB26FF2A8F8DE69A
                        - type: TRANSACTIONS_HASH
                          value: "0000000000000000000000000000000000000000000000000000000000000000"
                        linkedBlocks:
                          parent: 4968A53C996DD227038C9D60CC8213F5C0A17D8A9483198344C39D81F37DE4B6
                          child: 8EA6177A0EC009DDFF6C8479ACBC6BB3A3570C43E40EDA3333FE2144513EFDB2
                        numberOfTransactions: 0
                        timestamp: "1624007506"
                        nativeData:
                          closeTimeResolution: 10
                          ledgerHash: 7AD0BFBE6757A0C5B6B89EA0ED8F6D68545563525A376E2524148D98F960C879
                          closeFlags: 0
                          parentLedgerHash: 4968A53C996DD227038C9D60CC8213F5C0A17D8A9483198344C39D81F37DE4B6
                          totalDrops: "99999631436700408"
                          closeTime: 2021-10-21T13:34:21.000Z
                          parentCloseTime: 2021-10-21T13:34:20.000Z
                          stateHash: 42CB597D6EFE93EB2367AC44D7C06D8E054FADB63EAD2CEBAB26FF2A8F8DE69A
                          ledgerVersion: 22046922
                          transactionHash: "0000000000000000000000000000000000000000000000000000000000000000"
                      status:
                        code: BLK1003
                        description: Block is confirmed in the blockchain.
                        message: Block is successful.
                        value: SUCCESSFUL
                        timestamp: "1624007506"
                    preparationBlockSearchResponse:
                      gatewayFee:
                        amount: "0"
                        unit: QNT
                      requestId: a9946b1f-bfa3-46e2-bdff-d5836740f88a
              schema:
                $ref: '#/components/schemas/AutoExecuteSearchBlockResponseSchema'
          description: All good!
        "400":
          content:
            application/json:
              examples:
                Block not valid:
                  description: Block not valid
                  value:
                    code: BLK04003
                    description: blockId 0x90f89636cc04a82d25fad013d7bdf03ceaf2d27d56f0975566017eeebe7c41c7v
                      is not a valid block for ethereum on ropsten testnet
                    category: Validation Error
                Technology or network not supported:
                  description: Technology or network not supported
                  value:
                    code: TXN04005
                    description: Overledger does not currently support the requested
                      technology or network.
                    category: Validation Error
                Block id param must be provided:
                  description: Block id param must be provided
                  value:
                    code: BLK04001
                    description: API request must include a valid path parameter of
                      either blockId, number or latest.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/autoexecution/search/block/10463066
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-11-02T13:09:53.874+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare and automatically execute a search for a block on a DLT.
      tags:
      - Block Search
  /v2/resourcemonitoring/address/{resourceMonitoringId}:
    delete:
      description: Deletes the tracking record in Overledger to stop Overledger from
        recording updates for an address based on the given Resource Monitoring ID
      operationId: deleteResourceMonitoringAddress
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceMonitoringId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9-]{1,36}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Delete Resource Monitoring:
                  description: Delete Resource Monitoring
                  value:
                    addressMonitoringDetails:
                      addressId: 0xb8b31B65878a6B1a6cAf9f4819C1A42d68a7A116
                    resourceMonitoring:
                      resourceMonitoringId: 42c2452b-6af9-4238-aacf-4669864cd879
                      location:
                        technology: Ethereum
                        network: Ropsten
                      type: Address
                      timestamp: 2021-09-22T11:24:46.530Z
                      status:
                        code: MON3002
                        description: Resource Monitoring Deleted.
                        message: MON3002 - Resource Monitoring has been deleted.
                        value: DELETED
                        timestamp: 2021-09-22T12:18:55.175118Z
              schema:
                $ref: '#/components/schemas/DeleteResourceMonitoringAddressSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Stop monitoring an address
      tags:
      - Manage Monitored Resources
    get:
      description: Returns the update information recorded in Overledger for an address
        being monitored by your application for a given Resource Monitoring ID
      operationId: getMonitoredAddress
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceMonitoringId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9-]{1,36}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Resource Monitoring:
                  description: Get Resource Monitoring
                  value:
                    location:
                      technology: Ethereum
                      network: Ropsten
                    addressDetails:
                      addressId: 0xb8b31B65878a6B1a6cAf9f4819C1A42d68a7A116
                    type: Address
                    timestamp: 2021-09-22T12:26:02.671Z
                    status:
                      code: MON1000
                      description: Resource Monitoring Successful
                      message: MON1000 - Resource Monitoring has been set up successfully.
                      value: ACTIVE
                      timestamp: 2021-09-22T12:26:02.671Z
              schema:
                $ref: '#/components/schemas/AddressMonitoringDetailsSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve recorded updates for a specific monitored address
      tags:
      - Manage Monitored Resources
    patch:
      description: Updates the resource monitoring status to be either active or inactive
        for the given Resource Monitoring ID. Updating the status to beinactive will
        pause Overledger recording updates for the requested address
      operationId: updateResourceMonitoringAddress
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: false
        in: path
        name: resourceMonitoringId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9-]{1,36}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update Monitoring:
                description: Update Monitoring
                summary: Update Monitoring
                value:
                  statusUpdate:
                    value: INACTIVE
            schema:
              $ref: '#/components/schemas/StatusUpdateMonitoringRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Update Resource Monitoring:
                  description: Update Resource Monitoring
                  value:
                    addressMonitoringDetails:
                      addressId: 0xb8b31B65878a6B1a6cAf9f4819C1A42d68a7A116
                    resourceMonitoring:
                      resourceMonitoringId: 42c2452b-6af9-4238-aacf-4669864cd879
                      location:
                        technology: Ethereum
                        network: Ropsten
                      type: Address
                      timestamp: 2021-09-22T11:24:46.530Z
                      status:
                        code: MON3001
                        description: Resource Monitoring Inactive.
                        message: MON3001 - Resource Monitoring is currently paused.
                        value: INACTIVE
                        timestamp: 2021-09-22T12:15:13.860192Z
              schema:
                $ref: '#/components/schemas/UpdateAddressMonitoringSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Update the monitoring status of an address
      tags:
      - Manage Monitored Resources
  /v2/resourcemonitoring/addresses:
    get:
      description: Returns a list of addresses being monitored for your application
        and the corresponding Resource Monitoring ID
      operationId: getListOfAddresses
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                List Resource Monitoring:
                  description: List Resource Monitoring
                  value:
                  - resourceMonitoring:
                      resourceMonitoringId: 808697d9-9383-4841-9d2c-e7880850116a
                      location:
                        technology: Ethereum
                        network: Ropsten
                      type: Address
                      timestamp: 2021-06-09T14:59:15.509Z
                      status:
                        code: MON1001
                        description: Resource Monitoring Inactive
                        message: MON1001 - Resource Monitoring is currently paused.
                        value: INACTIVE
                        timestamp: 2021-06-09T14:59:15.509Z
              schema:
                items:
                  $ref: '#/components/schemas/ResourceMonitoringAddressSchema'
                type: array
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve a list of addresses being monitored
      tags:
      - Manage Monitored Resources
  /v2/resourcemonitoring/smartcontractevent:
    post:
      description: Overledger creates a tracking record for the given smart contract
        and records information each time a transaction on the DLT triggers a specific
        event
      operationId: trackAndSubscribeEvent
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Monitor Smart Contract:
                description: Monitor Smart Contract
                summary: Monitor Smart Contract
                value:
                  callBackURL: https://test-post.free.beeceptor.com/comments
                  eventParams:
                  - selectedIntegerLength: B256
                    type: UINT
                    value: "3"
                  - selectedIntegerLength: B256
                    type: UINT
                    value: "2"
                  eventName: mul
                  location:
                    technology: Ethereum
                    network: Ethereum Ropsten Testnet
                  smartContractId: 0x8781d54e454377451D9C6928538Db544Caa65CDf
            schema:
              $ref: '#/components/schemas/MonitorSmartContractRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create Smart Contract Monitoring:
                  description: Create Smart Contract Monitoring
                  value:
                    subscriptionDetails:
                      ids:
                      - 27a9dba9-bd0d-4d97-8aa2-373d9c5313c8
                      status:
                        code: SUB1000
                        description: Subscription Successful.
                        message: Subscription has been set up successfully and updates
                          will be sent to the relevant callback URL.
                        value: ACTIVE
                        timestamp: 2021-09-22T12:36:40.652175Z
                    resourceMonitoring:
                      resourceMonitoringId: 27a9dba9-bd0d-4d97-8aa2-373d9c5313c8
                      location:
                        technology: Ethereum
                        network: Ethereum Ropsten Testnet
                      status:
                        code: MON1000
                        description: Resource Monitoring Successful
                        message: MON1000 - Resource Monitoring has been set up successfully.
                        value: ACTIVE
                        timestamp: 2021-09-22T12:36:40.050260Z
                    subscription:
                      callbackUrl: https://test-post.free.beeceptor.com/comments
                      subscriptionId: 614b235860a15b6def675af8
                      type: resourceMonitoringId
              schema:
                $ref: '#/components/schemas/CreateSmartContractMonitoringSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Monitor a smart contract for an event
      tags:
      - Monitor a Resource
  /v2/execution/search/utxo:
    post:
      description: Takes a request ID, searches for the UTXO state and retrieves the
        details on the requested DLT. This API is only applicable for Bitcoin.
      operationId: executeUTXOPreparedSearchRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: requestId
        required: true
        schema:
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Response:
                  description: Execute Response
                  value:
                    utxoId: 96ad36032c3ea15dcd05388910e37c2d81d9904035910a32b6b15ea1664a72b8
                    destination:
                    - smartContract:
                        detail: OP_DUP OP_HASH160 1d1b4dca757c6f55eec913b636a8bd377e09e937
                          OP_EQUALVERIFY OP_CHECKSIG
                        type: pubkeyhash
                        extraFields:
                          requiredSignatures: 1
                      payment:
                        amount: "0.01718653"
                        unit: BTC
                      destinationId: miArbiuPSMbyZZbetikbkauxDu8Y7ZDhX1
                    location:
                      technology: Bitcoin
                      network: Bitcoin Testnet
                    timestamp: "1624007506"
                    status:
                      code: SPENT
                      description: The UTXO has been spent in a transaction that is
                        either in pending or successful status.
                      message: UTXO has been spent.
                      value: UTX1002
                      timestamp: "1624007506"
                    nativeData:
                      vout:
                      - scriptPubKey:
                          addresses:
                          - miArbiuPSMbyZZbetikbkauxDu8Y7ZDhX1
                          asm: OP_DUP OP_HASH160 1d1b4dca757c6f55eec913b636a8bd377e09e937
                            OP_EQUALVERIFY OP_CHECKSIG
                          hex: 76a9141d1b4dca757c6f55eec913b636a8bd377e09e93788ac
                          type: pubkeyhash
                          reqSigs: 1
                        value: 0.01718653
                        n: 0
              schema:
                $ref: '#/components/schemas/ExecuteSearchUTXOResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a search for UTXO state on a DLT
      tags:
      - UTXO Status Search
  /v2/execution/nativetransaction:
    post:
      description: Takes a request ID and submits a signed native transaction to the
        requested DLT
      operationId: executePreparedRequestNativeTransaction
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Execute Native Transaction:
                description: Execute Native Transaction
                summary: Execute Native Transaction
                value:
                  requestId: 79763168-a4f9-42bf-9f10-2e08491136a7
                  signed: 0xf8a9398501ef4f86e682a0c294f9cd6c86992fce1481dbc4bdb7e1b101c1e8cee280b844a9059cbb000000000000000000000000d8b31b65878a6b1a6caf9f4819c1a42d68a7a11600000000000000000000000000000000000000000000000000038d7ea4c6800029a088680bffd2eb74053e968ac8bcd1f76beaa61b353d8616a8cc559e57685080bea07a77b7591f09290fbb9cda5263471e8a9ca46f4c7b30d6a4885e583771d809f5
            schema:
              $ref: '#/components/schemas/ExecuteTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Response:
                  description: Execute Response
                  value:
                    requestId: 242284e2-e53e-4c28-b74c-e5b2c5fa7399
                    overledgerTransactionId: dded55c2-a0fb-4e7b-8f95-771332c32507
                    location:
                      technology: Ethereum
                      network: Ropsten Testnet
                    type: Native Transaction
                    transactionId: 0x05b4b5cf07013acfed5a2ffbfc51c4d16e920cfbcc86d68ed71a3a418b9a110e
                    status:
                      code: TXN1002
                      description: The transaction has been successfully broadcasted
                        to the network. The status will next be updated after a sufficient
                        block number has been reached. At this point we can be confident
                        that the transaction will be successful or will have failed.
                      message: Transaction is pending.
                      value: PENDING
                      timestamp: "1624007506"
              schema:
                $ref: '#/components/schemas/ExecuteTransactionResponse'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    code: TXN04002
                    description: Request ID 609e2199-db0c-4528-baf3-7392f026dae2 has
                      already been executed.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Execute a native transaction on the DLT
      tags:
      - Create Transaction
  /v2/webhook/subscriptions:
    get:
      description: Returns a list of active or paused subscriptions and the corresponding
        Subscription IDs that were created by your application
      operationId: listSubscriptions
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                "200 List Subscriptions":
                  description: 200 List Subscriptions
                  value:
                  - subscriptionDetails:
                      ids:
                      - 1567837c-cf78-4887-bbbb-ecba6e3ae2d7
                      status:
                        code: SUB1002
                        description: Subscription Deleted.
                        message: Subscription has been deleted and will no longer
                          send updates to the relevant callback URL
                        value: DELETED
                        timestamp: 2021-06-09T15:01:37.782699Z
                    subscribedTime: 2021-06-09T15:01:37.782Z
                    callbackUrl: https://test-post.free.beeceptor.com/comments
                    subscriptionId: 60c0d7d122dcc42f3b485821
                    type: resourceMonitoringId
                  - subscriptionDetails:
                      ids:
                      - ca5b4e1c-55ec-4a3f-9004-d4fb90a2c591
                      status:
                        code: SUB1002
                        description: Subscription Deleted.
                        message: Subscription has been deleted and will no longer
                          send updates to the relevant callback URL
                        value: DELETED
                        timestamp: 2021-07-27T17:06:06.491626Z
                    subscribedTime: 2021-07-27T17:06:06.491Z
                    callbackUrl: https://fd5c2ca009a99c3542d9d4502a18cb6e.m.pipedream.net
                    subscriptionId: 61003cfeb213e26e61a44dc5
                    type: overledgerTransactionId
              schema:
                items:
                  $ref: '#/components/schemas/ListSubscriptionResponseSchema'
                type: array
          description: All good!
        "204":
          content:
            application/json:
              examples:
                "204 No Content":
                  description: 204 No Content
                  value: No Content
              schema:
                type: string
          description: You do not currently have any subscriptions
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/webhook/subscription/61406222b65cf749ea893c1a
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T10:40:57.801+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Retrieve a list of subscriptions created by your application
      tags:
      - Manage Subscription
  /v2/preparation/search/transaction:
    post:
      description: Searches for and returns data on transactions on a particular DLT.
        Returns a request ID for executing a transaction search on the requested DLT
      operationId: prepareSearchRequest
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      - explode: true
        in: query
        name: transactionId
        required: true
        schema:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Transaction Search:
                description: Transaction Search
                summary: Transaction Search
                value:
                  location:
                    technology: Ethereum
                    network: Ropsten Testnet
            schema:
              $ref: '#/components/schemas/PrepareSearchSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Prepare Response:
                  description: Prepare Response
                  value:
                    gatewayFee:
                      amount: "0"
                      unit: QNT
                    requestId: 13765b06-eaf3-4f02-acb4-b7e9da8b0380
              schema:
                $ref: '#/components/schemas/PrepareSearchResponseSchema'
          description: All good!
        "401":
          content:
            application/json:
              examples:
                Bad Request:
                  description: Bad Request
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/preparation/transaction
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T11:26:19.935+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: Prepare a search for a transaction on a DLT
      tags:
      - Transaction Search
  /v2/webhook/subscription:
    post:
      description: Creates a subscription to receive status updates for a transaction
        created in Overledger, or to receive updates each time a transaction happens
        on the requested DLT for a resource (e.g. address) being monitored, to the
        requested callback URL.  Subscriptions are created using an Overledger Transaction
        ID or Resource Monitoring ID
      operationId: subscription
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          maxLength: 5010
          minLength: 0
          pattern: ^Bearer [A-Za-z0-9\-_. ]{1,5010}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create Subscription:
                description: Create Subscription
                summary: Create Subscription
                value:
                  ids:
                  - 71633eb9-dcda-4a7d-a176-12ac0d0bb076
                  callbackUrl: https://callbackurl/endpoint
                  type: resourceMonitoringId
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequestSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create Subscription:
                  description: Create Subscription
                  value:
                  - subscriptionDetails:
                      ids:
                      - 3606e1a2-ae85-4676-8fb3-40917cb63bd4
                      status:
                        code: SUB1000
                        description: Subscription Successful.
                        message: Subscription has been set up successfully and updates
                          will be sent to the relevant callback URL.
                        value: ACTIVE
                        timestamp: 2021-09-15T09:15:40.530993Z
                    subscriptionId: 6141b9bcb65cf749ea893c45
              schema:
                items:
                  $ref: '#/components/schemas/CreateSubscriptionResponseSchema'
                type: array
          description: All good!
        "400":
          content:
            application/json:
              examples:
                "400 Bad Request":
                  description: 400 Bad Request
                  value:
                    code: SUB04004
                    description: The 'type' field is mandatory and must be either
                      overledgerTransactionId or resourceMonitoringId.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Something went wrong on your side
        "401":
          content:
            application/json:
              examples:
                Not Authorized:
                  description: Not Authorized
                  value:
                    errors:
                    - code: 401
                      message: Not authorised for the access to the endpoint!
                    errorCount: 1
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "404":
          content:
            application/json:
              examples:
                "404 Not Found":
                  description: 404 Not Found
                  value:
                    code: SUB04008
                    description: Monitored Item 3606e1a2-ae85-4676-8fb3-40917cb63bd3
                      does not exist or has been deleted.
                    category: Validation Error
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: '{id} does not exist'
        "500":
          content:
            application/json:
              examples:
                "500 Something went wrong on our side":
                  description: 500 Something went wrong on our side
                  value:
                    path: /v2/webhook/subscription/61406222b65cf749ea893c1a
                    error: Internal Server Error
                    message: No message available
                    timestamp: 2021-09-15T10:40:57.801+0000
                    status: 500
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
          description: Something went wrong on our side
      security:
      - OAuth2_Security_Scheme:
        - overledger/read.scope
      summary: 'Create a subscription for a transaction or monitored resource '
      tags:
      - Create Subscription
components:
  schemas:
    Origin:
      additionalProperties: false
      description: Where is this transaction coming from
      example:
        sequence: sequence
        originId: originId
        smartContract:
          function:
            functionId: functionId
            code: code
            name: name
            inputParameters:
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            outputParameters:
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
          detail: detail
          type: type
          smartContractId: smartContractId
          extraFields: '{}'
      properties:
        sequence:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        originId:
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}$
          type: string
        smartContract:
          $ref: '#/components/schemas/SmartContract'
      type: object
    PayeeCreditSchema:
      additionalProperties: false
      description: Who are the payees of this transaction
      example:
        payment:
          amount: amount
          unit: unit
        payeeId: payeeId
      properties:
        payment:
          $ref: '#/components/schemas/PaymentSchema'
        payeeId:
          description: The unique identifiers of the payees
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}
          type: string
      type: object
    StatusUpdateSchema:
      additionalProperties: false
      example:
        value: value
      properties:
        value:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
      type: object
    CreateSubscriptionResponseSchema:
      additionalProperties: false
      example:
        scubscriptionDetails:
          ids:
          - ids
          - ids
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        subscriptionId: subscriptionId
      properties:
        scubscriptionDetails:
          $ref: '#/components/schemas/SubscriptionDetailsSchema'
        subscriptionId:
          maxLength: 24
          minLength: 0
          pattern: ^[a-z0-9-]{1,24}$
          type: string
      type: object
    SmartContractOutputParameterSchema:
      additionalProperties: false
      example:
        type: type
      properties:
        type:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,30}$
          type: string
      type: object
    SmartContractRequestDetailsOrigin:
      additionalProperties: false
      properties:
        originId:
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}$
          type: string
      type: object
    Vout:
      additionalProperties: false
      example:
        scriptPubKey:
          addresses:
          - addresses
          - addresses
          asm: asm
          hex: hex
          type: type
          reqSigs: reqSigs
        value: 6.027456183070403
        n: 1.4658129805029452
      properties:
        scriptPubKey:
          $ref: '#/components/schemas/ScriptPubKey'
        value:
          type: number
        n:
          type: number
      type: object
    TransferSchema:
      additionalProperties: false
      properties:
        tokenId:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9_ ]{1,50}$
          type: string
        tokenName:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9_ ]{1,50}$
          type: string
      type: object
    Status:
      additionalProperties: false
      example:
        code: code
        description: description
        message: message
        value: value
        timestamp: timestamp
      properties:
        code:
          description: The code of an object
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z_0-9 ]{1,30}"
          type: string
        description:
          description: The description of an object
          maxLength: 400
          minLength: 0
          pattern: ^[a-zA-Z_0-9.,\-() ]{1,400}
          type: string
        message:
          description: The message of an object
          maxLength: 400
          minLength: 0
          pattern: ^[a-zA-Z_0-9.,\-() ]{1,400}
          type: string
        value:
          description: The value of an object
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        timestamp:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z_0-9.,:\- ]{1,50}
          type: string
      type: object
    UTXOTimestampSchema:
      additionalProperties: false
      example:
        nano: nano
        epochSecond: epochSecond
      properties:
        nano:
          type: string
        epochSecond:
          type: string
      type: object
    LinkedBlocks:
      additionalProperties: false
      example:
        parent: parent
        child: child
      properties:
        parent:
          maxLength: 150
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,150}$
          type: string
        child:
          maxLength: 150
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,150}$
          type: string
      type: object
    SmartContractPaymentSchema:
      additionalProperties: false
      properties:
        amount:
          maxLength: 100
          minLength: 0
          pattern: ^[0-9. ]{1,100}$
          type: string
        unit:
          maxLength: 10
          minLength: 0
          pattern: ^[a-zA-Z_ ]{1,10}$
          type: string
      type: object
    InternalServerErrorSchema:
      additionalProperties: false
      properties:
        path:
          maxLength: 300
          minLength: 0
          pattern: ^[\S\s]{1,300}$
          type: string
        error:
          maxLength: 300
          minLength: 0
          pattern: ^[\S\s]{1,300}$
          type: string
        message:
          maxLength: 300
          minLength: 0
          pattern: ^[\S\s]{1,300}$
          type: string
        timestamp:
          format: date-time
          type: string
        status:
          format: int32
          type: integer
      type: object
    SmartContractMonitoringSchema:
      additionalProperties: false
      example:
        smartContractEventMonitoringDetails:
          eventName: eventName
          eventParameters: eventParameters
          smartContractId: smartContractId
        resourceMonitoring:
          resourceMonitoringId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          location:
            technology: technology
            network: network
          type: type
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
      properties:
        smartContractEventMonitoringDetails:
          $ref: '#/components/schemas/ResourceMonitoringSmartContractEventDetails'
        resourceMonitoring:
          $ref: '#/components/schemas/ResourceMonitoringDetails'
      type: object
    ResourceMonitoredAddressDetails:
      additionalProperties: false
      example:
        addressId: addressId
      properties:
        addressId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    ScriptPubKey:
      additionalProperties: false
      example:
        addresses:
        - addresses
        - addresses
        asm: asm
        hex: hex
        type: type
        reqSigs: reqSigs
      properties:
        addresses:
          items:
            type: string
          type: array
        asm:
          type: string
        hex:
          type: string
        type:
          type: string
        reqSigs:
          type: string
      type: object
    PayerCreditSchema:
      additionalProperties: false
      description: Who are the payers of this transaction
      example:
        payerId: payerId
      properties:
        payerId:
          description: Unique Identifier of the payer
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}$
          type: string
      type: object
    ListSubscriptionResponseSchema:
      additionalProperties: false
      example:
        subscriptionDetails:
          ids:
          - ids
          - ids
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        subscribedTime: 2000-01-23T04:56:07.000+00:00
        lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
        callbackUrl: callbackUrl
        subscriptionId: subscriptionId
        type: type
      properties:
        subscriptionDetails:
          $ref: '#/components/schemas/SubscriptionDetailsSchema'
        subscribedTime:
          format: date-time
          type: string
        lastUpdatedTime:
          format: date-time
          type: string
        callbackUrl:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
        subscriptionId:
          maxLength: 24
          minLength: 0
          pattern: ^[a-z0-9-]{1,24}$
          type: string
        type:
          maxLength: 24
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
      type: object
    AddressMonitoringDetailsSchema:
      additionalProperties: false
      example:
        location:
          technology: technology
          network: network
        addressDetails:
          addressId: addressId
        type: type
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        location:
          $ref: '#/components/schemas/Location'
        addressDetails:
          $ref: '#/components/schemas/ResourceMonitoredAddressDetails'
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    ExecuteSearchBalanceResponse:
      additionalProperties: false
      example:
        balances:
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        location:
          technology: technology
          network: network
        timestamp: timestamp
        addressId: addressId
      properties:
        balances:
          items:
            $ref: '#/components/schemas/AddressBalanceResponse'
          maxItems: 100
          minItems: 0
          type: array
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          type: string
        addressId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    TransferRequestDetailsSchema:
      additionalProperties: false
      properties:
        overledgerSigningType:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z- ]{1,30}
          type: string
        origin:
          items:
            $ref: '#/components/schemas/OriginTransferSchema'
          maxItems: 1
          minItems: 0
          type: array
        destination:
          items:
            $ref: '#/components/schemas/DestinationTransferSchema'
          maxItems: 1
          minItems: 0
          type: array
        message:
          maxLength: 150
          minLength: 0
          pattern: ^[\S\s]{1,150}$
          type: string
      type: object
    Transfer:
      additionalProperties: false
      example:
        tokenId: tokenId
        tokenName: tokenName
      properties:
        tokenId:
          maxLength: 15
          minLength: 0
          pattern: ^[A-Za-z0-9 ]{1,15}
          type: string
        tokenName:
          maxLength: 15
          minLength: 0
          pattern: ^[A-Za-z0-9 ]{1,15}
          type: string
      type: object
    SmartContractInvokeRequestDetailsSchema:
      additionalProperties: false
      properties:
        origin:
          items:
            $ref: '#/components/schemas/SmartContractRequestDetailsOrigin'
          maxItems: 1
          minItems: 0
          type: array
        destination:
          items:
            $ref: '#/components/schemas/SmartContractDestinationSchema'
          maxItems: 1
          minItems: 0
          type: array
      type: object
    SmartContractSearchDestinationSchema:
      additionalProperties: false
      example:
        smartContract:
          function:
            name: name
            inputParameters:
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            outputParameters:
            - type: type
            - type: type
            - type: type
            - type: type
            - type: type
          smartContractId: smartContractId
      properties:
        smartContract:
          $ref: '#/components/schemas/SmartContractSearchSchema'
      type: object
    ExecuteTransactionRequest:
      additionalProperties: false
      example:
        requestId: requestId
        signed: signed
      properties:
        requestId:
          description: The ID assigned to a preparation request in Overledger
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        signed:
          description: The raw data after transaction signing
          maxLength: 400
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,400}$
          type: string
      required:
      - requestId
      - signed
      type: object
    SmartContractMonitoringDetailsSchema:
      additionalProperties: false
      example:
        smartContractEventHistory:
        - eventId: eventId
          eventName: eventName
          eventParameters: eventParameters
          transactionId: transactionId
          timestamp: 2000-01-23T04:56:07.000+00:00
        - eventId: eventId
          eventName: eventName
          eventParameters: eventParameters
          transactionId: transactionId
          timestamp: 2000-01-23T04:56:07.000+00:00
        smartContractEventDetails:
          eventName: eventName
          eventParameters: eventParameters
          smartContractId: smartContractId
        location:
          technology: technology
          network: network
        type: type
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        smartContractEventHistory:
          items:
            $ref: '#/components/schemas/SmartContractEventHistory'
          type: array
        smartContractEventDetails:
          $ref: '#/components/schemas/ResourceMonitoringSmartContractEventDetails'
        location:
          $ref: '#/components/schemas/Location'
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        status:
          $ref: '#/components/schemas/Status'
        timestamp:
          format: date-time
          type: string
      type: object
    ExecuteTransactionResponse:
      additionalProperties: false
      example:
        urgency: urgency
        requestId: requestId
        overledgerTransactionId: overledgerTransactionId
        location:
          technology: technology
          network: network
        type: type
        transactionId: transactionId
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
      properties:
        urgency:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        requestId:
          description: The ID assigned to a preparation request in Overledger
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        overledgerTransactionId:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9\-]{1,36}$
          type: string
        location:
          $ref: '#/components/schemas/Location'
        type:
          description: The type of the transaction executed
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        transactionId:
          description: The ID assigned by Overledger to a transaction submitted to
            a DLT via Overledger
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        status:
          $ref: '#/components/schemas/Status'
      type: object
    ExecuteSearchBlockResponse:
      additionalProperties: false
      example:
        location:
          technology: technology
          network: network
        block:
          blockId: blockId
          number: 0
          transactionIds:
          - transactionIds
          - transactionIds
          - transactionIds
          - transactionIds
          - transactionIds
          size:
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          hashes:
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          linkedBlocks:
            parent: parent
            child: child
          numberOfTransactions: 6
          message: message
          timestamp: timestamp
          nativeData: '{}'
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
      properties:
        location:
          $ref: '#/components/schemas/Location'
        block:
          $ref: '#/components/schemas/Block'
        status:
          $ref: '#/components/schemas/Status'
      type: object
    OverledgerTransactionResponseSchema:
      additionalProperties: false
      example:
        clientId: clientId
        requestId: requestId
        overledgerTransactionId: overledgerTransactionId
        location:
          technology: technology
          network: network
        transactionHistory:
        - code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
        - code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
        type: type
        transactionId: transactionId
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
      properties:
        clientId:
          maxLength: 40
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,40}$
          type: string
        requestId:
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        overledgerTransactionId:
          maxLength: 36
          minLength: 0
          pattern: ^[a-zA-Z0-9\-]{1,36}$
          type: string
        location:
          $ref: '#/components/schemas/Location'
        transactionHistory:
          items:
            $ref: '#/components/schemas/Status'
          type: array
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        transactionId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        status:
          $ref: '#/components/schemas/Status'
      type: object
    ResourceMonitoringSmartContractEventDetails:
      additionalProperties: false
      example:
        eventName: eventName
        eventParameters: eventParameters
        smartContractId: smartContractId
      properties:
        eventName:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9 ]{1,100}$
          type: string
        eventParameters:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9,_ ]{1,100}$
          type: string
        smartContractId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    ErrorDetails:
      additionalProperties: false
      properties:
        code:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9_ ]{1,30}$
          type: string
        description:
          maxLength: 300
          minLength: 0
          pattern: ^[\S\s]{1,300}$
          type: string
        category:
          maxLength: 50
          minLength: 0
          pattern: ^[\S\s]{1,50}$
          type: string
      type: object
    PrepareApproveDebitTransactionRequestSchema:
      additionalProperties: false
      properties:
        urgency:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
        requestDetails:
          $ref: '#/components/schemas/ApproveRequestDetailsSchema'
        location:
          $ref: '#/components/schemas/Location'
        type:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
      type: object
    MonitorSmartContractRequestSchema:
      additionalProperties: false
      example:
        callBackURL: callBackURL
        eventParams:
        - selectedIntegerLength: selectedIntegerLength
          type: type
          value: value
        - selectedIntegerLength: selectedIntegerLength
          type: type
          value: value
        eventName: eventName
        location:
          technology: technology
          network: network
        smartContractId: smartContractId
      properties:
        callBackURL:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
        eventParams:
          items:
            $ref: '#/components/schemas/MonitorSmartContractEventParam'
          type: array
        eventName:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9 ]{1,100}$
          type: string
        location:
          $ref: '#/components/schemas/Location'
        smartContractId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    SmartContractEventHistory:
      additionalProperties: false
      example:
        eventId: eventId
        eventName: eventName
        eventParameters: eventParameters
        transactionId: transactionId
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        eventId:
          maxLength: 200
          minLength: 0
          pattern: ^[a-zA-Z0-9,_ ]{1,200}$
          type: string
        eventName:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9 ]{1,100}$
          type: string
        eventParameters:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9,_ ]{1,100}$
          type: string
        transactionId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    ExecuteSearchTransactionResponse:
      additionalProperties: false
      example:
        location:
          technology: technology
          network: network
        type: type
        transaction:
          signature:
          - signature
          - signature
          - signature
          - signature
          - signature
          origin:
          - sequence: sequence
            originId: originId
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
          - sequence: sequence
            originId: originId
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
          - sequence: sequence
            originId: originId
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
          - sequence: sequence
            originId: originId
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
          - sequence: sequence
            originId: originId
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
          fee:
            amount: amount
            unit: unit
          destination:
          - transfer:
              tokenId: tokenId
              tokenName: tokenName
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
            payment:
              amount: amount
              unit: unit
              issuer: issuer
            destinationId: destinationId
          - transfer:
              tokenId: tokenId
              tokenName: tokenName
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
            payment:
              amount: amount
              unit: unit
              issuer: issuer
            destinationId: destinationId
          - transfer:
              tokenId: tokenId
              tokenName: tokenName
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
            payment:
              amount: amount
              unit: unit
              issuer: issuer
            destinationId: destinationId
          - transfer:
              tokenId: tokenId
              tokenName: tokenName
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
            payment:
              amount: amount
              unit: unit
              issuer: issuer
            destinationId: destinationId
          - transfer:
              tokenId: tokenId
              tokenName: tokenName
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
            payment:
              amount: amount
              unit: unit
              issuer: issuer
            destinationId: destinationId
          signed: signed
          totalPaymentAmount:
          - amount: amount
            unit: unit
            issuer: issuer
          - amount: amount
            unit: unit
            issuer: issuer
          - amount: amount
            unit: unit
            issuer: issuer
          - amount: amount
            unit: unit
            issuer: issuer
          - amount: amount
            unit: unit
            issuer: issuer
          message: message
          transactionId: transactionId
          encoded:
          - encoded
          - encoded
          - encoded
          - encoded
          - encoded
          extraFields: '{}'
          nativeData: '{}'
        timestamp: timestamp
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
        extraFields: '{}'
      properties:
        location:
          $ref: '#/components/schemas/Location'
        type:
          description: The type of the transaction object returned
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        transaction:
          $ref: '#/components/schemas/Transaction'
        timestamp:
          description: The unix time to read the object from
          maxLength: 50
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/Status'
        extraFields:
          type: object
      type: object
    AddressBalanceResponse:
      additionalProperties: false
      example:
        unit: unit
        amount: amount
      properties:
        unit:
          maxLength: 10
          minLength: 0
          pattern: ^[a-zA-Z_ ]{1,10}$
          type: string
        amount:
          type: string
      type: object
    PrepareSearchSchema:
      additionalProperties: false
      example:
        location:
          technology: technology
          network: network
      properties:
        location:
          $ref: '#/components/schemas/Location'
      type: object
    SmartContract:
      additionalProperties: false
      description: Computer program storage in a DLT system where the outcome is recorded
        on the distributed ledger
      example:
        function:
          functionId: functionId
          code: code
          name: name
          inputParameters:
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
          outputParameters:
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
          - type: type
            value: '{}'
            key: key
        detail: detail
        type: type
        smartContractId: smartContractId
        extraFields: '{}'
      properties:
        function:
          $ref: '#/components/schemas/Function'
        detail:
          maxLength: 20
          minLength: 0
          pattern: ^[A-Za-z0-9]{1,20}$
          type: string
        type:
          description: Information on the object type
          maxLength: 20
          minLength: 0
          pattern: ^[A-Za-z0-9]{1,20}$
          type: string
        smartContractId:
          maxLength: 44
          minLength: 0
          type: string
        extraFields:
          type: object
      type: object
    PrepareSearchResponseSchema:
      additionalProperties: false
      example:
        gatewayFee:
          amount: amount
          unit: unit
        requestId: requestId
      properties:
        gatewayFee:
          $ref: '#/components/schemas/Fee'
        requestId:
          description: The ID assigned to a preparation request in Overledger
          type: string
      type: object
    SmartContractInputParameterSchema:
      additionalProperties: false
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    SmartContractSchema:
      additionalProperties: false
      properties:
        function:
          $ref: '#/components/schemas/SmartContractFunctionSchema'
      type: object
    Fee:
      additionalProperties: false
      example:
        amount: amount
        unit: unit
      properties:
        amount:
          description: The amount of a currency
          maxLength: 100
          minLength: 0
          pattern: ^[0-9. ]{1,100}$
          type: string
        unit:
          description: The unit of this currency/token
          maxLength: 10
          minLength: 0
          pattern: ^[a-zA-Z_ ]{1,10}$
          type: string
      required:
      - amount
      type: object
    PaymentRequestDetailsSchema:
      additionalProperties: false
      example:
        overledgerSigningType: overledgerSigningType
        origin:
        - originId: originId
        - originId: originId
        - originId: originId
        - originId: originId
        - originId: originId
        destination:
        - payment:
            amount: amount
            unit: unit
          destinationId: destinationId
        - payment:
            amount: amount
            unit: unit
          destinationId: destinationId
        - payment:
            amount: amount
            unit: unit
          destinationId: destinationId
        - payment:
            amount: amount
            unit: unit
          destinationId: destinationId
        - payment:
            amount: amount
            unit: unit
          destinationId: destinationId
        message: message
      properties:
        overledgerSigningType:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z- ]{1,30}
          type: string
        origin:
          description: Where is this transaction coming from
          items:
            $ref: '#/components/schemas/OriginPaymentSchema'
          maxItems: 100
          minItems: 0
          type: array
        destination:
          description: The Destination of this transaction
          items:
            $ref: '#/components/schemas/DestinationPaymentSchema'
          maxItems: 100
          minItems: 0
          type: array
        message:
          description: Any text-based element of the data payload
          maxLength: 150
          minLength: 0
          pattern: ^[\S\s]{1,150}$
          type: string
      type: object
    UTXOSmartContract:
      additionalProperties: false
      example:
        detail: detail
        type: type
        extraFields:
          requiredSignatures: 0.8008281904610115
      properties:
        detail:
          type: string
        type:
          type: string
        extraFields:
          $ref: '#/components/schemas/ExtraFields'
      type: object
    ResourceMonitoringAddressSchema:
      additionalProperties: false
      example:
        addressMonitoringDetails:
          addressId: addressId
        resourceMonitoring:
          resourceMonitoringId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          location:
            technology: technology
            network: network
          type: type
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
      properties:
        addressMonitoringDetails:
          $ref: '#/components/schemas/ResourceMonitoringAddressDetails'
        resourceMonitoring:
          $ref: '#/components/schemas/ResourceMonitoringDetails'
      type: object
    AutoExecuteSearchBlockResponseSchema:
      additionalProperties: false
      example:
        executionBlockSearchResponse:
          location:
            technology: technology
            network: network
          block:
            blockId: blockId
            number: 0
            transactionIds:
            - transactionIds
            - transactionIds
            - transactionIds
            - transactionIds
            - transactionIds
            size:
            - type: type
              value: value
              key: key
            - type: type
              value: value
              key: key
            - type: type
              value: value
              key: key
            - type: type
              value: value
              key: key
            - type: type
              value: value
              key: key
            hashes:
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            linkedBlocks:
              parent: parent
              child: child
            numberOfTransactions: 6
            message: message
            timestamp: timestamp
            nativeData: '{}'
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        prepareAndExecuteOverledgerErrorResponse:
          code: code
          description: description
          category: category
        preparationBlockSearchResponse:
          gatewayFee:
            amount: amount
            unit: unit
          requestId: requestId
      properties:
        executionBlockSearchResponse:
          $ref: '#/components/schemas/ExecuteSearchBlockResponse'
        prepareAndExecuteOverledgerErrorResponse:
          $ref: '#/components/schemas/PrepareAndExecuteOverledgerErrorResponse'
        preparationBlockSearchResponse:
          $ref: '#/components/schemas/PrepareSearchResponseSchema'
      type: object
    PrepareAndExecuteBalanceDetails:
      additionalProperties: false
      example:
        unit: unit
        amount: amount
      properties:
        unit:
          maxLength: 10
          minLength: 0
          pattern: ^[a-zA-Z_ ]{1,10}$
          type: string
        amount:
          type: string
      type: object
    PrepareTransactionResponse:
      additionalProperties: false
      example:
        gatewayFee:
          amount: amount
          unit: unit
        requestId: requestId
        dltFee:
          amount: amount
          unit: unit
        nativeData: '{}'
      properties:
        gatewayFee:
          $ref: '#/components/schemas/Fee'
        requestId:
          description: The ID assigned to a preparation request in Overledger
          maxLength: 36
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,36}$
          type: string
        dltFee:
          $ref: '#/components/schemas/Fee'
        nativeData:
          type: object
      type: object
    BlockHash:
      additionalProperties: false
      example:
        type: type
        value: value
      properties:
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9_]{1,50}$
          type: string
        value:
          maxLength: 150
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,150}$
          type: string
      type: object
    Parameter:
      additionalProperties: false
      example:
        type: type
        value: '{}'
        key: key
      properties:
        type:
          maxLength: 20
          minLength: 0
          pattern: ^[A-Za-z0-9]{1,20}$
          type: string
        value:
          type: object
        key:
          maxLength: 20
          minLength: 0
          pattern: ^[A-Za-z0-9]{1,20}$
          type: string
      type: object
    BlockSize:
      additionalProperties: false
      example:
        type: type
        value: value
        key: key
      properties:
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9_]{1,50}$
          type: string
        value:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9_]{1,50}$
          type: string
        key:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9_]{1,50}$
          type: string
      type: object
    AddressMonitoringRequestSchema:
      additionalProperties: false
      example:
        callBackURL: callBackURL
        location:
          technology: technology
          network: network
        addressId: addressId
      properties:
        callBackURL:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
        location:
          $ref: '#/components/schemas/Location'
        addressId:
          maxLength: 200
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    AutoExecuteSearchUTXOResponseSchema:
      additionalProperties: false
      example:
        executionUtxoSearchResponse:
          utxoId: utxoId
          destination:
          - transfer:
              tokenId: tokenId
              tokenName: tokenName
            smartContract:
              function:
                functionId: functionId
                code: code
                name: name
                inputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                outputParameters:
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
                - type: type
                  value: '{}'
                  key: key
              detail: detail
              type: type
              smartContractId: smartContractId
              extraFields: '{}'
            payment:
              amount: amount
              unit: unit
              issuer: issuer
            destinationId: destinationId
          location:
            technology: technology
            network: network
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
          nativeData: '{}'
        prepareAndExecuteOverledgerErrorResponse:
          code: code
          description: description
          category: category
        preparationUtxoSearchResponse:
          gatewayFee:
            amount: amount
            unit: unit
          requestId: requestId
          dltFee:
            amount: amount
            unit: unit
          nativeData: '{}'
      properties:
        executionUtxoSearchResponse:
          $ref: '#/components/schemas/ExecuteSearchUTXOResponse'
        prepareAndExecuteOverledgerErrorResponse:
          $ref: '#/components/schemas/PrepareAndExecuteOverledgerErrorResponse'
        preparationUtxoSearchResponse:
          $ref: '#/components/schemas/PrepareTransactionResponse'
      type: object
    PrepareAndExecuteTransactionResponse:
      additionalProperties: false
      example:
        executionTransactionSearchOverledgerErrorResponse:
          code: code
          description: description
          category: category
        preparationTransactionSearchResponse:
          gatewayFee:
            amount: amount
            unit: unit
          requestId: requestId
          dltFee:
            amount: amount
            unit: unit
          nativeData: '{}'
        executionTransactionSearchResponse:
          location:
            technology: technology
            network: network
          type: type
          transaction:
            signature:
            - signature
            - signature
            - signature
            - signature
            - signature
            origin:
            - sequence: sequence
              originId: originId
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
            - sequence: sequence
              originId: originId
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
            - sequence: sequence
              originId: originId
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
            - sequence: sequence
              originId: originId
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
            - sequence: sequence
              originId: originId
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
            fee:
              amount: amount
              unit: unit
            destination:
            - transfer:
                tokenId: tokenId
                tokenName: tokenName
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
              payment:
                amount: amount
                unit: unit
                issuer: issuer
              destinationId: destinationId
            - transfer:
                tokenId: tokenId
                tokenName: tokenName
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
              payment:
                amount: amount
                unit: unit
                issuer: issuer
              destinationId: destinationId
            - transfer:
                tokenId: tokenId
                tokenName: tokenName
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
              payment:
                amount: amount
                unit: unit
                issuer: issuer
              destinationId: destinationId
            - transfer:
                tokenId: tokenId
                tokenName: tokenName
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
              payment:
                amount: amount
                unit: unit
                issuer: issuer
              destinationId: destinationId
            - transfer:
                tokenId: tokenId
                tokenName: tokenName
              smartContract:
                function:
                  functionId: functionId
                  code: code
                  name: name
                  inputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  outputParameters:
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                  - type: type
                    value: '{}'
                    key: key
                detail: detail
                type: type
                smartContractId: smartContractId
                extraFields: '{}'
              payment:
                amount: amount
                unit: unit
                issuer: issuer
              destinationId: destinationId
            signed: signed
            totalPaymentAmount:
            - amount: amount
              unit: unit
              issuer: issuer
            - amount: amount
              unit: unit
              issuer: issuer
            - amount: amount
              unit: unit
              issuer: issuer
            - amount: amount
              unit: unit
              issuer: issuer
            - amount: amount
              unit: unit
              issuer: issuer
            message: message
            transactionId: transactionId
            encoded:
            - encoded
            - encoded
            - encoded
            - encoded
            - encoded
            extraFields: '{}'
            nativeData: '{}'
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
          extraFields: '{}'
      properties:
        executionTransactionSearchOverledgerErrorResponse:
          $ref: '#/components/schemas/PrepareAndExecuteOverledgerErrorResponse'
        preparationTransactionSearchResponse:
          $ref: '#/components/schemas/PrepareTransactionResponse'
        executionTransactionSearchResponse:
          $ref: '#/components/schemas/ExecuteSearchTransactionResponse'
      type: object
    ResourceMonitoringAddressDetails:
      additionalProperties: false
      example:
        addressId: addressId
      properties:
        addressId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    ResourceMonitoringDetails:
      additionalProperties: false
      example:
        resourceMonitoringId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        location:
          technology: technology
          network: network
        type: type
        timestamp: timestamp
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
      properties:
        resourceMonitoringId:
          format: uuid
          type: string
        location:
          $ref: '#/components/schemas/Location'
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
        timestamp:
          type: string
        status:
          $ref: '#/components/schemas/Status'
      type: object
    SmartContractReadFunctionSchema:
      additionalProperties: false
      example:
        functionId: functionId
        name: name
        inputParameters:
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        outputParameters:
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
      properties:
        functionId:
          type: string
        name:
          type: string
        inputParameters:
          items:
            $ref: '#/components/schemas/SmartContractInputParameterSchema'
          maxItems: 20
          minItems: 0
          type: array
        outputParameters:
          items:
            $ref: '#/components/schemas/SmartContractInputParameterSchema'
          maxItems: 10
          minItems: 0
          type: array
      type: object
    PrepareCreditTransactionRequestSchema:
      additionalProperties: false
      example:
        urgency: urgency
        requestDetails:
          payee:
          - payment:
              amount: amount
              unit: unit
            payeeId: payeeId
          - payment:
              amount: amount
              unit: unit
            payeeId: payeeId
          - payment:
              amount: amount
              unit: unit
            payeeId: payeeId
          - payment:
              amount: amount
              unit: unit
            payeeId: payeeId
          - payment:
              amount: amount
              unit: unit
            payeeId: payeeId
          overledgerSigningType: overledgerSigningType
          message: message
          payer:
          - payerId: payerId
          - payerId: payerId
          - payerId: payerId
          - payerId: payerId
          - payerId: payerId
        location:
          technology: technology
          network: network
        type: type
      properties:
        urgency:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
        requestDetails:
          $ref: '#/components/schemas/CreditRequestDetailsSchema'
        location:
          $ref: '#/components/schemas/Location'
        type:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
      type: object
    DestinationPaymentSchema:
      additionalProperties: false
      description: The Destination of this transaction
      example:
        payment:
          amount: amount
          unit: unit
        destinationId: destinationId
      properties:
        payment:
          $ref: '#/components/schemas/PaymentSchema'
        destinationId:
          description: The unique identifiers of the destination
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}
          type: string
      type: object
    OriginPaymentSchema:
      additionalProperties: false
      description: Where is this transaction coming from
      example:
        originId: originId
      properties:
        originId:
          description: Unique Identifier of the originator
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}$
          type: string
      type: object
    DeleteResourceMonitoringAddressSchema:
      additionalProperties: false
      example:
        addressMonitoringDetails:
          addressId: addressId
        resourceMonitoring:
          resourceMonitoringId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          location:
            technology: technology
            network: network
          type: type
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
      properties:
        addressMonitoringDetails:
          $ref: '#/components/schemas/ResourceMonitoringAddressDetails'
        resourceMonitoring:
          $ref: '#/components/schemas/ResourceMonitoringDetails'
      type: object
    SubscriptionDetails:
      additionalProperties: false
      example:
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        status:
          $ref: '#/components/schemas/Status'
      type: object
    ExecuteSmartContractReadResponseSchema:
      additionalProperties: false
      example:
        smartContract:
          function:
            functionId: functionId
            name: name
            inputParameters:
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            outputParameters:
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
            - type: type
              value: value
          smartContractId: smartContractId
        location:
          technology: technology
          network: network
      properties:
        smartContract:
          $ref: '#/components/schemas/SmartContractReadSchema'
        location:
          $ref: '#/components/schemas/Location'
      type: object
    SubscriptionUpdateResponse:
      additionalProperties: false
      example:
        subscriptionDetails:
          ids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        callbackUrl: callbackUrl
        subscriptionId: subscriptionId
        type: type
      properties:
        subscriptionDetails:
          $ref: '#/components/schemas/SubscriptionDetails'
        callbackUrl:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
        subscriptionId:
          maxLength: 24
          minLength: 0
          pattern: ^[a-z0-9-]{1,24}$
          type: string
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
      type: object
    CreateSmartContractMonitoringSchema:
      additionalProperties: false
      example:
        subscriptionDetails:
          ids:
          - ids
          - ids
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        resourceMonitoring:
          resourceMonitoringId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          location:
            technology: technology
            network: network
          type: type
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        subscription:
          callbackUrl: callbackUrl
          subscriptionId: subscriptionId
          type: type
      properties:
        subscriptionDetails:
          $ref: '#/components/schemas/ResourceMonitoringSubscriptionDetails'
        resourceMonitoring:
          $ref: '#/components/schemas/ResourceMonitoringDetails'
        subscription:
          $ref: '#/components/schemas/ResourceMonitoringSubscription'
      type: object
    PrepareTransactionSmartContractInvokeRequestSchema:
      additionalProperties: false
      properties:
        urgency:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
        requestDetails:
          $ref: '#/components/schemas/SmartContractInvokeRequestDetailsSchema'
        location:
          $ref: '#/components/schemas/Location'
        type:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
      type: object
    MonitorSmartContractEventParam:
      additionalProperties: false
      example:
        selectedIntegerLength: selectedIntegerLength
        type: type
        value: value
      properties:
        selectedIntegerLength:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,30}$
          type: string
        type:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z]{1,30}$
          type: string
        value:
          maxLength: 150
          minLength: 0
          pattern: ^[a-zA-Z0-9_ ]{1,150}$
          type: string
      type: object
    PrepareTransferTransactionRequestSchema:
      additionalProperties: false
      properties:
        urgency:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
        requestDetails:
          $ref: '#/components/schemas/TransferRequestDetailsSchema'
        location:
          $ref: '#/components/schemas/Location'
        type:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
      type: object
    AddressMonitoringResponseSchema:
      additionalProperties: false
      example:
        subscriptionDetails:
          ids:
          - ids
          - ids
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        resourceMonitoring:
          resourceMonitoringId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          location:
            technology: technology
            network: network
          type: type
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        subscription:
          callbackUrl: callbackUrl
          subscriptionId: subscriptionId
          type: type
      properties:
        subscriptionDetails:
          $ref: '#/components/schemas/ResourceMonitoringSubscriptionDetails'
        resourceMonitoring:
          $ref: '#/components/schemas/ResourceMonitoringDetails'
        subscription:
          $ref: '#/components/schemas/ResourceMonitoringSubscription'
      type: object
    PrepareSearchSmartContractRequestSchema:
      additionalProperties: false
      example:
        requestDetails:
          destination:
          - smartContract:
              function:
                name: name
                inputParameters:
                - type: type
                  value: value
                - type: type
                  value: value
                - type: type
                  value: value
                - type: type
                  value: value
                - type: type
                  value: value
                outputParameters:
                - type: type
                - type: type
                - type: type
                - type: type
                - type: type
              smartContractId: smartContractId
        location:
          technology: technology
          network: network
      properties:
        requestDetails:
          $ref: '#/components/schemas/SmartContractSearchRequestDetails'
        location:
          $ref: '#/components/schemas/Location'
      type: object
    SmartContractDestinationSchema:
      additionalProperties: false
      properties:
        smartContract:
          $ref: '#/components/schemas/SmartContractSchema'
        payment:
          $ref: '#/components/schemas/SmartContractPaymentSchema'
        destinationId:
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}$
          type: string
      type: object
    UpdateSubscriptionRequestSchema:
      additionalProperties: false
      example:
        statusUpdate:
          value: value
        callbackUrl: callbackUrl
      properties:
        statusUpdate:
          $ref: '#/components/schemas/StatusUpdateSchema'
        callbackUrl:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
      type: object
    SmartContractFunctionSchema:
      additionalProperties: false
      properties:
        name:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9,_ ]{1,50}$
          type: string
        inputParameters:
          items:
            $ref: '#/components/schemas/SmartContractInputParameterSchema'
          maxItems: 20
          minItems: 0
          type: array
      type: object
    ExecuteSearchUTXOResponse:
      additionalProperties: false
      example:
        utxoId: utxoId
        destination:
        - transfer:
            tokenId: tokenId
            tokenName: tokenName
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
          payment:
            amount: amount
            unit: unit
            issuer: issuer
          destinationId: destinationId
        location:
          technology: technology
          network: network
        timestamp: timestamp
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
        nativeData: '{}'
      properties:
        utxoId:
          type: string
        destination:
          items:
            $ref: '#/components/schemas/Destination'
          maxItems: 1
          minItems: 0
          type: array
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z_0-9.,:\- ]{1,50}
          type: string
        status:
          $ref: '#/components/schemas/Status'
        nativeData:
          type: object
      type: object
    UpdateAddressMonitoringSchema:
      additionalProperties: false
      example:
        addressMonitoringDetails:
          addressId: addressId
        resourceMonitoring:
          resourceMonitoringId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          location:
            technology: technology
            network: network
          type: type
          timestamp: timestamp
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
      properties:
        addressMonitoringDetails:
          $ref: '#/components/schemas/ResourceMonitoringAddressDetails'
        resourceMonitoring:
          $ref: '#/components/schemas/ResourceMonitoringDetails'
      type: object
    PrepareNativeTransactionRequestSchema:
      additionalProperties: false
      example:
        location:
          technology: technology
          network: network
        type: type
      properties:
        location:
          $ref: '#/components/schemas/Location'
        type:
          description: The type of the object
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
      type: object
    Payment:
      additionalProperties: false
      example:
        amount: amount
        unit: unit
        issuer: issuer
      properties:
        amount:
          description: The amount of a currency
          maxLength: 100
          minLength: 0
          pattern: ^[A-Za-z0-9. ]{1,100}
          type: string
        unit:
          description: The unit of this currency/token
          maxLength: 5
          minLength: 0
          pattern: ^[A-Za-z0-9 ]{1,5}
          type: string
        issuer:
          maxLength: 20
          minLength: 0
          pattern: ^[A-Za-z0-9 ]{1,20}
          type: string
      type: object
    ExecuteSearchSequenceResponse:
      additionalProperties: false
      example:
        sequence: sequence
        location:
          technology: technology
          network: network
        timestamp: timestamp
        addressId: addressId
      properties:
        sequence:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          type: string
        addressId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    PrepareAndExecuteOverledgerErrorResponse:
      additionalProperties: false
      example:
        code: code
        description: description
        category: category
      properties:
        code:
          type: string
        description:
          type: string
        category:
          type: string
      type: object
    ErrorList:
      additionalProperties: false
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        errorCount:
          format: int32
          type: integer
      type: object
    Transaction:
      additionalProperties: false
      description: Smallest unit of a work process related to interactions with distributed
        ledgers
      example:
        signature:
        - signature
        - signature
        - signature
        - signature
        - signature
        origin:
        - sequence: sequence
          originId: originId
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
        - sequence: sequence
          originId: originId
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
        - sequence: sequence
          originId: originId
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
        - sequence: sequence
          originId: originId
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
        - sequence: sequence
          originId: originId
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
        fee:
          amount: amount
          unit: unit
        destination:
        - transfer:
            tokenId: tokenId
            tokenName: tokenName
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
          payment:
            amount: amount
            unit: unit
            issuer: issuer
          destinationId: destinationId
        - transfer:
            tokenId: tokenId
            tokenName: tokenName
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
          payment:
            amount: amount
            unit: unit
            issuer: issuer
          destinationId: destinationId
        - transfer:
            tokenId: tokenId
            tokenName: tokenName
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
          payment:
            amount: amount
            unit: unit
            issuer: issuer
          destinationId: destinationId
        - transfer:
            tokenId: tokenId
            tokenName: tokenName
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
          payment:
            amount: amount
            unit: unit
            issuer: issuer
          destinationId: destinationId
        - transfer:
            tokenId: tokenId
            tokenName: tokenName
          smartContract:
            function:
              functionId: functionId
              code: code
              name: name
              inputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              outputParameters:
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
              - type: type
                value: '{}'
                key: key
            detail: detail
            type: type
            smartContractId: smartContractId
            extraFields: '{}'
          payment:
            amount: amount
            unit: unit
            issuer: issuer
          destinationId: destinationId
        signed: signed
        totalPaymentAmount:
        - amount: amount
          unit: unit
          issuer: issuer
        - amount: amount
          unit: unit
          issuer: issuer
        - amount: amount
          unit: unit
          issuer: issuer
        - amount: amount
          unit: unit
          issuer: issuer
        - amount: amount
          unit: unit
          issuer: issuer
        message: message
        transactionId: transactionId
        encoded:
        - encoded
        - encoded
        - encoded
        - encoded
        - encoded
        extraFields: '{}'
        nativeData: '{}'
      properties:
        signature:
          description: The signatures of this transaction
          items:
            description: The signatures of this transaction
            type: string
          maxItems: 20000
          minItems: 0
          type: array
        origin:
          items:
            $ref: '#/components/schemas/Origin'
          maxItems: 20000
          minItems: 0
          type: array
        fee:
          $ref: '#/components/schemas/Fee'
        destination:
          items:
            $ref: '#/components/schemas/Destination'
          maxItems: 13107
          minItems: 0
          type: array
        signed:
          maxLength: 400
          minLength: 0
          pattern: ^[A-Za-z0-9-]{1,400}$
          type: string
        totalPaymentAmount:
          items:
            $ref: '#/components/schemas/Payment'
          maxItems: 20
          minItems: 0
          type: array
        message:
          description: Any text-based element of the data payload
          maxLength: 150
          minLength: 0
          pattern: ^[\S\s]{1,150}$
          type: string
        transactionId:
          description: The unique identifier of the transaction on this DLN
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
        encoded:
          items:
            type: string
          maxItems: 100
          minItems: 0
          type: array
        extraFields:
          type: object
        nativeData:
          type: object
      type: object
    CreditRequestDetailsSchema:
      additionalProperties: false
      example:
        payee:
        - payment:
            amount: amount
            unit: unit
          payeeId: payeeId
        - payment:
            amount: amount
            unit: unit
          payeeId: payeeId
        - payment:
            amount: amount
            unit: unit
          payeeId: payeeId
        - payment:
            amount: amount
            unit: unit
          payeeId: payeeId
        - payment:
            amount: amount
            unit: unit
          payeeId: payeeId
        overledgerSigningType: overledgerSigningType
        message: message
        payer:
        - payerId: payerId
        - payerId: payerId
        - payerId: payerId
        - payerId: payerId
        - payerId: payerId
      properties:
        payee:
          description: Who are the payees of this transaction
          items:
            $ref: '#/components/schemas/PayeeCreditSchema'
          maxItems: 100
          minItems: 0
          type: array
        overledgerSigningType:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z- ]{1,30}
          type: string
        message:
          description: Any text-based element of the data payload
          maxLength: 150
          minLength: 0
          pattern: ^[\S\s]{1,150}$
          type: string
        payer:
          description: Who are the payers of this transaction
          items:
            $ref: '#/components/schemas/PayerCreditSchema'
          maxItems: 100
          minItems: 0
          type: array
      type: object
    Block:
      additionalProperties: false
      example:
        blockId: blockId
        number: 0
        transactionIds:
        - transactionIds
        - transactionIds
        - transactionIds
        - transactionIds
        - transactionIds
        size:
        - type: type
          value: value
          key: key
        - type: type
          value: value
          key: key
        - type: type
          value: value
          key: key
        - type: type
          value: value
          key: key
        - type: type
          value: value
          key: key
        hashes:
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        linkedBlocks:
          parent: parent
          child: child
        numberOfTransactions: 6
        message: message
        timestamp: timestamp
        nativeData: '{}'
      properties:
        blockId:
          maxLength: 150
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,150}$
          type: string
        number:
          type: integer
        transactionIds:
          items:
            type: string
          maxItems: 10000
          minItems: 0
          type: array
        size:
          items:
            $ref: '#/components/schemas/BlockSize'
          maxItems: 10
          minItems: 0
          type: array
        hashes:
          items:
            $ref: '#/components/schemas/BlockHash'
          maxItems: 10
          minItems: 0
          type: array
        linkedBlocks:
          $ref: '#/components/schemas/LinkedBlocks'
        numberOfTransactions:
          format: int32
          type: integer
        message:
          maxLength: 150
          minLength: 0
          pattern: ^[\S\s]{1,150}$
          type: string
        timestamp:
          type: string
        nativeData:
          type: object
      type: object
    ResourceMonitoringSubscriptionDetails:
      additionalProperties: false
      example:
        ids:
        - ids
        - ids
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
      properties:
        ids:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/Status'
      type: object
    ExecuteSearchUTXOResponseSchema:
      additionalProperties: false
      example:
        utxoId: utxoId
        destination:
        - smartContract:
            detail: detail
            type: type
            extraFields:
              requiredSignatures: 0.8008281904610115
          payment:
            amount: amount
            unit: unit
            issuer: issuer
          destinationId: destinationId
        location:
          technology: technology
          network: network
        timestamp:
          nano: nano
          epochSecond: epochSecond
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
        nativeData:
          vout:
          - scriptPubKey:
              addresses:
              - addresses
              - addresses
              asm: asm
              hex: hex
              type: type
              reqSigs: reqSigs
            value: 6.027456183070403
            n: 1.4658129805029452
      properties:
        utxoId:
          type: string
        destination:
          items:
            $ref: '#/components/schemas/UTXODestination'
          maxItems: 1
          minItems: 0
          type: array
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          $ref: '#/components/schemas/UTXOTimestampSchema'
        status:
          $ref: '#/components/schemas/Status'
        nativeData:
          $ref: '#/components/schemas/UTXONativeData'
      type: object
    AutoExecuteSearchAddressBalanceResponseSchema:
      additionalProperties: false
      example:
        executionAddressBalanceSearchResponse:
          balances:
          - unit: unit
            amount: amount
          - unit: unit
            amount: amount
          - unit: unit
            amount: amount
          - unit: unit
            amount: amount
          - unit: unit
            amount: amount
          location:
            technology: technology
            network: network
          timestamp: timestamp
          addressId: addressId
        prepareAndExecuteOverledgerErrorResponse:
          code: code
          description: description
          category: category
        preparationAddressBalanceSearchResponse:
          gatewayFee:
            amount: amount
            unit: unit
          requestId: requestId
      properties:
        executionAddressBalanceSearchResponse:
          $ref: '#/components/schemas/PrepareAndExecuteSearchAddressBalanceResponse'
        prepareAndExecuteOverledgerErrorResponse:
          $ref: '#/components/schemas/PrepareAndExecuteOverledgerErrorResponse'
        preparationAddressBalanceSearchResponse:
          $ref: '#/components/schemas/PrepareSearchResponseSchema'
      type: object
    UTXONativeData:
      additionalProperties: false
      example:
        vout:
        - scriptPubKey:
            addresses:
            - addresses
            - addresses
            asm: asm
            hex: hex
            type: type
            reqSigs: reqSigs
          value: 6.027456183070403
          n: 1.4658129805029452
      properties:
        vout:
          items:
            $ref: '#/components/schemas/Vout'
          maxItems: 1
          minItems: 0
          type: array
      type: object
    Destination:
      additionalProperties: false
      description: The Destination of this transaction
      example:
        transfer:
          tokenId: tokenId
          tokenName: tokenName
        smartContract:
          function:
            functionId: functionId
            code: code
            name: name
            inputParameters:
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            outputParameters:
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
            - type: type
              value: '{}'
              key: key
          detail: detail
          type: type
          smartContractId: smartContractId
          extraFields: '{}'
        payment:
          amount: amount
          unit: unit
          issuer: issuer
        destinationId: destinationId
      properties:
        transfer:
          $ref: '#/components/schemas/Transfer'
        smartContract:
          $ref: '#/components/schemas/SmartContract'
        payment:
          $ref: '#/components/schemas/Payment'
        destinationId:
          description: The unique identifiers of the destination
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}
          type: string
      type: object
    ExtraFields:
      additionalProperties: false
      example:
        requiredSignatures: 0.8008281904610115
      properties:
        requiredSignatures:
          type: number
      type: object
    ApproveRequestDetailsSchema:
      additionalProperties: false
      properties:
        mandate:
          description: Who are the payees of this transaction
          items:
            $ref: '#/components/schemas/PayeeCreditSchema'
          maxItems: 100
          minItems: 0
          type: array
        overledgerSigningType:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z- ]{1,30}
          type: string
        payer:
          description: Who are the payers of this transaction
          items:
            $ref: '#/components/schemas/PayerCreditSchema'
          maxItems: 100
          minItems: 0
          type: array
      type: object
    SmartContractSearchFunctionSchema:
      additionalProperties: false
      example:
        name: name
        inputParameters:
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        - type: type
          value: value
        outputParameters:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
      properties:
        name:
          maxLength: 20
          minLength: 0
          pattern: ^[A-Za-z0-9]{1,20}$
          type: string
        inputParameters:
          items:
            $ref: '#/components/schemas/SmartContractInputParameterSchema'
          maxItems: 20
          minItems: 0
          type: array
        outputParameters:
          items:
            $ref: '#/components/schemas/SmartContractOutputParameterSchema'
          maxItems: 10
          minItems: 0
          type: array
      type: object
    PreparePaymentTransactionRequestSchema:
      additionalProperties: false
      example:
        urgency: urgency
        requestDetails:
          overledgerSigningType: overledgerSigningType
          origin:
          - originId: originId
          - originId: originId
          - originId: originId
          - originId: originId
          - originId: originId
          destination:
          - payment:
              amount: amount
              unit: unit
            destinationId: destinationId
          - payment:
              amount: amount
              unit: unit
            destinationId: destinationId
          - payment:
              amount: amount
              unit: unit
            destinationId: destinationId
          - payment:
              amount: amount
              unit: unit
            destinationId: destinationId
          - payment:
              amount: amount
              unit: unit
            destinationId: destinationId
          message: message
        location:
          technology: technology
          network: network
        type: type
      properties:
        urgency:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
        requestDetails:
          $ref: '#/components/schemas/PaymentRequestDetailsSchema'
        location:
          $ref: '#/components/schemas/Location'
        type:
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
      type: object
    StatusUpdateMonitoringRequestSchema:
      additionalProperties: false
      example:
        statusUpdate:
          value: value
      properties:
        statusUpdate:
          $ref: '#/components/schemas/StatusUpdateSchema'
      type: object
    Function:
      additionalProperties: false
      example:
        functionId: functionId
        code: code
        name: name
        inputParameters:
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
        outputParameters:
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
        - type: type
          value: '{}'
          key: key
      properties:
        functionId:
          maxLength: 30
          minLength: 0
          pattern: ^[\S\s]{1,30}$
          type: string
        code:
          maxLength: 30
          minLength: 0
          pattern: ^[\S\s]{1,30}$
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        inputParameters:
          items:
            $ref: '#/components/schemas/Parameter'
          maxItems: 20
          minItems: 0
          type: array
        outputParameters:
          items:
            $ref: '#/components/schemas/Parameter'
          maxItems: 10
          minItems: 0
          type: array
      type: object
    CreateSubscriptionRequestSchema:
      additionalProperties: false
      example:
        ids:
        - ids
        - ids
        - ids
        - ids
        - ids
        callbackUrl: callbackUrl
        type: type
      properties:
        ids:
          items:
            type: string
          maxItems: 36
          minItems: 0
          type: array
        callbackUrl:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
      type: object
    AutoExecSearchAddressSequenceResponseSchema:
      additionalProperties: false
      example:
        preparationAddressSequenceSearchResponse:
          gatewayFee:
            amount: amount
            unit: unit
          requestId: requestId
        prepareAndExecuteOverledgerErrorResponse:
          code: code
          description: description
          category: category
        executionAddressSequenceSearchResponse:
          sequence: sequence
          location:
            technology: technology
            network: network
          timestamp: timestamp
          addressId: addressId
      properties:
        preparationAddressSequenceSearchResponse:
          $ref: '#/components/schemas/PrepareSearchResponseSchema'
        prepareAndExecuteOverledgerErrorResponse:
          $ref: '#/components/schemas/PrepareAndExecuteOverledgerErrorResponse'
        executionAddressSequenceSearchResponse:
          $ref: '#/components/schemas/ExecuteSearchSequenceResponse'
      type: object
    SubscriptionDeletionResponse:
      additionalProperties: false
      example:
        subscriptionDetails:
          ids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status:
            code: code
            description: description
            message: message
            value: value
            timestamp: timestamp
        callbackUrl: callbackUrl
        subscriptionId: subscriptionId
        type: type
      properties:
        subscriptionDetails:
          $ref: '#/components/schemas/SubscriptionDetails'
        callbackUrl:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
        subscriptionId:
          maxLength: 24
          minLength: 0
          pattern: ^[a-z0-9-]{1,24}$
          type: string
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
      type: object
    PaymentSchema:
      additionalProperties: false
      example:
        amount: amount
        unit: unit
      properties:
        amount:
          description: The amount of a currency
          maxLength: 100
          minLength: 0
          pattern: ^[A-Za-z0-9. ]{1,100}
          type: string
        unit:
          description: The unit of this currency/token
          maxLength: 5
          minLength: 0
          pattern: ^[A-Za-z0-9 ]{1,5}
          type: string
      required:
      - amount
      type: object
    OriginTransferSchema:
      additionalProperties: false
      properties:
        originId:
          maxLength: 66
          minLength: 0
          pattern: ^[A-Za-z0-9:]{1,66}$
          type: string
      type: object
    SmartContractSearchRequestDetails:
      additionalProperties: false
      example:
        destination:
        - smartContract:
            function:
              name: name
              inputParameters:
              - type: type
                value: value
              - type: type
                value: value
              - type: type
                value: value
              - type: type
                value: value
              - type: type
                value: value
              outputParameters:
              - type: type
              - type: type
              - type: type
              - type: type
              - type: type
            smartContractId: smartContractId
      properties:
        destination:
          items:
            $ref: '#/components/schemas/SmartContractSearchDestinationSchema'
          maxItems: 1
          minItems: 0
          type: array
      type: object
    ResourceMonitoringSubscription:
      additionalProperties: false
      example:
        callbackUrl: callbackUrl
        subscriptionId: subscriptionId
        type: type
      properties:
        callbackUrl:
          maxLength: 300
          minLength: 0
          pattern: ^http[\S\s]{1,300}$
          type: string
        subscriptionId:
          maxLength: 24
          minLength: 0
          pattern: ^[a-z0-9-]{1,24}$
          type: string
        type:
          maxLength: 50
          minLength: 0
          pattern: ^[a-zA-Z0-9-_ ]{1,50}$
          type: string
      type: object
    Error:
      additionalProperties: false
      properties:
        code:
          format: int32
          maximum: 30
          minimum: 0
          type: integer
        service:
          maxLength: 50
          minLength: 0
          pattern: ^[\S\s]{1,50}$
          type: string
        message:
          maxLength: 300
          minLength: 0
          pattern: ^[\S\s]{1,300}$
          type: string
        timestamp:
          format: int64
          type: integer
      type: object
    SmartContractReadSchema:
      additionalProperties: false
      description: Computer program storage in a DLT system where the outcome is recorded
        on the distributed ledger
      example:
        function:
          functionId: functionId
          name: name
          inputParameters:
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          outputParameters:
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
        smartContractId: smartContractId
      properties:
        function:
          $ref: '#/components/schemas/SmartContractReadFunctionSchema'
        smartContractId:
          type: string
      type: object
    SubscriptionDetailsSchema:
      additionalProperties: false
      example:
        ids:
        - ids
        - ids
        status:
          code: code
          description: description
          message: message
          value: value
          timestamp: timestamp
      properties:
        ids:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/Status'
      type: object
    DestinationTransferSchema:
      additionalProperties: false
      properties:
        transfer:
          $ref: '#/components/schemas/TransferSchema'
        destinationId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    UTXODestination:
      additionalProperties: false
      example:
        smartContract:
          detail: detail
          type: type
          extraFields:
            requiredSignatures: 0.8008281904610115
        payment:
          amount: amount
          unit: unit
          issuer: issuer
        destinationId: destinationId
      properties:
        smartContract:
          $ref: '#/components/schemas/UTXOSmartContract'
        payment:
          $ref: '#/components/schemas/Payment'
        destinationId:
          type: string
      type: object
    PrepareAndExecuteSearchAddressBalanceResponse:
      additionalProperties: false
      example:
        balances:
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        - unit: unit
          amount: amount
        location:
          technology: technology
          network: network
        timestamp: timestamp
        addressId: addressId
      properties:
        balances:
          items:
            $ref: '#/components/schemas/PrepareAndExecuteBalanceDetails'
          maxItems: 100
          minItems: 0
          type: array
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          type: string
        addressId:
          maxLength: 100
          minLength: 0
          pattern: ^[a-zA-Z0-9]{1,100}$
          type: string
      type: object
    SmartContractSearchSchema:
      additionalProperties: false
      example:
        function:
          name: name
          inputParameters:
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          - type: type
            value: value
          outputParameters:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
        smartContractId: smartContractId
      properties:
        function:
          $ref: '#/components/schemas/SmartContractSearchFunctionSchema'
        smartContractId:
          maxLength: 44
          minLength: 0
          pattern: ^[A-Za-z0-9]{1,44}$
          type: string
      type: object
    Location:
      additionalProperties: false
      description: Unique reference to the ledger on a particular ledger network (optionally
        accessed from a particular node)
      example:
        technology: technology
        network: network
      properties:
        technology:
          description: The technology used by the desired network
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
        network:
          description: The network that the ledger resides on
          maxLength: 30
          minLength: 0
          pattern: ^[A-Za-z ]{1,30}
          type: string
      required:
      - network
      - technology
      type: object
  securitySchemes:
    OAuth2_Security_Scheme:
      description: This API uses OAuth 2 with the Client Credential grant flow.
      flows:
        clientCredentials:
          scopes:
            aws.cognito.signin.user.admin: Grants access to all the User Pool APIs
              that can be accessed using access tokens alone.
            phone: Grants returning the phone claim, which contains the user's phone
              number, and phone_number_verified.
            openid: Grants an application to use OIDC to verify the user's identity.
            profile: Grants returning basic profile information.
            overledger/read.scope: Grants read access to Overledger.
            email: Grants returning the email claim, which contains the user's email
              address, and email_verified.
          tokenUrl: https://auth.overledger.io/oauth2/token
      type: oauth2
