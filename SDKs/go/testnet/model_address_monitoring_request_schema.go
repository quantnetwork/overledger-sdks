/*
Quant Overledger API

Quant's Overledger API allows developers to create applications for multiple DLT's using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps â€“ prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddressMonitoringRequestSchema struct for AddressMonitoringRequestSchema
type AddressMonitoringRequestSchema struct {
	CallBackURL *string `json:"callBackURL,omitempty"`
	Location *Location `json:"location,omitempty"`
	AddressId *string `json:"addressId,omitempty"`
}

// NewAddressMonitoringRequestSchema instantiates a new AddressMonitoringRequestSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressMonitoringRequestSchema() *AddressMonitoringRequestSchema {
	this := AddressMonitoringRequestSchema{}
	return &this
}

// NewAddressMonitoringRequestSchemaWithDefaults instantiates a new AddressMonitoringRequestSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressMonitoringRequestSchemaWithDefaults() *AddressMonitoringRequestSchema {
	this := AddressMonitoringRequestSchema{}
	return &this
}

// GetCallBackURL returns the CallBackURL field value if set, zero value otherwise.
func (o *AddressMonitoringRequestSchema) GetCallBackURL() string {
	if o == nil || o.CallBackURL == nil {
		var ret string
		return ret
	}
	return *o.CallBackURL
}

// GetCallBackURLOk returns a tuple with the CallBackURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressMonitoringRequestSchema) GetCallBackURLOk() (*string, bool) {
	if o == nil || o.CallBackURL == nil {
		return nil, false
	}
	return o.CallBackURL, true
}

// HasCallBackURL returns a boolean if a field has been set.
func (o *AddressMonitoringRequestSchema) HasCallBackURL() bool {
	if o != nil && o.CallBackURL != nil {
		return true
	}

	return false
}

// SetCallBackURL gets a reference to the given string and assigns it to the CallBackURL field.
func (o *AddressMonitoringRequestSchema) SetCallBackURL(v string) {
	o.CallBackURL = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *AddressMonitoringRequestSchema) GetLocation() Location {
	if o == nil || o.Location == nil {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressMonitoringRequestSchema) GetLocationOk() (*Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *AddressMonitoringRequestSchema) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *AddressMonitoringRequestSchema) SetLocation(v Location) {
	o.Location = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *AddressMonitoringRequestSchema) GetAddressId() string {
	if o == nil || o.AddressId == nil {
		var ret string
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressMonitoringRequestSchema) GetAddressIdOk() (*string, bool) {
	if o == nil || o.AddressId == nil {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *AddressMonitoringRequestSchema) HasAddressId() bool {
	if o != nil && o.AddressId != nil {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given string and assigns it to the AddressId field.
func (o *AddressMonitoringRequestSchema) SetAddressId(v string) {
	o.AddressId = &v
}

func (o AddressMonitoringRequestSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CallBackURL != nil {
		toSerialize["callBackURL"] = o.CallBackURL
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.AddressId != nil {
		toSerialize["addressId"] = o.AddressId
	}
	return json.Marshal(toSerialize)
}

type NullableAddressMonitoringRequestSchema struct {
	value *AddressMonitoringRequestSchema
	isSet bool
}

func (v NullableAddressMonitoringRequestSchema) Get() *AddressMonitoringRequestSchema {
	return v.value
}

func (v *NullableAddressMonitoringRequestSchema) Set(val *AddressMonitoringRequestSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressMonitoringRequestSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressMonitoringRequestSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressMonitoringRequestSchema(val *AddressMonitoringRequestSchema) *NullableAddressMonitoringRequestSchema {
	return &NullableAddressMonitoringRequestSchema{value: val, isSet: true}
}

func (v NullableAddressMonitoringRequestSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressMonitoringRequestSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


