{-
   Quant Overledger API

   Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

   OpenAPI Version: 3.0.1
   Quant Overledger API API version: 2.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : QuantOverledger.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module QuantOverledger.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import QuantOverledger.Model
import QuantOverledger.Core


-- * AddressBalanceResponse

-- | 'addressBalanceResponseUnit' Lens
addressBalanceResponseUnitL :: Lens_' AddressBalanceResponse (Maybe Text)
addressBalanceResponseUnitL f AddressBalanceResponse{..} = (\addressBalanceResponseUnit -> AddressBalanceResponse { addressBalanceResponseUnit, ..} ) <$> f addressBalanceResponseUnit
{-# INLINE addressBalanceResponseUnitL #-}

-- | 'addressBalanceResponseValue' Lens
addressBalanceResponseValueL :: Lens_' AddressBalanceResponse (Maybe Double)
addressBalanceResponseValueL f AddressBalanceResponse{..} = (\addressBalanceResponseValue -> AddressBalanceResponse { addressBalanceResponseValue, ..} ) <$> f addressBalanceResponseValue
{-# INLINE addressBalanceResponseValueL #-}

-- | 'addressBalanceResponseAddressId' Lens
addressBalanceResponseAddressIdL :: Lens_' AddressBalanceResponse (Maybe Text)
addressBalanceResponseAddressIdL f AddressBalanceResponse{..} = (\addressBalanceResponseAddressId -> AddressBalanceResponse { addressBalanceResponseAddressId, ..} ) <$> f addressBalanceResponseAddressId
{-# INLINE addressBalanceResponseAddressIdL #-}



-- * AddressMonitoringDetailsSchema

-- | 'addressMonitoringDetailsSchemaLocation' Lens
addressMonitoringDetailsSchemaLocationL :: Lens_' AddressMonitoringDetailsSchema (Maybe Location)
addressMonitoringDetailsSchemaLocationL f AddressMonitoringDetailsSchema{..} = (\addressMonitoringDetailsSchemaLocation -> AddressMonitoringDetailsSchema { addressMonitoringDetailsSchemaLocation, ..} ) <$> f addressMonitoringDetailsSchemaLocation
{-# INLINE addressMonitoringDetailsSchemaLocationL #-}

-- | 'addressMonitoringDetailsSchemaAddressDetails' Lens
addressMonitoringDetailsSchemaAddressDetailsL :: Lens_' AddressMonitoringDetailsSchema (Maybe ResourceMonitoredAddressDetails)
addressMonitoringDetailsSchemaAddressDetailsL f AddressMonitoringDetailsSchema{..} = (\addressMonitoringDetailsSchemaAddressDetails -> AddressMonitoringDetailsSchema { addressMonitoringDetailsSchemaAddressDetails, ..} ) <$> f addressMonitoringDetailsSchemaAddressDetails
{-# INLINE addressMonitoringDetailsSchemaAddressDetailsL #-}

-- | 'addressMonitoringDetailsSchemaType' Lens
addressMonitoringDetailsSchemaTypeL :: Lens_' AddressMonitoringDetailsSchema (Maybe Text)
addressMonitoringDetailsSchemaTypeL f AddressMonitoringDetailsSchema{..} = (\addressMonitoringDetailsSchemaType -> AddressMonitoringDetailsSchema { addressMonitoringDetailsSchemaType, ..} ) <$> f addressMonitoringDetailsSchemaType
{-# INLINE addressMonitoringDetailsSchemaTypeL #-}

-- | 'addressMonitoringDetailsSchemaTimestamp' Lens
addressMonitoringDetailsSchemaTimestampL :: Lens_' AddressMonitoringDetailsSchema (Maybe DateTime)
addressMonitoringDetailsSchemaTimestampL f AddressMonitoringDetailsSchema{..} = (\addressMonitoringDetailsSchemaTimestamp -> AddressMonitoringDetailsSchema { addressMonitoringDetailsSchemaTimestamp, ..} ) <$> f addressMonitoringDetailsSchemaTimestamp
{-# INLINE addressMonitoringDetailsSchemaTimestampL #-}



-- * AddressMonitoringRequestSchema

-- | 'addressMonitoringRequestSchemaCallBackUrl' Lens
addressMonitoringRequestSchemaCallBackUrlL :: Lens_' AddressMonitoringRequestSchema (Maybe Text)
addressMonitoringRequestSchemaCallBackUrlL f AddressMonitoringRequestSchema{..} = (\addressMonitoringRequestSchemaCallBackUrl -> AddressMonitoringRequestSchema { addressMonitoringRequestSchemaCallBackUrl, ..} ) <$> f addressMonitoringRequestSchemaCallBackUrl
{-# INLINE addressMonitoringRequestSchemaCallBackUrlL #-}

-- | 'addressMonitoringRequestSchemaLocation' Lens
addressMonitoringRequestSchemaLocationL :: Lens_' AddressMonitoringRequestSchema (Maybe Location)
addressMonitoringRequestSchemaLocationL f AddressMonitoringRequestSchema{..} = (\addressMonitoringRequestSchemaLocation -> AddressMonitoringRequestSchema { addressMonitoringRequestSchemaLocation, ..} ) <$> f addressMonitoringRequestSchemaLocation
{-# INLINE addressMonitoringRequestSchemaLocationL #-}

-- | 'addressMonitoringRequestSchemaAddressId' Lens
addressMonitoringRequestSchemaAddressIdL :: Lens_' AddressMonitoringRequestSchema (Maybe Text)
addressMonitoringRequestSchemaAddressIdL f AddressMonitoringRequestSchema{..} = (\addressMonitoringRequestSchemaAddressId -> AddressMonitoringRequestSchema { addressMonitoringRequestSchemaAddressId, ..} ) <$> f addressMonitoringRequestSchemaAddressId
{-# INLINE addressMonitoringRequestSchemaAddressIdL #-}



-- * AddressMonitoringResponseSchema

-- | 'addressMonitoringResponseSchemaSubscriptionDetails' Lens
addressMonitoringResponseSchemaSubscriptionDetailsL :: Lens_' AddressMonitoringResponseSchema (Maybe ResourceMonitoringSubscriptionDetails)
addressMonitoringResponseSchemaSubscriptionDetailsL f AddressMonitoringResponseSchema{..} = (\addressMonitoringResponseSchemaSubscriptionDetails -> AddressMonitoringResponseSchema { addressMonitoringResponseSchemaSubscriptionDetails, ..} ) <$> f addressMonitoringResponseSchemaSubscriptionDetails
{-# INLINE addressMonitoringResponseSchemaSubscriptionDetailsL #-}

-- | 'addressMonitoringResponseSchemaResourceMonitoring' Lens
addressMonitoringResponseSchemaResourceMonitoringL :: Lens_' AddressMonitoringResponseSchema (Maybe ResourceMonitoringDetails)
addressMonitoringResponseSchemaResourceMonitoringL f AddressMonitoringResponseSchema{..} = (\addressMonitoringResponseSchemaResourceMonitoring -> AddressMonitoringResponseSchema { addressMonitoringResponseSchemaResourceMonitoring, ..} ) <$> f addressMonitoringResponseSchemaResourceMonitoring
{-# INLINE addressMonitoringResponseSchemaResourceMonitoringL #-}

-- | 'addressMonitoringResponseSchemaSubscription' Lens
addressMonitoringResponseSchemaSubscriptionL :: Lens_' AddressMonitoringResponseSchema (Maybe ResourceMonitoringSubscription)
addressMonitoringResponseSchemaSubscriptionL f AddressMonitoringResponseSchema{..} = (\addressMonitoringResponseSchemaSubscription -> AddressMonitoringResponseSchema { addressMonitoringResponseSchemaSubscription, ..} ) <$> f addressMonitoringResponseSchemaSubscription
{-# INLINE addressMonitoringResponseSchemaSubscriptionL #-}



-- * Block

-- | 'blockBlockId' Lens
blockBlockIdL :: Lens_' Block (Maybe Text)
blockBlockIdL f Block{..} = (\blockBlockId -> Block { blockBlockId, ..} ) <$> f blockBlockId
{-# INLINE blockBlockIdL #-}

-- | 'blockNumber' Lens
blockNumberL :: Lens_' Block (Maybe Int)
blockNumberL f Block{..} = (\blockNumber -> Block { blockNumber, ..} ) <$> f blockNumber
{-# INLINE blockNumberL #-}

-- | 'blockTransactionIds' Lens
blockTransactionIdsL :: Lens_' Block (Maybe [Text])
blockTransactionIdsL f Block{..} = (\blockTransactionIds -> Block { blockTransactionIds, ..} ) <$> f blockTransactionIds
{-# INLINE blockTransactionIdsL #-}

-- | 'blockSize' Lens
blockSizeL :: Lens_' Block (Maybe [BlockSize])
blockSizeL f Block{..} = (\blockSize -> Block { blockSize, ..} ) <$> f blockSize
{-# INLINE blockSizeL #-}

-- | 'blockHashes' Lens
blockHashesL :: Lens_' Block (Maybe [BlockHash])
blockHashesL f Block{..} = (\blockHashes -> Block { blockHashes, ..} ) <$> f blockHashes
{-# INLINE blockHashesL #-}

-- | 'blockLinkedBlocks' Lens
blockLinkedBlocksL :: Lens_' Block (Maybe LinkedBlocks)
blockLinkedBlocksL f Block{..} = (\blockLinkedBlocks -> Block { blockLinkedBlocks, ..} ) <$> f blockLinkedBlocks
{-# INLINE blockLinkedBlocksL #-}

-- | 'blockNumberOfTransactions' Lens
blockNumberOfTransactionsL :: Lens_' Block (Maybe Int)
blockNumberOfTransactionsL f Block{..} = (\blockNumberOfTransactions -> Block { blockNumberOfTransactions, ..} ) <$> f blockNumberOfTransactions
{-# INLINE blockNumberOfTransactionsL #-}

-- | 'blockMessage' Lens
blockMessageL :: Lens_' Block (Maybe Text)
blockMessageL f Block{..} = (\blockMessage -> Block { blockMessage, ..} ) <$> f blockMessage
{-# INLINE blockMessageL #-}

-- | 'blockTimestamp' Lens
blockTimestampL :: Lens_' Block (Maybe Int)
blockTimestampL f Block{..} = (\blockTimestamp -> Block { blockTimestamp, ..} ) <$> f blockTimestamp
{-# INLINE blockTimestampL #-}

-- | 'blockNativeData' Lens
blockNativeDataL :: Lens_' Block (Maybe A.Value)
blockNativeDataL f Block{..} = (\blockNativeData -> Block { blockNativeData, ..} ) <$> f blockNativeData
{-# INLINE blockNativeDataL #-}



-- * BlockHash

-- | 'blockHashType' Lens
blockHashTypeL :: Lens_' BlockHash (Maybe Text)
blockHashTypeL f BlockHash{..} = (\blockHashType -> BlockHash { blockHashType, ..} ) <$> f blockHashType
{-# INLINE blockHashTypeL #-}

-- | 'blockHashValue' Lens
blockHashValueL :: Lens_' BlockHash (Maybe Text)
blockHashValueL f BlockHash{..} = (\blockHashValue -> BlockHash { blockHashValue, ..} ) <$> f blockHashValue
{-# INLINE blockHashValueL #-}



-- * BlockSize

-- | 'blockSizeType' Lens
blockSizeTypeL :: Lens_' BlockSize (Maybe Text)
blockSizeTypeL f BlockSize{..} = (\blockSizeType -> BlockSize { blockSizeType, ..} ) <$> f blockSizeType
{-# INLINE blockSizeTypeL #-}

-- | 'blockSizeValue' Lens
blockSizeValueL :: Lens_' BlockSize (Maybe Text)
blockSizeValueL f BlockSize{..} = (\blockSizeValue -> BlockSize { blockSizeValue, ..} ) <$> f blockSizeValue
{-# INLINE blockSizeValueL #-}

-- | 'blockSizeKey' Lens
blockSizeKeyL :: Lens_' BlockSize (Maybe Text)
blockSizeKeyL f BlockSize{..} = (\blockSizeKey -> BlockSize { blockSizeKey, ..} ) <$> f blockSizeKey
{-# INLINE blockSizeKeyL #-}



-- * CreateSmartContractMonitoringSchema

-- | 'createSmartContractMonitoringSchemaSubscriptionDetails' Lens
createSmartContractMonitoringSchemaSubscriptionDetailsL :: Lens_' CreateSmartContractMonitoringSchema (Maybe ResourceMonitoringSubscriptionDetails)
createSmartContractMonitoringSchemaSubscriptionDetailsL f CreateSmartContractMonitoringSchema{..} = (\createSmartContractMonitoringSchemaSubscriptionDetails -> CreateSmartContractMonitoringSchema { createSmartContractMonitoringSchemaSubscriptionDetails, ..} ) <$> f createSmartContractMonitoringSchemaSubscriptionDetails
{-# INLINE createSmartContractMonitoringSchemaSubscriptionDetailsL #-}

-- | 'createSmartContractMonitoringSchemaResourceMonitoring' Lens
createSmartContractMonitoringSchemaResourceMonitoringL :: Lens_' CreateSmartContractMonitoringSchema (Maybe ResourceMonitoringDetails)
createSmartContractMonitoringSchemaResourceMonitoringL f CreateSmartContractMonitoringSchema{..} = (\createSmartContractMonitoringSchemaResourceMonitoring -> CreateSmartContractMonitoringSchema { createSmartContractMonitoringSchemaResourceMonitoring, ..} ) <$> f createSmartContractMonitoringSchemaResourceMonitoring
{-# INLINE createSmartContractMonitoringSchemaResourceMonitoringL #-}

-- | 'createSmartContractMonitoringSchemaSubscription' Lens
createSmartContractMonitoringSchemaSubscriptionL :: Lens_' CreateSmartContractMonitoringSchema (Maybe ResourceMonitoringSubscription)
createSmartContractMonitoringSchemaSubscriptionL f CreateSmartContractMonitoringSchema{..} = (\createSmartContractMonitoringSchemaSubscription -> CreateSmartContractMonitoringSchema { createSmartContractMonitoringSchemaSubscription, ..} ) <$> f createSmartContractMonitoringSchemaSubscription
{-# INLINE createSmartContractMonitoringSchemaSubscriptionL #-}



-- * CreateSubscriptionRequestSchema

-- | 'createSubscriptionRequestSchemaIds' Lens
createSubscriptionRequestSchemaIdsL :: Lens_' CreateSubscriptionRequestSchema (Maybe [Text])
createSubscriptionRequestSchemaIdsL f CreateSubscriptionRequestSchema{..} = (\createSubscriptionRequestSchemaIds -> CreateSubscriptionRequestSchema { createSubscriptionRequestSchemaIds, ..} ) <$> f createSubscriptionRequestSchemaIds
{-# INLINE createSubscriptionRequestSchemaIdsL #-}

-- | 'createSubscriptionRequestSchemaCallbackUrl' Lens
createSubscriptionRequestSchemaCallbackUrlL :: Lens_' CreateSubscriptionRequestSchema (Maybe Text)
createSubscriptionRequestSchemaCallbackUrlL f CreateSubscriptionRequestSchema{..} = (\createSubscriptionRequestSchemaCallbackUrl -> CreateSubscriptionRequestSchema { createSubscriptionRequestSchemaCallbackUrl, ..} ) <$> f createSubscriptionRequestSchemaCallbackUrl
{-# INLINE createSubscriptionRequestSchemaCallbackUrlL #-}

-- | 'createSubscriptionRequestSchemaType' Lens
createSubscriptionRequestSchemaTypeL :: Lens_' CreateSubscriptionRequestSchema (Maybe Text)
createSubscriptionRequestSchemaTypeL f CreateSubscriptionRequestSchema{..} = (\createSubscriptionRequestSchemaType -> CreateSubscriptionRequestSchema { createSubscriptionRequestSchemaType, ..} ) <$> f createSubscriptionRequestSchemaType
{-# INLINE createSubscriptionRequestSchemaTypeL #-}



-- * CreateSubscriptionResponseSchema

-- | 'createSubscriptionResponseSchemaScubscriptionDetails' Lens
createSubscriptionResponseSchemaScubscriptionDetailsL :: Lens_' CreateSubscriptionResponseSchema (Maybe SubscriptionDetailsSchema)
createSubscriptionResponseSchemaScubscriptionDetailsL f CreateSubscriptionResponseSchema{..} = (\createSubscriptionResponseSchemaScubscriptionDetails -> CreateSubscriptionResponseSchema { createSubscriptionResponseSchemaScubscriptionDetails, ..} ) <$> f createSubscriptionResponseSchemaScubscriptionDetails
{-# INLINE createSubscriptionResponseSchemaScubscriptionDetailsL #-}

-- | 'createSubscriptionResponseSchemaSubscriptionId' Lens
createSubscriptionResponseSchemaSubscriptionIdL :: Lens_' CreateSubscriptionResponseSchema (Maybe Text)
createSubscriptionResponseSchemaSubscriptionIdL f CreateSubscriptionResponseSchema{..} = (\createSubscriptionResponseSchemaSubscriptionId -> CreateSubscriptionResponseSchema { createSubscriptionResponseSchemaSubscriptionId, ..} ) <$> f createSubscriptionResponseSchemaSubscriptionId
{-# INLINE createSubscriptionResponseSchemaSubscriptionIdL #-}



-- * DeleteResourceMonitoringAddressSchema

-- | 'deleteResourceMonitoringAddressSchemaAddressMonitoringDetails' Lens
deleteResourceMonitoringAddressSchemaAddressMonitoringDetailsL :: Lens_' DeleteResourceMonitoringAddressSchema (Maybe ResourceMonitoringAddressDetails)
deleteResourceMonitoringAddressSchemaAddressMonitoringDetailsL f DeleteResourceMonitoringAddressSchema{..} = (\deleteResourceMonitoringAddressSchemaAddressMonitoringDetails -> DeleteResourceMonitoringAddressSchema { deleteResourceMonitoringAddressSchemaAddressMonitoringDetails, ..} ) <$> f deleteResourceMonitoringAddressSchemaAddressMonitoringDetails
{-# INLINE deleteResourceMonitoringAddressSchemaAddressMonitoringDetailsL #-}

-- | 'deleteResourceMonitoringAddressSchemaResourceMonitoring' Lens
deleteResourceMonitoringAddressSchemaResourceMonitoringL :: Lens_' DeleteResourceMonitoringAddressSchema (Maybe ResourceMonitoringDetails)
deleteResourceMonitoringAddressSchemaResourceMonitoringL f DeleteResourceMonitoringAddressSchema{..} = (\deleteResourceMonitoringAddressSchemaResourceMonitoring -> DeleteResourceMonitoringAddressSchema { deleteResourceMonitoringAddressSchemaResourceMonitoring, ..} ) <$> f deleteResourceMonitoringAddressSchemaResourceMonitoring
{-# INLINE deleteResourceMonitoringAddressSchemaResourceMonitoringL #-}



-- * Destination

-- | 'destinationTransfer' Lens
destinationTransferL :: Lens_' Destination (Maybe Transfer)
destinationTransferL f Destination{..} = (\destinationTransfer -> Destination { destinationTransfer, ..} ) <$> f destinationTransfer
{-# INLINE destinationTransferL #-}

-- | 'destinationSmartContract' Lens
destinationSmartContractL :: Lens_' Destination (Maybe SmartContract)
destinationSmartContractL f Destination{..} = (\destinationSmartContract -> Destination { destinationSmartContract, ..} ) <$> f destinationSmartContract
{-# INLINE destinationSmartContractL #-}

-- | 'destinationPayment' Lens
destinationPaymentL :: Lens_' Destination (Maybe Payment)
destinationPaymentL f Destination{..} = (\destinationPayment -> Destination { destinationPayment, ..} ) <$> f destinationPayment
{-# INLINE destinationPaymentL #-}

-- | 'destinationDestinationId' Lens
destinationDestinationIdL :: Lens_' Destination (Maybe Text)
destinationDestinationIdL f Destination{..} = (\destinationDestinationId -> Destination { destinationDestinationId, ..} ) <$> f destinationDestinationId
{-# INLINE destinationDestinationIdL #-}



-- * DestinationPaymentSchema

-- | 'destinationPaymentSchemaPayment' Lens
destinationPaymentSchemaPaymentL :: Lens_' DestinationPaymentSchema (Maybe PaymentSchema)
destinationPaymentSchemaPaymentL f DestinationPaymentSchema{..} = (\destinationPaymentSchemaPayment -> DestinationPaymentSchema { destinationPaymentSchemaPayment, ..} ) <$> f destinationPaymentSchemaPayment
{-# INLINE destinationPaymentSchemaPaymentL #-}

-- | 'destinationPaymentSchemaDestinationId' Lens
destinationPaymentSchemaDestinationIdL :: Lens_' DestinationPaymentSchema (Maybe Text)
destinationPaymentSchemaDestinationIdL f DestinationPaymentSchema{..} = (\destinationPaymentSchemaDestinationId -> DestinationPaymentSchema { destinationPaymentSchemaDestinationId, ..} ) <$> f destinationPaymentSchemaDestinationId
{-# INLINE destinationPaymentSchemaDestinationIdL #-}



-- * DestinationTransferSchema

-- | 'destinationTransferSchemaTransfer' Lens
destinationTransferSchemaTransferL :: Lens_' DestinationTransferSchema (Maybe TransferSchema)
destinationTransferSchemaTransferL f DestinationTransferSchema{..} = (\destinationTransferSchemaTransfer -> DestinationTransferSchema { destinationTransferSchemaTransfer, ..} ) <$> f destinationTransferSchemaTransfer
{-# INLINE destinationTransferSchemaTransferL #-}

-- | 'destinationTransferSchemaDestinationId' Lens
destinationTransferSchemaDestinationIdL :: Lens_' DestinationTransferSchema (Maybe Text)
destinationTransferSchemaDestinationIdL f DestinationTransferSchema{..} = (\destinationTransferSchemaDestinationId -> DestinationTransferSchema { destinationTransferSchemaDestinationId, ..} ) <$> f destinationTransferSchemaDestinationId
{-# INLINE destinationTransferSchemaDestinationIdL #-}



-- * Error

-- | 'errorCode' Lens
errorCodeL :: Lens_' Error (Maybe Int)
errorCodeL f Error{..} = (\errorCode -> Error { errorCode, ..} ) <$> f errorCode
{-# INLINE errorCodeL #-}

-- | 'errorService' Lens
errorServiceL :: Lens_' Error (Maybe Text)
errorServiceL f Error{..} = (\errorService -> Error { errorService, ..} ) <$> f errorService
{-# INLINE errorServiceL #-}

-- | 'errorMessage' Lens
errorMessageL :: Lens_' Error (Maybe Text)
errorMessageL f Error{..} = (\errorMessage -> Error { errorMessage, ..} ) <$> f errorMessage
{-# INLINE errorMessageL #-}

-- | 'errorTimestamp' Lens
errorTimestampL :: Lens_' Error (Maybe Integer)
errorTimestampL f Error{..} = (\errorTimestamp -> Error { errorTimestamp, ..} ) <$> f errorTimestamp
{-# INLINE errorTimestampL #-}



-- * ErrorDetails

-- | 'errorDetailsCode' Lens
errorDetailsCodeL :: Lens_' ErrorDetails (Maybe Text)
errorDetailsCodeL f ErrorDetails{..} = (\errorDetailsCode -> ErrorDetails { errorDetailsCode, ..} ) <$> f errorDetailsCode
{-# INLINE errorDetailsCodeL #-}

-- | 'errorDetailsDescription' Lens
errorDetailsDescriptionL :: Lens_' ErrorDetails (Maybe Text)
errorDetailsDescriptionL f ErrorDetails{..} = (\errorDetailsDescription -> ErrorDetails { errorDetailsDescription, ..} ) <$> f errorDetailsDescription
{-# INLINE errorDetailsDescriptionL #-}

-- | 'errorDetailsCategory' Lens
errorDetailsCategoryL :: Lens_' ErrorDetails (Maybe Text)
errorDetailsCategoryL f ErrorDetails{..} = (\errorDetailsCategory -> ErrorDetails { errorDetailsCategory, ..} ) <$> f errorDetailsCategory
{-# INLINE errorDetailsCategoryL #-}



-- * ErrorList

-- | 'errorListErrors' Lens
errorListErrorsL :: Lens_' ErrorList (Maybe [Error])
errorListErrorsL f ErrorList{..} = (\errorListErrors -> ErrorList { errorListErrors, ..} ) <$> f errorListErrors
{-# INLINE errorListErrorsL #-}

-- | 'errorListErrorCount' Lens
errorListErrorCountL :: Lens_' ErrorList (Maybe Int)
errorListErrorCountL f ErrorList{..} = (\errorListErrorCount -> ErrorList { errorListErrorCount, ..} ) <$> f errorListErrorCount
{-# INLINE errorListErrorCountL #-}



-- * ExecuteSearchBalanceResponse

-- | 'executeSearchBalanceResponseBalances' Lens
executeSearchBalanceResponseBalancesL :: Lens_' ExecuteSearchBalanceResponse (Maybe [AddressBalanceResponse])
executeSearchBalanceResponseBalancesL f ExecuteSearchBalanceResponse{..} = (\executeSearchBalanceResponseBalances -> ExecuteSearchBalanceResponse { executeSearchBalanceResponseBalances, ..} ) <$> f executeSearchBalanceResponseBalances
{-# INLINE executeSearchBalanceResponseBalancesL #-}

-- | 'executeSearchBalanceResponseLocation' Lens
executeSearchBalanceResponseLocationL :: Lens_' ExecuteSearchBalanceResponse (Maybe Location)
executeSearchBalanceResponseLocationL f ExecuteSearchBalanceResponse{..} = (\executeSearchBalanceResponseLocation -> ExecuteSearchBalanceResponse { executeSearchBalanceResponseLocation, ..} ) <$> f executeSearchBalanceResponseLocation
{-# INLINE executeSearchBalanceResponseLocationL #-}



-- * ExecuteSearchBlockResponse

-- | 'executeSearchBlockResponseLocation' Lens
executeSearchBlockResponseLocationL :: Lens_' ExecuteSearchBlockResponse (Maybe Location)
executeSearchBlockResponseLocationL f ExecuteSearchBlockResponse{..} = (\executeSearchBlockResponseLocation -> ExecuteSearchBlockResponse { executeSearchBlockResponseLocation, ..} ) <$> f executeSearchBlockResponseLocation
{-# INLINE executeSearchBlockResponseLocationL #-}

-- | 'executeSearchBlockResponseBlock' Lens
executeSearchBlockResponseBlockL :: Lens_' ExecuteSearchBlockResponse (Maybe Block)
executeSearchBlockResponseBlockL f ExecuteSearchBlockResponse{..} = (\executeSearchBlockResponseBlock -> ExecuteSearchBlockResponse { executeSearchBlockResponseBlock, ..} ) <$> f executeSearchBlockResponseBlock
{-# INLINE executeSearchBlockResponseBlockL #-}

-- | 'executeSearchBlockResponseStatus' Lens
executeSearchBlockResponseStatusL :: Lens_' ExecuteSearchBlockResponse (Maybe Status)
executeSearchBlockResponseStatusL f ExecuteSearchBlockResponse{..} = (\executeSearchBlockResponseStatus -> ExecuteSearchBlockResponse { executeSearchBlockResponseStatus, ..} ) <$> f executeSearchBlockResponseStatus
{-# INLINE executeSearchBlockResponseStatusL #-}



-- * ExecuteSearchSequenceResponse

-- | 'executeSearchSequenceResponseSequence' Lens
executeSearchSequenceResponseSequenceL :: Lens_' ExecuteSearchSequenceResponse (Maybe Text)
executeSearchSequenceResponseSequenceL f ExecuteSearchSequenceResponse{..} = (\executeSearchSequenceResponseSequence -> ExecuteSearchSequenceResponse { executeSearchSequenceResponseSequence, ..} ) <$> f executeSearchSequenceResponseSequence
{-# INLINE executeSearchSequenceResponseSequenceL #-}

-- | 'executeSearchSequenceResponseLocation' Lens
executeSearchSequenceResponseLocationL :: Lens_' ExecuteSearchSequenceResponse (Maybe Location)
executeSearchSequenceResponseLocationL f ExecuteSearchSequenceResponse{..} = (\executeSearchSequenceResponseLocation -> ExecuteSearchSequenceResponse { executeSearchSequenceResponseLocation, ..} ) <$> f executeSearchSequenceResponseLocation
{-# INLINE executeSearchSequenceResponseLocationL #-}

-- | 'executeSearchSequenceResponseAddressId' Lens
executeSearchSequenceResponseAddressIdL :: Lens_' ExecuteSearchSequenceResponse (Maybe Text)
executeSearchSequenceResponseAddressIdL f ExecuteSearchSequenceResponse{..} = (\executeSearchSequenceResponseAddressId -> ExecuteSearchSequenceResponse { executeSearchSequenceResponseAddressId, ..} ) <$> f executeSearchSequenceResponseAddressId
{-# INLINE executeSearchSequenceResponseAddressIdL #-}



-- * ExecuteSearchTransactionResponse

-- | 'executeSearchTransactionResponseLocation' Lens
executeSearchTransactionResponseLocationL :: Lens_' ExecuteSearchTransactionResponse (Maybe Location)
executeSearchTransactionResponseLocationL f ExecuteSearchTransactionResponse{..} = (\executeSearchTransactionResponseLocation -> ExecuteSearchTransactionResponse { executeSearchTransactionResponseLocation, ..} ) <$> f executeSearchTransactionResponseLocation
{-# INLINE executeSearchTransactionResponseLocationL #-}

-- | 'executeSearchTransactionResponseType' Lens
executeSearchTransactionResponseTypeL :: Lens_' ExecuteSearchTransactionResponse (Maybe Text)
executeSearchTransactionResponseTypeL f ExecuteSearchTransactionResponse{..} = (\executeSearchTransactionResponseType -> ExecuteSearchTransactionResponse { executeSearchTransactionResponseType, ..} ) <$> f executeSearchTransactionResponseType
{-# INLINE executeSearchTransactionResponseTypeL #-}

-- | 'executeSearchTransactionResponseTransaction' Lens
executeSearchTransactionResponseTransactionL :: Lens_' ExecuteSearchTransactionResponse (Maybe Transaction)
executeSearchTransactionResponseTransactionL f ExecuteSearchTransactionResponse{..} = (\executeSearchTransactionResponseTransaction -> ExecuteSearchTransactionResponse { executeSearchTransactionResponseTransaction, ..} ) <$> f executeSearchTransactionResponseTransaction
{-# INLINE executeSearchTransactionResponseTransactionL #-}

-- | 'executeSearchTransactionResponseTimestamp' Lens
executeSearchTransactionResponseTimestampL :: Lens_' ExecuteSearchTransactionResponse (Maybe DateTime)
executeSearchTransactionResponseTimestampL f ExecuteSearchTransactionResponse{..} = (\executeSearchTransactionResponseTimestamp -> ExecuteSearchTransactionResponse { executeSearchTransactionResponseTimestamp, ..} ) <$> f executeSearchTransactionResponseTimestamp
{-# INLINE executeSearchTransactionResponseTimestampL #-}

-- | 'executeSearchTransactionResponseStatus' Lens
executeSearchTransactionResponseStatusL :: Lens_' ExecuteSearchTransactionResponse (Maybe Status)
executeSearchTransactionResponseStatusL f ExecuteSearchTransactionResponse{..} = (\executeSearchTransactionResponseStatus -> ExecuteSearchTransactionResponse { executeSearchTransactionResponseStatus, ..} ) <$> f executeSearchTransactionResponseStatus
{-# INLINE executeSearchTransactionResponseStatusL #-}

-- | 'executeSearchTransactionResponseExtraFields' Lens
executeSearchTransactionResponseExtraFieldsL :: Lens_' ExecuteSearchTransactionResponse (Maybe A.Value)
executeSearchTransactionResponseExtraFieldsL f ExecuteSearchTransactionResponse{..} = (\executeSearchTransactionResponseExtraFields -> ExecuteSearchTransactionResponse { executeSearchTransactionResponseExtraFields, ..} ) <$> f executeSearchTransactionResponseExtraFields
{-# INLINE executeSearchTransactionResponseExtraFieldsL #-}



-- * ExecuteSearchUTXOResponseSchema

-- | 'executeSearchUTXOResponseSchemaDestination' Lens
executeSearchUTXOResponseSchemaDestinationL :: Lens_' ExecuteSearchUTXOResponseSchema (Maybe [UTXODestination])
executeSearchUTXOResponseSchemaDestinationL f ExecuteSearchUTXOResponseSchema{..} = (\executeSearchUTXOResponseSchemaDestination -> ExecuteSearchUTXOResponseSchema { executeSearchUTXOResponseSchemaDestination, ..} ) <$> f executeSearchUTXOResponseSchemaDestination
{-# INLINE executeSearchUTXOResponseSchemaDestinationL #-}

-- | 'executeSearchUTXOResponseSchemaLocation' Lens
executeSearchUTXOResponseSchemaLocationL :: Lens_' ExecuteSearchUTXOResponseSchema (Maybe Location)
executeSearchUTXOResponseSchemaLocationL f ExecuteSearchUTXOResponseSchema{..} = (\executeSearchUTXOResponseSchemaLocation -> ExecuteSearchUTXOResponseSchema { executeSearchUTXOResponseSchemaLocation, ..} ) <$> f executeSearchUTXOResponseSchemaLocation
{-# INLINE executeSearchUTXOResponseSchemaLocationL #-}

-- | 'executeSearchUTXOResponseSchemaTimestamp' Lens
executeSearchUTXOResponseSchemaTimestampL :: Lens_' ExecuteSearchUTXOResponseSchema (Maybe UTXOTimestampSchema)
executeSearchUTXOResponseSchemaTimestampL f ExecuteSearchUTXOResponseSchema{..} = (\executeSearchUTXOResponseSchemaTimestamp -> ExecuteSearchUTXOResponseSchema { executeSearchUTXOResponseSchemaTimestamp, ..} ) <$> f executeSearchUTXOResponseSchemaTimestamp
{-# INLINE executeSearchUTXOResponseSchemaTimestampL #-}

-- | 'executeSearchUTXOResponseSchemaStatus' Lens
executeSearchUTXOResponseSchemaStatusL :: Lens_' ExecuteSearchUTXOResponseSchema (Maybe Status)
executeSearchUTXOResponseSchemaStatusL f ExecuteSearchUTXOResponseSchema{..} = (\executeSearchUTXOResponseSchemaStatus -> ExecuteSearchUTXOResponseSchema { executeSearchUTXOResponseSchemaStatus, ..} ) <$> f executeSearchUTXOResponseSchemaStatus
{-# INLINE executeSearchUTXOResponseSchemaStatusL #-}

-- | 'executeSearchUTXOResponseSchemaNativeData' Lens
executeSearchUTXOResponseSchemaNativeDataL :: Lens_' ExecuteSearchUTXOResponseSchema (Maybe UTXONativeData)
executeSearchUTXOResponseSchemaNativeDataL f ExecuteSearchUTXOResponseSchema{..} = (\executeSearchUTXOResponseSchemaNativeData -> ExecuteSearchUTXOResponseSchema { executeSearchUTXOResponseSchemaNativeData, ..} ) <$> f executeSearchUTXOResponseSchemaNativeData
{-# INLINE executeSearchUTXOResponseSchemaNativeDataL #-}



-- * ExecuteSmartContractReadResponseSchema

-- | 'executeSmartContractReadResponseSchemaSmartContract' Lens
executeSmartContractReadResponseSchemaSmartContractL :: Lens_' ExecuteSmartContractReadResponseSchema (Maybe SmartContractReadSchema)
executeSmartContractReadResponseSchemaSmartContractL f ExecuteSmartContractReadResponseSchema{..} = (\executeSmartContractReadResponseSchemaSmartContract -> ExecuteSmartContractReadResponseSchema { executeSmartContractReadResponseSchemaSmartContract, ..} ) <$> f executeSmartContractReadResponseSchemaSmartContract
{-# INLINE executeSmartContractReadResponseSchemaSmartContractL #-}

-- | 'executeSmartContractReadResponseSchemaLocation' Lens
executeSmartContractReadResponseSchemaLocationL :: Lens_' ExecuteSmartContractReadResponseSchema (Maybe Location)
executeSmartContractReadResponseSchemaLocationL f ExecuteSmartContractReadResponseSchema{..} = (\executeSmartContractReadResponseSchemaLocation -> ExecuteSmartContractReadResponseSchema { executeSmartContractReadResponseSchemaLocation, ..} ) <$> f executeSmartContractReadResponseSchemaLocation
{-# INLINE executeSmartContractReadResponseSchemaLocationL #-}



-- * ExecuteTransactionRequest

-- | 'executeTransactionRequestRequestId' Lens
executeTransactionRequestRequestIdL :: Lens_' ExecuteTransactionRequest (Text)
executeTransactionRequestRequestIdL f ExecuteTransactionRequest{..} = (\executeTransactionRequestRequestId -> ExecuteTransactionRequest { executeTransactionRequestRequestId, ..} ) <$> f executeTransactionRequestRequestId
{-# INLINE executeTransactionRequestRequestIdL #-}

-- | 'executeTransactionRequestSigned' Lens
executeTransactionRequestSignedL :: Lens_' ExecuteTransactionRequest (Text)
executeTransactionRequestSignedL f ExecuteTransactionRequest{..} = (\executeTransactionRequestSigned -> ExecuteTransactionRequest { executeTransactionRequestSigned, ..} ) <$> f executeTransactionRequestSigned
{-# INLINE executeTransactionRequestSignedL #-}



-- * ExecuteTransactionResponse

-- | 'executeTransactionResponseUrgency' Lens
executeTransactionResponseUrgencyL :: Lens_' ExecuteTransactionResponse (Maybe Text)
executeTransactionResponseUrgencyL f ExecuteTransactionResponse{..} = (\executeTransactionResponseUrgency -> ExecuteTransactionResponse { executeTransactionResponseUrgency, ..} ) <$> f executeTransactionResponseUrgency
{-# INLINE executeTransactionResponseUrgencyL #-}

-- | 'executeTransactionResponseRequestId' Lens
executeTransactionResponseRequestIdL :: Lens_' ExecuteTransactionResponse (Maybe Text)
executeTransactionResponseRequestIdL f ExecuteTransactionResponse{..} = (\executeTransactionResponseRequestId -> ExecuteTransactionResponse { executeTransactionResponseRequestId, ..} ) <$> f executeTransactionResponseRequestId
{-# INLINE executeTransactionResponseRequestIdL #-}

-- | 'executeTransactionResponseOverledgerTransactionId' Lens
executeTransactionResponseOverledgerTransactionIdL :: Lens_' ExecuteTransactionResponse (Maybe Text)
executeTransactionResponseOverledgerTransactionIdL f ExecuteTransactionResponse{..} = (\executeTransactionResponseOverledgerTransactionId -> ExecuteTransactionResponse { executeTransactionResponseOverledgerTransactionId, ..} ) <$> f executeTransactionResponseOverledgerTransactionId
{-# INLINE executeTransactionResponseOverledgerTransactionIdL #-}

-- | 'executeTransactionResponseLocation' Lens
executeTransactionResponseLocationL :: Lens_' ExecuteTransactionResponse (Maybe Location)
executeTransactionResponseLocationL f ExecuteTransactionResponse{..} = (\executeTransactionResponseLocation -> ExecuteTransactionResponse { executeTransactionResponseLocation, ..} ) <$> f executeTransactionResponseLocation
{-# INLINE executeTransactionResponseLocationL #-}

-- | 'executeTransactionResponseType' Lens
executeTransactionResponseTypeL :: Lens_' ExecuteTransactionResponse (Maybe Text)
executeTransactionResponseTypeL f ExecuteTransactionResponse{..} = (\executeTransactionResponseType -> ExecuteTransactionResponse { executeTransactionResponseType, ..} ) <$> f executeTransactionResponseType
{-# INLINE executeTransactionResponseTypeL #-}

-- | 'executeTransactionResponseTransactionId' Lens
executeTransactionResponseTransactionIdL :: Lens_' ExecuteTransactionResponse (Maybe Text)
executeTransactionResponseTransactionIdL f ExecuteTransactionResponse{..} = (\executeTransactionResponseTransactionId -> ExecuteTransactionResponse { executeTransactionResponseTransactionId, ..} ) <$> f executeTransactionResponseTransactionId
{-# INLINE executeTransactionResponseTransactionIdL #-}

-- | 'executeTransactionResponseStatus' Lens
executeTransactionResponseStatusL :: Lens_' ExecuteTransactionResponse (Maybe Status)
executeTransactionResponseStatusL f ExecuteTransactionResponse{..} = (\executeTransactionResponseStatus -> ExecuteTransactionResponse { executeTransactionResponseStatus, ..} ) <$> f executeTransactionResponseStatus
{-# INLINE executeTransactionResponseStatusL #-}



-- * ExtraFields

-- | 'extraFieldsRequiredSignatures' Lens
extraFieldsRequiredSignaturesL :: Lens_' ExtraFields (Maybe Double)
extraFieldsRequiredSignaturesL f ExtraFields{..} = (\extraFieldsRequiredSignatures -> ExtraFields { extraFieldsRequiredSignatures, ..} ) <$> f extraFieldsRequiredSignatures
{-# INLINE extraFieldsRequiredSignaturesL #-}



-- * Fee

-- | 'feeAmount' Lens
feeAmountL :: Lens_' Fee (Text)
feeAmountL f Fee{..} = (\feeAmount -> Fee { feeAmount, ..} ) <$> f feeAmount
{-# INLINE feeAmountL #-}

-- | 'feeUnit' Lens
feeUnitL :: Lens_' Fee (Maybe Text)
feeUnitL f Fee{..} = (\feeUnit -> Fee { feeUnit, ..} ) <$> f feeUnit
{-# INLINE feeUnitL #-}



-- * Function

-- | 'functionFunctionId' Lens
functionFunctionIdL :: Lens_' Function (Maybe Text)
functionFunctionIdL f Function{..} = (\functionFunctionId -> Function { functionFunctionId, ..} ) <$> f functionFunctionId
{-# INLINE functionFunctionIdL #-}

-- | 'functionCode' Lens
functionCodeL :: Lens_' Function (Maybe Text)
functionCodeL f Function{..} = (\functionCode -> Function { functionCode, ..} ) <$> f functionCode
{-# INLINE functionCodeL #-}

-- | 'functionName' Lens
functionNameL :: Lens_' Function (Maybe Text)
functionNameL f Function{..} = (\functionName -> Function { functionName, ..} ) <$> f functionName
{-# INLINE functionNameL #-}

-- | 'functionInputParameters' Lens
functionInputParametersL :: Lens_' Function (Maybe [Parameter])
functionInputParametersL f Function{..} = (\functionInputParameters -> Function { functionInputParameters, ..} ) <$> f functionInputParameters
{-# INLINE functionInputParametersL #-}

-- | 'functionOutputParameters' Lens
functionOutputParametersL :: Lens_' Function (Maybe [Parameter])
functionOutputParametersL f Function{..} = (\functionOutputParameters -> Function { functionOutputParameters, ..} ) <$> f functionOutputParameters
{-# INLINE functionOutputParametersL #-}



-- * InternalServerErrorSchema

-- | 'internalServerErrorSchemaPath' Lens
internalServerErrorSchemaPathL :: Lens_' InternalServerErrorSchema (Maybe Text)
internalServerErrorSchemaPathL f InternalServerErrorSchema{..} = (\internalServerErrorSchemaPath -> InternalServerErrorSchema { internalServerErrorSchemaPath, ..} ) <$> f internalServerErrorSchemaPath
{-# INLINE internalServerErrorSchemaPathL #-}

-- | 'internalServerErrorSchemaError' Lens
internalServerErrorSchemaErrorL :: Lens_' InternalServerErrorSchema (Maybe Text)
internalServerErrorSchemaErrorL f InternalServerErrorSchema{..} = (\internalServerErrorSchemaError -> InternalServerErrorSchema { internalServerErrorSchemaError, ..} ) <$> f internalServerErrorSchemaError
{-# INLINE internalServerErrorSchemaErrorL #-}

-- | 'internalServerErrorSchemaMessage' Lens
internalServerErrorSchemaMessageL :: Lens_' InternalServerErrorSchema (Maybe Text)
internalServerErrorSchemaMessageL f InternalServerErrorSchema{..} = (\internalServerErrorSchemaMessage -> InternalServerErrorSchema { internalServerErrorSchemaMessage, ..} ) <$> f internalServerErrorSchemaMessage
{-# INLINE internalServerErrorSchemaMessageL #-}

-- | 'internalServerErrorSchemaTimestamp' Lens
internalServerErrorSchemaTimestampL :: Lens_' InternalServerErrorSchema (Maybe DateTime)
internalServerErrorSchemaTimestampL f InternalServerErrorSchema{..} = (\internalServerErrorSchemaTimestamp -> InternalServerErrorSchema { internalServerErrorSchemaTimestamp, ..} ) <$> f internalServerErrorSchemaTimestamp
{-# INLINE internalServerErrorSchemaTimestampL #-}

-- | 'internalServerErrorSchemaStatus' Lens
internalServerErrorSchemaStatusL :: Lens_' InternalServerErrorSchema (Maybe Int)
internalServerErrorSchemaStatusL f InternalServerErrorSchema{..} = (\internalServerErrorSchemaStatus -> InternalServerErrorSchema { internalServerErrorSchemaStatus, ..} ) <$> f internalServerErrorSchemaStatus
{-# INLINE internalServerErrorSchemaStatusL #-}



-- * LinkedBlocks

-- | 'linkedBlocksParent' Lens
linkedBlocksParentL :: Lens_' LinkedBlocks (Maybe Text)
linkedBlocksParentL f LinkedBlocks{..} = (\linkedBlocksParent -> LinkedBlocks { linkedBlocksParent, ..} ) <$> f linkedBlocksParent
{-# INLINE linkedBlocksParentL #-}

-- | 'linkedBlocksChild' Lens
linkedBlocksChildL :: Lens_' LinkedBlocks (Maybe Text)
linkedBlocksChildL f LinkedBlocks{..} = (\linkedBlocksChild -> LinkedBlocks { linkedBlocksChild, ..} ) <$> f linkedBlocksChild
{-# INLINE linkedBlocksChildL #-}



-- * ListSubscriptionResponseSchema

-- | 'listSubscriptionResponseSchemaSubscriptionDetails' Lens
listSubscriptionResponseSchemaSubscriptionDetailsL :: Lens_' ListSubscriptionResponseSchema (Maybe SubscriptionDetailsSchema)
listSubscriptionResponseSchemaSubscriptionDetailsL f ListSubscriptionResponseSchema{..} = (\listSubscriptionResponseSchemaSubscriptionDetails -> ListSubscriptionResponseSchema { listSubscriptionResponseSchemaSubscriptionDetails, ..} ) <$> f listSubscriptionResponseSchemaSubscriptionDetails
{-# INLINE listSubscriptionResponseSchemaSubscriptionDetailsL #-}

-- | 'listSubscriptionResponseSchemaSubscribedTime' Lens
listSubscriptionResponseSchemaSubscribedTimeL :: Lens_' ListSubscriptionResponseSchema (Maybe DateTime)
listSubscriptionResponseSchemaSubscribedTimeL f ListSubscriptionResponseSchema{..} = (\listSubscriptionResponseSchemaSubscribedTime -> ListSubscriptionResponseSchema { listSubscriptionResponseSchemaSubscribedTime, ..} ) <$> f listSubscriptionResponseSchemaSubscribedTime
{-# INLINE listSubscriptionResponseSchemaSubscribedTimeL #-}

-- | 'listSubscriptionResponseSchemaLastUpdatedTime' Lens
listSubscriptionResponseSchemaLastUpdatedTimeL :: Lens_' ListSubscriptionResponseSchema (Maybe DateTime)
listSubscriptionResponseSchemaLastUpdatedTimeL f ListSubscriptionResponseSchema{..} = (\listSubscriptionResponseSchemaLastUpdatedTime -> ListSubscriptionResponseSchema { listSubscriptionResponseSchemaLastUpdatedTime, ..} ) <$> f listSubscriptionResponseSchemaLastUpdatedTime
{-# INLINE listSubscriptionResponseSchemaLastUpdatedTimeL #-}

-- | 'listSubscriptionResponseSchemaCallbackUrl' Lens
listSubscriptionResponseSchemaCallbackUrlL :: Lens_' ListSubscriptionResponseSchema (Maybe Text)
listSubscriptionResponseSchemaCallbackUrlL f ListSubscriptionResponseSchema{..} = (\listSubscriptionResponseSchemaCallbackUrl -> ListSubscriptionResponseSchema { listSubscriptionResponseSchemaCallbackUrl, ..} ) <$> f listSubscriptionResponseSchemaCallbackUrl
{-# INLINE listSubscriptionResponseSchemaCallbackUrlL #-}

-- | 'listSubscriptionResponseSchemaSubscriptionId' Lens
listSubscriptionResponseSchemaSubscriptionIdL :: Lens_' ListSubscriptionResponseSchema (Maybe Text)
listSubscriptionResponseSchemaSubscriptionIdL f ListSubscriptionResponseSchema{..} = (\listSubscriptionResponseSchemaSubscriptionId -> ListSubscriptionResponseSchema { listSubscriptionResponseSchemaSubscriptionId, ..} ) <$> f listSubscriptionResponseSchemaSubscriptionId
{-# INLINE listSubscriptionResponseSchemaSubscriptionIdL #-}

-- | 'listSubscriptionResponseSchemaType' Lens
listSubscriptionResponseSchemaTypeL :: Lens_' ListSubscriptionResponseSchema (Maybe Text)
listSubscriptionResponseSchemaTypeL f ListSubscriptionResponseSchema{..} = (\listSubscriptionResponseSchemaType -> ListSubscriptionResponseSchema { listSubscriptionResponseSchemaType, ..} ) <$> f listSubscriptionResponseSchemaType
{-# INLINE listSubscriptionResponseSchemaTypeL #-}



-- * Location

-- | 'locationTechnology' Lens
locationTechnologyL :: Lens_' Location (Text)
locationTechnologyL f Location{..} = (\locationTechnology -> Location { locationTechnology, ..} ) <$> f locationTechnology
{-# INLINE locationTechnologyL #-}

-- | 'locationNetwork' Lens
locationNetworkL :: Lens_' Location (Text)
locationNetworkL f Location{..} = (\locationNetwork -> Location { locationNetwork, ..} ) <$> f locationNetwork
{-# INLINE locationNetworkL #-}



-- * MonitorSmartContractEventParam

-- | 'monitorSmartContractEventParamSelectedIntegerLength' Lens
monitorSmartContractEventParamSelectedIntegerLengthL :: Lens_' MonitorSmartContractEventParam (Maybe Text)
monitorSmartContractEventParamSelectedIntegerLengthL f MonitorSmartContractEventParam{..} = (\monitorSmartContractEventParamSelectedIntegerLength -> MonitorSmartContractEventParam { monitorSmartContractEventParamSelectedIntegerLength, ..} ) <$> f monitorSmartContractEventParamSelectedIntegerLength
{-# INLINE monitorSmartContractEventParamSelectedIntegerLengthL #-}

-- | 'monitorSmartContractEventParamType' Lens
monitorSmartContractEventParamTypeL :: Lens_' MonitorSmartContractEventParam (Maybe Text)
monitorSmartContractEventParamTypeL f MonitorSmartContractEventParam{..} = (\monitorSmartContractEventParamType -> MonitorSmartContractEventParam { monitorSmartContractEventParamType, ..} ) <$> f monitorSmartContractEventParamType
{-# INLINE monitorSmartContractEventParamTypeL #-}

-- | 'monitorSmartContractEventParamValue' Lens
monitorSmartContractEventParamValueL :: Lens_' MonitorSmartContractEventParam (Maybe Text)
monitorSmartContractEventParamValueL f MonitorSmartContractEventParam{..} = (\monitorSmartContractEventParamValue -> MonitorSmartContractEventParam { monitorSmartContractEventParamValue, ..} ) <$> f monitorSmartContractEventParamValue
{-# INLINE monitorSmartContractEventParamValueL #-}



-- * MonitorSmartContractRequestSchema

-- | 'monitorSmartContractRequestSchemaCallBackUrl' Lens
monitorSmartContractRequestSchemaCallBackUrlL :: Lens_' MonitorSmartContractRequestSchema (Maybe Text)
monitorSmartContractRequestSchemaCallBackUrlL f MonitorSmartContractRequestSchema{..} = (\monitorSmartContractRequestSchemaCallBackUrl -> MonitorSmartContractRequestSchema { monitorSmartContractRequestSchemaCallBackUrl, ..} ) <$> f monitorSmartContractRequestSchemaCallBackUrl
{-# INLINE monitorSmartContractRequestSchemaCallBackUrlL #-}

-- | 'monitorSmartContractRequestSchemaEventParams' Lens
monitorSmartContractRequestSchemaEventParamsL :: Lens_' MonitorSmartContractRequestSchema (Maybe [MonitorSmartContractEventParam])
monitorSmartContractRequestSchemaEventParamsL f MonitorSmartContractRequestSchema{..} = (\monitorSmartContractRequestSchemaEventParams -> MonitorSmartContractRequestSchema { monitorSmartContractRequestSchemaEventParams, ..} ) <$> f monitorSmartContractRequestSchemaEventParams
{-# INLINE monitorSmartContractRequestSchemaEventParamsL #-}

-- | 'monitorSmartContractRequestSchemaEventName' Lens
monitorSmartContractRequestSchemaEventNameL :: Lens_' MonitorSmartContractRequestSchema (Maybe Text)
monitorSmartContractRequestSchemaEventNameL f MonitorSmartContractRequestSchema{..} = (\monitorSmartContractRequestSchemaEventName -> MonitorSmartContractRequestSchema { monitorSmartContractRequestSchemaEventName, ..} ) <$> f monitorSmartContractRequestSchemaEventName
{-# INLINE monitorSmartContractRequestSchemaEventNameL #-}

-- | 'monitorSmartContractRequestSchemaLocation' Lens
monitorSmartContractRequestSchemaLocationL :: Lens_' MonitorSmartContractRequestSchema (Maybe Location)
monitorSmartContractRequestSchemaLocationL f MonitorSmartContractRequestSchema{..} = (\monitorSmartContractRequestSchemaLocation -> MonitorSmartContractRequestSchema { monitorSmartContractRequestSchemaLocation, ..} ) <$> f monitorSmartContractRequestSchemaLocation
{-# INLINE monitorSmartContractRequestSchemaLocationL #-}

-- | 'monitorSmartContractRequestSchemaSmartContractId' Lens
monitorSmartContractRequestSchemaSmartContractIdL :: Lens_' MonitorSmartContractRequestSchema (Maybe Text)
monitorSmartContractRequestSchemaSmartContractIdL f MonitorSmartContractRequestSchema{..} = (\monitorSmartContractRequestSchemaSmartContractId -> MonitorSmartContractRequestSchema { monitorSmartContractRequestSchemaSmartContractId, ..} ) <$> f monitorSmartContractRequestSchemaSmartContractId
{-# INLINE monitorSmartContractRequestSchemaSmartContractIdL #-}



-- * Origin

-- | 'originSequence' Lens
originSequenceL :: Lens_' Origin (Maybe Text)
originSequenceL f Origin{..} = (\originSequence -> Origin { originSequence, ..} ) <$> f originSequence
{-# INLINE originSequenceL #-}

-- | 'originOriginId' Lens
originOriginIdL :: Lens_' Origin (Maybe Text)
originOriginIdL f Origin{..} = (\originOriginId -> Origin { originOriginId, ..} ) <$> f originOriginId
{-# INLINE originOriginIdL #-}

-- | 'originSmartContract' Lens
originSmartContractL :: Lens_' Origin (Maybe SmartContract)
originSmartContractL f Origin{..} = (\originSmartContract -> Origin { originSmartContract, ..} ) <$> f originSmartContract
{-# INLINE originSmartContractL #-}



-- * OriginPaymentSchema

-- | 'originPaymentSchemaOriginId' Lens
originPaymentSchemaOriginIdL :: Lens_' OriginPaymentSchema (Maybe Text)
originPaymentSchemaOriginIdL f OriginPaymentSchema{..} = (\originPaymentSchemaOriginId -> OriginPaymentSchema { originPaymentSchemaOriginId, ..} ) <$> f originPaymentSchemaOriginId
{-# INLINE originPaymentSchemaOriginIdL #-}



-- * OriginTransferSchema

-- | 'originTransferSchemaOriginId' Lens
originTransferSchemaOriginIdL :: Lens_' OriginTransferSchema (Maybe Text)
originTransferSchemaOriginIdL f OriginTransferSchema{..} = (\originTransferSchemaOriginId -> OriginTransferSchema { originTransferSchemaOriginId, ..} ) <$> f originTransferSchemaOriginId
{-# INLINE originTransferSchemaOriginIdL #-}



-- * OverledgerTransactionResponseSchema

-- | 'overledgerTransactionResponseSchemaClientId' Lens
overledgerTransactionResponseSchemaClientIdL :: Lens_' OverledgerTransactionResponseSchema (Maybe Text)
overledgerTransactionResponseSchemaClientIdL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaClientId -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaClientId, ..} ) <$> f overledgerTransactionResponseSchemaClientId
{-# INLINE overledgerTransactionResponseSchemaClientIdL #-}

-- | 'overledgerTransactionResponseSchemaRequestId' Lens
overledgerTransactionResponseSchemaRequestIdL :: Lens_' OverledgerTransactionResponseSchema (Maybe Text)
overledgerTransactionResponseSchemaRequestIdL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaRequestId -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaRequestId, ..} ) <$> f overledgerTransactionResponseSchemaRequestId
{-# INLINE overledgerTransactionResponseSchemaRequestIdL #-}

-- | 'overledgerTransactionResponseSchemaOverledgerTransactionId' Lens
overledgerTransactionResponseSchemaOverledgerTransactionIdL :: Lens_' OverledgerTransactionResponseSchema (Maybe Text)
overledgerTransactionResponseSchemaOverledgerTransactionIdL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaOverledgerTransactionId -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaOverledgerTransactionId, ..} ) <$> f overledgerTransactionResponseSchemaOverledgerTransactionId
{-# INLINE overledgerTransactionResponseSchemaOverledgerTransactionIdL #-}

-- | 'overledgerTransactionResponseSchemaLocation' Lens
overledgerTransactionResponseSchemaLocationL :: Lens_' OverledgerTransactionResponseSchema (Maybe Location)
overledgerTransactionResponseSchemaLocationL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaLocation -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaLocation, ..} ) <$> f overledgerTransactionResponseSchemaLocation
{-# INLINE overledgerTransactionResponseSchemaLocationL #-}

-- | 'overledgerTransactionResponseSchemaTransactionHistory' Lens
overledgerTransactionResponseSchemaTransactionHistoryL :: Lens_' OverledgerTransactionResponseSchema (Maybe [Status])
overledgerTransactionResponseSchemaTransactionHistoryL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaTransactionHistory -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaTransactionHistory, ..} ) <$> f overledgerTransactionResponseSchemaTransactionHistory
{-# INLINE overledgerTransactionResponseSchemaTransactionHistoryL #-}

-- | 'overledgerTransactionResponseSchemaType' Lens
overledgerTransactionResponseSchemaTypeL :: Lens_' OverledgerTransactionResponseSchema (Maybe Text)
overledgerTransactionResponseSchemaTypeL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaType -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaType, ..} ) <$> f overledgerTransactionResponseSchemaType
{-# INLINE overledgerTransactionResponseSchemaTypeL #-}

-- | 'overledgerTransactionResponseSchemaTransactionId' Lens
overledgerTransactionResponseSchemaTransactionIdL :: Lens_' OverledgerTransactionResponseSchema (Maybe Text)
overledgerTransactionResponseSchemaTransactionIdL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaTransactionId -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaTransactionId, ..} ) <$> f overledgerTransactionResponseSchemaTransactionId
{-# INLINE overledgerTransactionResponseSchemaTransactionIdL #-}

-- | 'overledgerTransactionResponseSchemaStatus' Lens
overledgerTransactionResponseSchemaStatusL :: Lens_' OverledgerTransactionResponseSchema (Maybe Status)
overledgerTransactionResponseSchemaStatusL f OverledgerTransactionResponseSchema{..} = (\overledgerTransactionResponseSchemaStatus -> OverledgerTransactionResponseSchema { overledgerTransactionResponseSchemaStatus, ..} ) <$> f overledgerTransactionResponseSchemaStatus
{-# INLINE overledgerTransactionResponseSchemaStatusL #-}



-- * Parameter

-- | 'parameterType' Lens
parameterTypeL :: Lens_' Parameter (Maybe Text)
parameterTypeL f Parameter{..} = (\parameterType -> Parameter { parameterType, ..} ) <$> f parameterType
{-# INLINE parameterTypeL #-}

-- | 'parameterValue' Lens
parameterValueL :: Lens_' Parameter (Maybe A.Value)
parameterValueL f Parameter{..} = (\parameterValue -> Parameter { parameterValue, ..} ) <$> f parameterValue
{-# INLINE parameterValueL #-}

-- | 'parameterKey' Lens
parameterKeyL :: Lens_' Parameter (Maybe Text)
parameterKeyL f Parameter{..} = (\parameterKey -> Parameter { parameterKey, ..} ) <$> f parameterKey
{-# INLINE parameterKeyL #-}



-- * Payment

-- | 'paymentAmount' Lens
paymentAmountL :: Lens_' Payment (Maybe Text)
paymentAmountL f Payment{..} = (\paymentAmount -> Payment { paymentAmount, ..} ) <$> f paymentAmount
{-# INLINE paymentAmountL #-}

-- | 'paymentUnit' Lens
paymentUnitL :: Lens_' Payment (Maybe Text)
paymentUnitL f Payment{..} = (\paymentUnit -> Payment { paymentUnit, ..} ) <$> f paymentUnit
{-# INLINE paymentUnitL #-}

-- | 'paymentIssuer' Lens
paymentIssuerL :: Lens_' Payment (Maybe Text)
paymentIssuerL f Payment{..} = (\paymentIssuer -> Payment { paymentIssuer, ..} ) <$> f paymentIssuer
{-# INLINE paymentIssuerL #-}



-- * PaymentRequestDetailsSchema

-- | 'paymentRequestDetailsSchemaOverledgerSigningType' Lens
paymentRequestDetailsSchemaOverledgerSigningTypeL :: Lens_' PaymentRequestDetailsSchema (Maybe Text)
paymentRequestDetailsSchemaOverledgerSigningTypeL f PaymentRequestDetailsSchema{..} = (\paymentRequestDetailsSchemaOverledgerSigningType -> PaymentRequestDetailsSchema { paymentRequestDetailsSchemaOverledgerSigningType, ..} ) <$> f paymentRequestDetailsSchemaOverledgerSigningType
{-# INLINE paymentRequestDetailsSchemaOverledgerSigningTypeL #-}

-- | 'paymentRequestDetailsSchemaOrigin' Lens
paymentRequestDetailsSchemaOriginL :: Lens_' PaymentRequestDetailsSchema (Maybe [OriginPaymentSchema])
paymentRequestDetailsSchemaOriginL f PaymentRequestDetailsSchema{..} = (\paymentRequestDetailsSchemaOrigin -> PaymentRequestDetailsSchema { paymentRequestDetailsSchemaOrigin, ..} ) <$> f paymentRequestDetailsSchemaOrigin
{-# INLINE paymentRequestDetailsSchemaOriginL #-}

-- | 'paymentRequestDetailsSchemaDestination' Lens
paymentRequestDetailsSchemaDestinationL :: Lens_' PaymentRequestDetailsSchema (Maybe [DestinationPaymentSchema])
paymentRequestDetailsSchemaDestinationL f PaymentRequestDetailsSchema{..} = (\paymentRequestDetailsSchemaDestination -> PaymentRequestDetailsSchema { paymentRequestDetailsSchemaDestination, ..} ) <$> f paymentRequestDetailsSchemaDestination
{-# INLINE paymentRequestDetailsSchemaDestinationL #-}

-- | 'paymentRequestDetailsSchemaMessage' Lens
paymentRequestDetailsSchemaMessageL :: Lens_' PaymentRequestDetailsSchema (Maybe Text)
paymentRequestDetailsSchemaMessageL f PaymentRequestDetailsSchema{..} = (\paymentRequestDetailsSchemaMessage -> PaymentRequestDetailsSchema { paymentRequestDetailsSchemaMessage, ..} ) <$> f paymentRequestDetailsSchemaMessage
{-# INLINE paymentRequestDetailsSchemaMessageL #-}



-- * PaymentSchema

-- | 'paymentSchemaAmount' Lens
paymentSchemaAmountL :: Lens_' PaymentSchema (Text)
paymentSchemaAmountL f PaymentSchema{..} = (\paymentSchemaAmount -> PaymentSchema { paymentSchemaAmount, ..} ) <$> f paymentSchemaAmount
{-# INLINE paymentSchemaAmountL #-}

-- | 'paymentSchemaUnit' Lens
paymentSchemaUnitL :: Lens_' PaymentSchema (Maybe Text)
paymentSchemaUnitL f PaymentSchema{..} = (\paymentSchemaUnit -> PaymentSchema { paymentSchemaUnit, ..} ) <$> f paymentSchemaUnit
{-# INLINE paymentSchemaUnitL #-}



-- * PrepareNativeTransactionRequestSchema

-- | 'prepareNativeTransactionRequestSchemaLocation' Lens
prepareNativeTransactionRequestSchemaLocationL :: Lens_' PrepareNativeTransactionRequestSchema (Maybe Location)
prepareNativeTransactionRequestSchemaLocationL f PrepareNativeTransactionRequestSchema{..} = (\prepareNativeTransactionRequestSchemaLocation -> PrepareNativeTransactionRequestSchema { prepareNativeTransactionRequestSchemaLocation, ..} ) <$> f prepareNativeTransactionRequestSchemaLocation
{-# INLINE prepareNativeTransactionRequestSchemaLocationL #-}

-- | 'prepareNativeTransactionRequestSchemaType' Lens
prepareNativeTransactionRequestSchemaTypeL :: Lens_' PrepareNativeTransactionRequestSchema (Maybe Text)
prepareNativeTransactionRequestSchemaTypeL f PrepareNativeTransactionRequestSchema{..} = (\prepareNativeTransactionRequestSchemaType -> PrepareNativeTransactionRequestSchema { prepareNativeTransactionRequestSchemaType, ..} ) <$> f prepareNativeTransactionRequestSchemaType
{-# INLINE prepareNativeTransactionRequestSchemaTypeL #-}



-- * PreparePaymentTransactionRequestSchema

-- | 'preparePaymentTransactionRequestSchemaUrgency' Lens
preparePaymentTransactionRequestSchemaUrgencyL :: Lens_' PreparePaymentTransactionRequestSchema (Maybe Text)
preparePaymentTransactionRequestSchemaUrgencyL f PreparePaymentTransactionRequestSchema{..} = (\preparePaymentTransactionRequestSchemaUrgency -> PreparePaymentTransactionRequestSchema { preparePaymentTransactionRequestSchemaUrgency, ..} ) <$> f preparePaymentTransactionRequestSchemaUrgency
{-# INLINE preparePaymentTransactionRequestSchemaUrgencyL #-}

-- | 'preparePaymentTransactionRequestSchemaRequestDetails' Lens
preparePaymentTransactionRequestSchemaRequestDetailsL :: Lens_' PreparePaymentTransactionRequestSchema (Maybe PaymentRequestDetailsSchema)
preparePaymentTransactionRequestSchemaRequestDetailsL f PreparePaymentTransactionRequestSchema{..} = (\preparePaymentTransactionRequestSchemaRequestDetails -> PreparePaymentTransactionRequestSchema { preparePaymentTransactionRequestSchemaRequestDetails, ..} ) <$> f preparePaymentTransactionRequestSchemaRequestDetails
{-# INLINE preparePaymentTransactionRequestSchemaRequestDetailsL #-}

-- | 'preparePaymentTransactionRequestSchemaLocation' Lens
preparePaymentTransactionRequestSchemaLocationL :: Lens_' PreparePaymentTransactionRequestSchema (Maybe Location)
preparePaymentTransactionRequestSchemaLocationL f PreparePaymentTransactionRequestSchema{..} = (\preparePaymentTransactionRequestSchemaLocation -> PreparePaymentTransactionRequestSchema { preparePaymentTransactionRequestSchemaLocation, ..} ) <$> f preparePaymentTransactionRequestSchemaLocation
{-# INLINE preparePaymentTransactionRequestSchemaLocationL #-}

-- | 'preparePaymentTransactionRequestSchemaType' Lens
preparePaymentTransactionRequestSchemaTypeL :: Lens_' PreparePaymentTransactionRequestSchema (Maybe Text)
preparePaymentTransactionRequestSchemaTypeL f PreparePaymentTransactionRequestSchema{..} = (\preparePaymentTransactionRequestSchemaType -> PreparePaymentTransactionRequestSchema { preparePaymentTransactionRequestSchemaType, ..} ) <$> f preparePaymentTransactionRequestSchemaType
{-# INLINE preparePaymentTransactionRequestSchemaTypeL #-}



-- * PrepareSearchResponseSchema

-- | 'prepareSearchResponseSchemaGatewayFee' Lens
prepareSearchResponseSchemaGatewayFeeL :: Lens_' PrepareSearchResponseSchema (Maybe Fee)
prepareSearchResponseSchemaGatewayFeeL f PrepareSearchResponseSchema{..} = (\prepareSearchResponseSchemaGatewayFee -> PrepareSearchResponseSchema { prepareSearchResponseSchemaGatewayFee, ..} ) <$> f prepareSearchResponseSchemaGatewayFee
{-# INLINE prepareSearchResponseSchemaGatewayFeeL #-}

-- | 'prepareSearchResponseSchemaRequestId' Lens
prepareSearchResponseSchemaRequestIdL :: Lens_' PrepareSearchResponseSchema (Maybe Text)
prepareSearchResponseSchemaRequestIdL f PrepareSearchResponseSchema{..} = (\prepareSearchResponseSchemaRequestId -> PrepareSearchResponseSchema { prepareSearchResponseSchemaRequestId, ..} ) <$> f prepareSearchResponseSchemaRequestId
{-# INLINE prepareSearchResponseSchemaRequestIdL #-}



-- * PrepareSearchSchema

-- | 'prepareSearchSchemaLocation' Lens
prepareSearchSchemaLocationL :: Lens_' PrepareSearchSchema (Maybe Location)
prepareSearchSchemaLocationL f PrepareSearchSchema{..} = (\prepareSearchSchemaLocation -> PrepareSearchSchema { prepareSearchSchemaLocation, ..} ) <$> f prepareSearchSchemaLocation
{-# INLINE prepareSearchSchemaLocationL #-}



-- * PrepareSearchSmartContractRequestSchema

-- | 'prepareSearchSmartContractRequestSchemaRequestDetails' Lens
prepareSearchSmartContractRequestSchemaRequestDetailsL :: Lens_' PrepareSearchSmartContractRequestSchema (Maybe SmartContractSearchRequestDetails)
prepareSearchSmartContractRequestSchemaRequestDetailsL f PrepareSearchSmartContractRequestSchema{..} = (\prepareSearchSmartContractRequestSchemaRequestDetails -> PrepareSearchSmartContractRequestSchema { prepareSearchSmartContractRequestSchemaRequestDetails, ..} ) <$> f prepareSearchSmartContractRequestSchemaRequestDetails
{-# INLINE prepareSearchSmartContractRequestSchemaRequestDetailsL #-}

-- | 'prepareSearchSmartContractRequestSchemaLocation' Lens
prepareSearchSmartContractRequestSchemaLocationL :: Lens_' PrepareSearchSmartContractRequestSchema (Maybe Location)
prepareSearchSmartContractRequestSchemaLocationL f PrepareSearchSmartContractRequestSchema{..} = (\prepareSearchSmartContractRequestSchemaLocation -> PrepareSearchSmartContractRequestSchema { prepareSearchSmartContractRequestSchemaLocation, ..} ) <$> f prepareSearchSmartContractRequestSchemaLocation
{-# INLINE prepareSearchSmartContractRequestSchemaLocationL #-}



-- * PrepareTransactionResponse

-- | 'prepareTransactionResponseGatewayFee' Lens
prepareTransactionResponseGatewayFeeL :: Lens_' PrepareTransactionResponse (Maybe Fee)
prepareTransactionResponseGatewayFeeL f PrepareTransactionResponse{..} = (\prepareTransactionResponseGatewayFee -> PrepareTransactionResponse { prepareTransactionResponseGatewayFee, ..} ) <$> f prepareTransactionResponseGatewayFee
{-# INLINE prepareTransactionResponseGatewayFeeL #-}

-- | 'prepareTransactionResponseRequestId' Lens
prepareTransactionResponseRequestIdL :: Lens_' PrepareTransactionResponse (Maybe Text)
prepareTransactionResponseRequestIdL f PrepareTransactionResponse{..} = (\prepareTransactionResponseRequestId -> PrepareTransactionResponse { prepareTransactionResponseRequestId, ..} ) <$> f prepareTransactionResponseRequestId
{-# INLINE prepareTransactionResponseRequestIdL #-}

-- | 'prepareTransactionResponseDltFee' Lens
prepareTransactionResponseDltFeeL :: Lens_' PrepareTransactionResponse (Maybe Fee)
prepareTransactionResponseDltFeeL f PrepareTransactionResponse{..} = (\prepareTransactionResponseDltFee -> PrepareTransactionResponse { prepareTransactionResponseDltFee, ..} ) <$> f prepareTransactionResponseDltFee
{-# INLINE prepareTransactionResponseDltFeeL #-}

-- | 'prepareTransactionResponseNativeData' Lens
prepareTransactionResponseNativeDataL :: Lens_' PrepareTransactionResponse (Maybe A.Value)
prepareTransactionResponseNativeDataL f PrepareTransactionResponse{..} = (\prepareTransactionResponseNativeData -> PrepareTransactionResponse { prepareTransactionResponseNativeData, ..} ) <$> f prepareTransactionResponseNativeData
{-# INLINE prepareTransactionResponseNativeDataL #-}



-- * PrepareTransactionSmartContractInvokeRequestSchema

-- | 'prepareTransactionSmartContractInvokeRequestSchemaUrgency' Lens
prepareTransactionSmartContractInvokeRequestSchemaUrgencyL :: Lens_' PrepareTransactionSmartContractInvokeRequestSchema (Maybe Text)
prepareTransactionSmartContractInvokeRequestSchemaUrgencyL f PrepareTransactionSmartContractInvokeRequestSchema{..} = (\prepareTransactionSmartContractInvokeRequestSchemaUrgency -> PrepareTransactionSmartContractInvokeRequestSchema { prepareTransactionSmartContractInvokeRequestSchemaUrgency, ..} ) <$> f prepareTransactionSmartContractInvokeRequestSchemaUrgency
{-# INLINE prepareTransactionSmartContractInvokeRequestSchemaUrgencyL #-}

-- | 'prepareTransactionSmartContractInvokeRequestSchemaRequestDetails' Lens
prepareTransactionSmartContractInvokeRequestSchemaRequestDetailsL :: Lens_' PrepareTransactionSmartContractInvokeRequestSchema (Maybe SmartContractInvokeRequestDetailsSchema)
prepareTransactionSmartContractInvokeRequestSchemaRequestDetailsL f PrepareTransactionSmartContractInvokeRequestSchema{..} = (\prepareTransactionSmartContractInvokeRequestSchemaRequestDetails -> PrepareTransactionSmartContractInvokeRequestSchema { prepareTransactionSmartContractInvokeRequestSchemaRequestDetails, ..} ) <$> f prepareTransactionSmartContractInvokeRequestSchemaRequestDetails
{-# INLINE prepareTransactionSmartContractInvokeRequestSchemaRequestDetailsL #-}

-- | 'prepareTransactionSmartContractInvokeRequestSchemaLocation' Lens
prepareTransactionSmartContractInvokeRequestSchemaLocationL :: Lens_' PrepareTransactionSmartContractInvokeRequestSchema (Maybe Location)
prepareTransactionSmartContractInvokeRequestSchemaLocationL f PrepareTransactionSmartContractInvokeRequestSchema{..} = (\prepareTransactionSmartContractInvokeRequestSchemaLocation -> PrepareTransactionSmartContractInvokeRequestSchema { prepareTransactionSmartContractInvokeRequestSchemaLocation, ..} ) <$> f prepareTransactionSmartContractInvokeRequestSchemaLocation
{-# INLINE prepareTransactionSmartContractInvokeRequestSchemaLocationL #-}

-- | 'prepareTransactionSmartContractInvokeRequestSchemaType' Lens
prepareTransactionSmartContractInvokeRequestSchemaTypeL :: Lens_' PrepareTransactionSmartContractInvokeRequestSchema (Maybe Text)
prepareTransactionSmartContractInvokeRequestSchemaTypeL f PrepareTransactionSmartContractInvokeRequestSchema{..} = (\prepareTransactionSmartContractInvokeRequestSchemaType -> PrepareTransactionSmartContractInvokeRequestSchema { prepareTransactionSmartContractInvokeRequestSchemaType, ..} ) <$> f prepareTransactionSmartContractInvokeRequestSchemaType
{-# INLINE prepareTransactionSmartContractInvokeRequestSchemaTypeL #-}



-- * PrepareTransferTransactionRequestSchema

-- | 'prepareTransferTransactionRequestSchemaUrgency' Lens
prepareTransferTransactionRequestSchemaUrgencyL :: Lens_' PrepareTransferTransactionRequestSchema (Maybe Text)
prepareTransferTransactionRequestSchemaUrgencyL f PrepareTransferTransactionRequestSchema{..} = (\prepareTransferTransactionRequestSchemaUrgency -> PrepareTransferTransactionRequestSchema { prepareTransferTransactionRequestSchemaUrgency, ..} ) <$> f prepareTransferTransactionRequestSchemaUrgency
{-# INLINE prepareTransferTransactionRequestSchemaUrgencyL #-}

-- | 'prepareTransferTransactionRequestSchemaRequestDetails' Lens
prepareTransferTransactionRequestSchemaRequestDetailsL :: Lens_' PrepareTransferTransactionRequestSchema (Maybe TransferRequestDetailsSchema)
prepareTransferTransactionRequestSchemaRequestDetailsL f PrepareTransferTransactionRequestSchema{..} = (\prepareTransferTransactionRequestSchemaRequestDetails -> PrepareTransferTransactionRequestSchema { prepareTransferTransactionRequestSchemaRequestDetails, ..} ) <$> f prepareTransferTransactionRequestSchemaRequestDetails
{-# INLINE prepareTransferTransactionRequestSchemaRequestDetailsL #-}

-- | 'prepareTransferTransactionRequestSchemaLocation' Lens
prepareTransferTransactionRequestSchemaLocationL :: Lens_' PrepareTransferTransactionRequestSchema (Maybe Location)
prepareTransferTransactionRequestSchemaLocationL f PrepareTransferTransactionRequestSchema{..} = (\prepareTransferTransactionRequestSchemaLocation -> PrepareTransferTransactionRequestSchema { prepareTransferTransactionRequestSchemaLocation, ..} ) <$> f prepareTransferTransactionRequestSchemaLocation
{-# INLINE prepareTransferTransactionRequestSchemaLocationL #-}

-- | 'prepareTransferTransactionRequestSchemaType' Lens
prepareTransferTransactionRequestSchemaTypeL :: Lens_' PrepareTransferTransactionRequestSchema (Maybe Text)
prepareTransferTransactionRequestSchemaTypeL f PrepareTransferTransactionRequestSchema{..} = (\prepareTransferTransactionRequestSchemaType -> PrepareTransferTransactionRequestSchema { prepareTransferTransactionRequestSchemaType, ..} ) <$> f prepareTransferTransactionRequestSchemaType
{-# INLINE prepareTransferTransactionRequestSchemaTypeL #-}



-- * ResourceMonitoredAddressDetails

-- | 'resourceMonitoredAddressDetailsAddressId' Lens
resourceMonitoredAddressDetailsAddressIdL :: Lens_' ResourceMonitoredAddressDetails (Maybe Text)
resourceMonitoredAddressDetailsAddressIdL f ResourceMonitoredAddressDetails{..} = (\resourceMonitoredAddressDetailsAddressId -> ResourceMonitoredAddressDetails { resourceMonitoredAddressDetailsAddressId, ..} ) <$> f resourceMonitoredAddressDetailsAddressId
{-# INLINE resourceMonitoredAddressDetailsAddressIdL #-}



-- * ResourceMonitoringAddressDetails

-- | 'resourceMonitoringAddressDetailsAddressId' Lens
resourceMonitoringAddressDetailsAddressIdL :: Lens_' ResourceMonitoringAddressDetails (Maybe Text)
resourceMonitoringAddressDetailsAddressIdL f ResourceMonitoringAddressDetails{..} = (\resourceMonitoringAddressDetailsAddressId -> ResourceMonitoringAddressDetails { resourceMonitoringAddressDetailsAddressId, ..} ) <$> f resourceMonitoringAddressDetailsAddressId
{-# INLINE resourceMonitoringAddressDetailsAddressIdL #-}



-- * ResourceMonitoringAddressSchema

-- | 'resourceMonitoringAddressSchemaAddressMonitoringDetails' Lens
resourceMonitoringAddressSchemaAddressMonitoringDetailsL :: Lens_' ResourceMonitoringAddressSchema (Maybe ResourceMonitoringAddressDetails)
resourceMonitoringAddressSchemaAddressMonitoringDetailsL f ResourceMonitoringAddressSchema{..} = (\resourceMonitoringAddressSchemaAddressMonitoringDetails -> ResourceMonitoringAddressSchema { resourceMonitoringAddressSchemaAddressMonitoringDetails, ..} ) <$> f resourceMonitoringAddressSchemaAddressMonitoringDetails
{-# INLINE resourceMonitoringAddressSchemaAddressMonitoringDetailsL #-}

-- | 'resourceMonitoringAddressSchemaResourceMonitoring' Lens
resourceMonitoringAddressSchemaResourceMonitoringL :: Lens_' ResourceMonitoringAddressSchema (Maybe ResourceMonitoringDetails)
resourceMonitoringAddressSchemaResourceMonitoringL f ResourceMonitoringAddressSchema{..} = (\resourceMonitoringAddressSchemaResourceMonitoring -> ResourceMonitoringAddressSchema { resourceMonitoringAddressSchemaResourceMonitoring, ..} ) <$> f resourceMonitoringAddressSchemaResourceMonitoring
{-# INLINE resourceMonitoringAddressSchemaResourceMonitoringL #-}



-- * ResourceMonitoringDetails

-- | 'resourceMonitoringDetailsResourceMonitoringId' Lens
resourceMonitoringDetailsResourceMonitoringIdL :: Lens_' ResourceMonitoringDetails (Maybe Text)
resourceMonitoringDetailsResourceMonitoringIdL f ResourceMonitoringDetails{..} = (\resourceMonitoringDetailsResourceMonitoringId -> ResourceMonitoringDetails { resourceMonitoringDetailsResourceMonitoringId, ..} ) <$> f resourceMonitoringDetailsResourceMonitoringId
{-# INLINE resourceMonitoringDetailsResourceMonitoringIdL #-}

-- | 'resourceMonitoringDetailsLocation' Lens
resourceMonitoringDetailsLocationL :: Lens_' ResourceMonitoringDetails (Maybe Location)
resourceMonitoringDetailsLocationL f ResourceMonitoringDetails{..} = (\resourceMonitoringDetailsLocation -> ResourceMonitoringDetails { resourceMonitoringDetailsLocation, ..} ) <$> f resourceMonitoringDetailsLocation
{-# INLINE resourceMonitoringDetailsLocationL #-}

-- | 'resourceMonitoringDetailsType' Lens
resourceMonitoringDetailsTypeL :: Lens_' ResourceMonitoringDetails (Maybe Text)
resourceMonitoringDetailsTypeL f ResourceMonitoringDetails{..} = (\resourceMonitoringDetailsType -> ResourceMonitoringDetails { resourceMonitoringDetailsType, ..} ) <$> f resourceMonitoringDetailsType
{-# INLINE resourceMonitoringDetailsTypeL #-}

-- | 'resourceMonitoringDetailsTimestamp' Lens
resourceMonitoringDetailsTimestampL :: Lens_' ResourceMonitoringDetails (Maybe DateTime)
resourceMonitoringDetailsTimestampL f ResourceMonitoringDetails{..} = (\resourceMonitoringDetailsTimestamp -> ResourceMonitoringDetails { resourceMonitoringDetailsTimestamp, ..} ) <$> f resourceMonitoringDetailsTimestamp
{-# INLINE resourceMonitoringDetailsTimestampL #-}

-- | 'resourceMonitoringDetailsStatus' Lens
resourceMonitoringDetailsStatusL :: Lens_' ResourceMonitoringDetails (Maybe Status)
resourceMonitoringDetailsStatusL f ResourceMonitoringDetails{..} = (\resourceMonitoringDetailsStatus -> ResourceMonitoringDetails { resourceMonitoringDetailsStatus, ..} ) <$> f resourceMonitoringDetailsStatus
{-# INLINE resourceMonitoringDetailsStatusL #-}



-- * ResourceMonitoringSmartContractEventDetails

-- | 'resourceMonitoringSmartContractEventDetailsEventName' Lens
resourceMonitoringSmartContractEventDetailsEventNameL :: Lens_' ResourceMonitoringSmartContractEventDetails (Maybe Text)
resourceMonitoringSmartContractEventDetailsEventNameL f ResourceMonitoringSmartContractEventDetails{..} = (\resourceMonitoringSmartContractEventDetailsEventName -> ResourceMonitoringSmartContractEventDetails { resourceMonitoringSmartContractEventDetailsEventName, ..} ) <$> f resourceMonitoringSmartContractEventDetailsEventName
{-# INLINE resourceMonitoringSmartContractEventDetailsEventNameL #-}

-- | 'resourceMonitoringSmartContractEventDetailsEventParameters' Lens
resourceMonitoringSmartContractEventDetailsEventParametersL :: Lens_' ResourceMonitoringSmartContractEventDetails (Maybe Text)
resourceMonitoringSmartContractEventDetailsEventParametersL f ResourceMonitoringSmartContractEventDetails{..} = (\resourceMonitoringSmartContractEventDetailsEventParameters -> ResourceMonitoringSmartContractEventDetails { resourceMonitoringSmartContractEventDetailsEventParameters, ..} ) <$> f resourceMonitoringSmartContractEventDetailsEventParameters
{-# INLINE resourceMonitoringSmartContractEventDetailsEventParametersL #-}

-- | 'resourceMonitoringSmartContractEventDetailsSmartContractId' Lens
resourceMonitoringSmartContractEventDetailsSmartContractIdL :: Lens_' ResourceMonitoringSmartContractEventDetails (Maybe Text)
resourceMonitoringSmartContractEventDetailsSmartContractIdL f ResourceMonitoringSmartContractEventDetails{..} = (\resourceMonitoringSmartContractEventDetailsSmartContractId -> ResourceMonitoringSmartContractEventDetails { resourceMonitoringSmartContractEventDetailsSmartContractId, ..} ) <$> f resourceMonitoringSmartContractEventDetailsSmartContractId
{-# INLINE resourceMonitoringSmartContractEventDetailsSmartContractIdL #-}



-- * ResourceMonitoringSubscription

-- | 'resourceMonitoringSubscriptionCallbackUrl' Lens
resourceMonitoringSubscriptionCallbackUrlL :: Lens_' ResourceMonitoringSubscription (Maybe Text)
resourceMonitoringSubscriptionCallbackUrlL f ResourceMonitoringSubscription{..} = (\resourceMonitoringSubscriptionCallbackUrl -> ResourceMonitoringSubscription { resourceMonitoringSubscriptionCallbackUrl, ..} ) <$> f resourceMonitoringSubscriptionCallbackUrl
{-# INLINE resourceMonitoringSubscriptionCallbackUrlL #-}

-- | 'resourceMonitoringSubscriptionSubscriptionId' Lens
resourceMonitoringSubscriptionSubscriptionIdL :: Lens_' ResourceMonitoringSubscription (Maybe Text)
resourceMonitoringSubscriptionSubscriptionIdL f ResourceMonitoringSubscription{..} = (\resourceMonitoringSubscriptionSubscriptionId -> ResourceMonitoringSubscription { resourceMonitoringSubscriptionSubscriptionId, ..} ) <$> f resourceMonitoringSubscriptionSubscriptionId
{-# INLINE resourceMonitoringSubscriptionSubscriptionIdL #-}

-- | 'resourceMonitoringSubscriptionType' Lens
resourceMonitoringSubscriptionTypeL :: Lens_' ResourceMonitoringSubscription (Maybe Text)
resourceMonitoringSubscriptionTypeL f ResourceMonitoringSubscription{..} = (\resourceMonitoringSubscriptionType -> ResourceMonitoringSubscription { resourceMonitoringSubscriptionType, ..} ) <$> f resourceMonitoringSubscriptionType
{-# INLINE resourceMonitoringSubscriptionTypeL #-}



-- * ResourceMonitoringSubscriptionDetails

-- | 'resourceMonitoringSubscriptionDetailsIds' Lens
resourceMonitoringSubscriptionDetailsIdsL :: Lens_' ResourceMonitoringSubscriptionDetails (Maybe [Text])
resourceMonitoringSubscriptionDetailsIdsL f ResourceMonitoringSubscriptionDetails{..} = (\resourceMonitoringSubscriptionDetailsIds -> ResourceMonitoringSubscriptionDetails { resourceMonitoringSubscriptionDetailsIds, ..} ) <$> f resourceMonitoringSubscriptionDetailsIds
{-# INLINE resourceMonitoringSubscriptionDetailsIdsL #-}

-- | 'resourceMonitoringSubscriptionDetailsStatus' Lens
resourceMonitoringSubscriptionDetailsStatusL :: Lens_' ResourceMonitoringSubscriptionDetails (Maybe Status)
resourceMonitoringSubscriptionDetailsStatusL f ResourceMonitoringSubscriptionDetails{..} = (\resourceMonitoringSubscriptionDetailsStatus -> ResourceMonitoringSubscriptionDetails { resourceMonitoringSubscriptionDetailsStatus, ..} ) <$> f resourceMonitoringSubscriptionDetailsStatus
{-# INLINE resourceMonitoringSubscriptionDetailsStatusL #-}



-- * ScriptPubKey

-- | 'scriptPubKeyAddresses' Lens
scriptPubKeyAddressesL :: Lens_' ScriptPubKey (Maybe [Text])
scriptPubKeyAddressesL f ScriptPubKey{..} = (\scriptPubKeyAddresses -> ScriptPubKey { scriptPubKeyAddresses, ..} ) <$> f scriptPubKeyAddresses
{-# INLINE scriptPubKeyAddressesL #-}

-- | 'scriptPubKeyAsm' Lens
scriptPubKeyAsmL :: Lens_' ScriptPubKey (Maybe Text)
scriptPubKeyAsmL f ScriptPubKey{..} = (\scriptPubKeyAsm -> ScriptPubKey { scriptPubKeyAsm, ..} ) <$> f scriptPubKeyAsm
{-# INLINE scriptPubKeyAsmL #-}

-- | 'scriptPubKeyHex' Lens
scriptPubKeyHexL :: Lens_' ScriptPubKey (Maybe Text)
scriptPubKeyHexL f ScriptPubKey{..} = (\scriptPubKeyHex -> ScriptPubKey { scriptPubKeyHex, ..} ) <$> f scriptPubKeyHex
{-# INLINE scriptPubKeyHexL #-}

-- | 'scriptPubKeyType' Lens
scriptPubKeyTypeL :: Lens_' ScriptPubKey (Maybe Text)
scriptPubKeyTypeL f ScriptPubKey{..} = (\scriptPubKeyType -> ScriptPubKey { scriptPubKeyType, ..} ) <$> f scriptPubKeyType
{-# INLINE scriptPubKeyTypeL #-}

-- | 'scriptPubKeyReqSigs' Lens
scriptPubKeyReqSigsL :: Lens_' ScriptPubKey (Maybe Text)
scriptPubKeyReqSigsL f ScriptPubKey{..} = (\scriptPubKeyReqSigs -> ScriptPubKey { scriptPubKeyReqSigs, ..} ) <$> f scriptPubKeyReqSigs
{-# INLINE scriptPubKeyReqSigsL #-}



-- * SmartContract

-- | 'smartContractFunction' Lens
smartContractFunctionL :: Lens_' SmartContract (Maybe Function)
smartContractFunctionL f SmartContract{..} = (\smartContractFunction -> SmartContract { smartContractFunction, ..} ) <$> f smartContractFunction
{-# INLINE smartContractFunctionL #-}

-- | 'smartContractDetail' Lens
smartContractDetailL :: Lens_' SmartContract (Maybe Text)
smartContractDetailL f SmartContract{..} = (\smartContractDetail -> SmartContract { smartContractDetail, ..} ) <$> f smartContractDetail
{-# INLINE smartContractDetailL #-}

-- | 'smartContractType' Lens
smartContractTypeL :: Lens_' SmartContract (Maybe Text)
smartContractTypeL f SmartContract{..} = (\smartContractType -> SmartContract { smartContractType, ..} ) <$> f smartContractType
{-# INLINE smartContractTypeL #-}

-- | 'smartContractSmartContractId' Lens
smartContractSmartContractIdL :: Lens_' SmartContract (Maybe Text)
smartContractSmartContractIdL f SmartContract{..} = (\smartContractSmartContractId -> SmartContract { smartContractSmartContractId, ..} ) <$> f smartContractSmartContractId
{-# INLINE smartContractSmartContractIdL #-}

-- | 'smartContractExtraFields' Lens
smartContractExtraFieldsL :: Lens_' SmartContract (Maybe A.Value)
smartContractExtraFieldsL f SmartContract{..} = (\smartContractExtraFields -> SmartContract { smartContractExtraFields, ..} ) <$> f smartContractExtraFields
{-# INLINE smartContractExtraFieldsL #-}



-- * SmartContractDestinationSchema

-- | 'smartContractDestinationSchemaSmartContract' Lens
smartContractDestinationSchemaSmartContractL :: Lens_' SmartContractDestinationSchema (Maybe SmartContractSchema)
smartContractDestinationSchemaSmartContractL f SmartContractDestinationSchema{..} = (\smartContractDestinationSchemaSmartContract -> SmartContractDestinationSchema { smartContractDestinationSchemaSmartContract, ..} ) <$> f smartContractDestinationSchemaSmartContract
{-# INLINE smartContractDestinationSchemaSmartContractL #-}

-- | 'smartContractDestinationSchemaPayment' Lens
smartContractDestinationSchemaPaymentL :: Lens_' SmartContractDestinationSchema (Maybe SmartContractPaymentSchema)
smartContractDestinationSchemaPaymentL f SmartContractDestinationSchema{..} = (\smartContractDestinationSchemaPayment -> SmartContractDestinationSchema { smartContractDestinationSchemaPayment, ..} ) <$> f smartContractDestinationSchemaPayment
{-# INLINE smartContractDestinationSchemaPaymentL #-}

-- | 'smartContractDestinationSchemaDestinationId' Lens
smartContractDestinationSchemaDestinationIdL :: Lens_' SmartContractDestinationSchema (Maybe Text)
smartContractDestinationSchemaDestinationIdL f SmartContractDestinationSchema{..} = (\smartContractDestinationSchemaDestinationId -> SmartContractDestinationSchema { smartContractDestinationSchemaDestinationId, ..} ) <$> f smartContractDestinationSchemaDestinationId
{-# INLINE smartContractDestinationSchemaDestinationIdL #-}



-- * SmartContractEventHistory

-- | 'smartContractEventHistoryEventId' Lens
smartContractEventHistoryEventIdL :: Lens_' SmartContractEventHistory (Maybe Text)
smartContractEventHistoryEventIdL f SmartContractEventHistory{..} = (\smartContractEventHistoryEventId -> SmartContractEventHistory { smartContractEventHistoryEventId, ..} ) <$> f smartContractEventHistoryEventId
{-# INLINE smartContractEventHistoryEventIdL #-}

-- | 'smartContractEventHistoryEventName' Lens
smartContractEventHistoryEventNameL :: Lens_' SmartContractEventHistory (Maybe Text)
smartContractEventHistoryEventNameL f SmartContractEventHistory{..} = (\smartContractEventHistoryEventName -> SmartContractEventHistory { smartContractEventHistoryEventName, ..} ) <$> f smartContractEventHistoryEventName
{-# INLINE smartContractEventHistoryEventNameL #-}

-- | 'smartContractEventHistoryEventParameters' Lens
smartContractEventHistoryEventParametersL :: Lens_' SmartContractEventHistory (Maybe Text)
smartContractEventHistoryEventParametersL f SmartContractEventHistory{..} = (\smartContractEventHistoryEventParameters -> SmartContractEventHistory { smartContractEventHistoryEventParameters, ..} ) <$> f smartContractEventHistoryEventParameters
{-# INLINE smartContractEventHistoryEventParametersL #-}

-- | 'smartContractEventHistoryTransactionId' Lens
smartContractEventHistoryTransactionIdL :: Lens_' SmartContractEventHistory (Maybe Text)
smartContractEventHistoryTransactionIdL f SmartContractEventHistory{..} = (\smartContractEventHistoryTransactionId -> SmartContractEventHistory { smartContractEventHistoryTransactionId, ..} ) <$> f smartContractEventHistoryTransactionId
{-# INLINE smartContractEventHistoryTransactionIdL #-}

-- | 'smartContractEventHistoryTimestamp' Lens
smartContractEventHistoryTimestampL :: Lens_' SmartContractEventHistory (Maybe DateTime)
smartContractEventHistoryTimestampL f SmartContractEventHistory{..} = (\smartContractEventHistoryTimestamp -> SmartContractEventHistory { smartContractEventHistoryTimestamp, ..} ) <$> f smartContractEventHistoryTimestamp
{-# INLINE smartContractEventHistoryTimestampL #-}



-- * SmartContractFunctionSchema

-- | 'smartContractFunctionSchemaName' Lens
smartContractFunctionSchemaNameL :: Lens_' SmartContractFunctionSchema (Maybe Text)
smartContractFunctionSchemaNameL f SmartContractFunctionSchema{..} = (\smartContractFunctionSchemaName -> SmartContractFunctionSchema { smartContractFunctionSchemaName, ..} ) <$> f smartContractFunctionSchemaName
{-# INLINE smartContractFunctionSchemaNameL #-}

-- | 'smartContractFunctionSchemaInputParameters' Lens
smartContractFunctionSchemaInputParametersL :: Lens_' SmartContractFunctionSchema (Maybe [SmartContractInputParameterSchema])
smartContractFunctionSchemaInputParametersL f SmartContractFunctionSchema{..} = (\smartContractFunctionSchemaInputParameters -> SmartContractFunctionSchema { smartContractFunctionSchemaInputParameters, ..} ) <$> f smartContractFunctionSchemaInputParameters
{-# INLINE smartContractFunctionSchemaInputParametersL #-}



-- * SmartContractInputParameterSchema

-- | 'smartContractInputParameterSchemaType' Lens
smartContractInputParameterSchemaTypeL :: Lens_' SmartContractInputParameterSchema (Maybe Text)
smartContractInputParameterSchemaTypeL f SmartContractInputParameterSchema{..} = (\smartContractInputParameterSchemaType -> SmartContractInputParameterSchema { smartContractInputParameterSchemaType, ..} ) <$> f smartContractInputParameterSchemaType
{-# INLINE smartContractInputParameterSchemaTypeL #-}

-- | 'smartContractInputParameterSchemaValue' Lens
smartContractInputParameterSchemaValueL :: Lens_' SmartContractInputParameterSchema (Maybe Text)
smartContractInputParameterSchemaValueL f SmartContractInputParameterSchema{..} = (\smartContractInputParameterSchemaValue -> SmartContractInputParameterSchema { smartContractInputParameterSchemaValue, ..} ) <$> f smartContractInputParameterSchemaValue
{-# INLINE smartContractInputParameterSchemaValueL #-}



-- * SmartContractInvokeRequestDetailsSchema

-- | 'smartContractInvokeRequestDetailsSchemaOrigin' Lens
smartContractInvokeRequestDetailsSchemaOriginL :: Lens_' SmartContractInvokeRequestDetailsSchema (Maybe [SmartContractRequestDetailsOrigin])
smartContractInvokeRequestDetailsSchemaOriginL f SmartContractInvokeRequestDetailsSchema{..} = (\smartContractInvokeRequestDetailsSchemaOrigin -> SmartContractInvokeRequestDetailsSchema { smartContractInvokeRequestDetailsSchemaOrigin, ..} ) <$> f smartContractInvokeRequestDetailsSchemaOrigin
{-# INLINE smartContractInvokeRequestDetailsSchemaOriginL #-}

-- | 'smartContractInvokeRequestDetailsSchemaDestination' Lens
smartContractInvokeRequestDetailsSchemaDestinationL :: Lens_' SmartContractInvokeRequestDetailsSchema (Maybe [SmartContractDestinationSchema])
smartContractInvokeRequestDetailsSchemaDestinationL f SmartContractInvokeRequestDetailsSchema{..} = (\smartContractInvokeRequestDetailsSchemaDestination -> SmartContractInvokeRequestDetailsSchema { smartContractInvokeRequestDetailsSchemaDestination, ..} ) <$> f smartContractInvokeRequestDetailsSchemaDestination
{-# INLINE smartContractInvokeRequestDetailsSchemaDestinationL #-}



-- * SmartContractMonitoringDetailsSchema

-- | 'smartContractMonitoringDetailsSchemaSmartContractEventHistory' Lens
smartContractMonitoringDetailsSchemaSmartContractEventHistoryL :: Lens_' SmartContractMonitoringDetailsSchema (Maybe [SmartContractEventHistory])
smartContractMonitoringDetailsSchemaSmartContractEventHistoryL f SmartContractMonitoringDetailsSchema{..} = (\smartContractMonitoringDetailsSchemaSmartContractEventHistory -> SmartContractMonitoringDetailsSchema { smartContractMonitoringDetailsSchemaSmartContractEventHistory, ..} ) <$> f smartContractMonitoringDetailsSchemaSmartContractEventHistory
{-# INLINE smartContractMonitoringDetailsSchemaSmartContractEventHistoryL #-}

-- | 'smartContractMonitoringDetailsSchemaSmartContractEventDetails' Lens
smartContractMonitoringDetailsSchemaSmartContractEventDetailsL :: Lens_' SmartContractMonitoringDetailsSchema (Maybe ResourceMonitoringSmartContractEventDetails)
smartContractMonitoringDetailsSchemaSmartContractEventDetailsL f SmartContractMonitoringDetailsSchema{..} = (\smartContractMonitoringDetailsSchemaSmartContractEventDetails -> SmartContractMonitoringDetailsSchema { smartContractMonitoringDetailsSchemaSmartContractEventDetails, ..} ) <$> f smartContractMonitoringDetailsSchemaSmartContractEventDetails
{-# INLINE smartContractMonitoringDetailsSchemaSmartContractEventDetailsL #-}

-- | 'smartContractMonitoringDetailsSchemaLocation' Lens
smartContractMonitoringDetailsSchemaLocationL :: Lens_' SmartContractMonitoringDetailsSchema (Maybe Location)
smartContractMonitoringDetailsSchemaLocationL f SmartContractMonitoringDetailsSchema{..} = (\smartContractMonitoringDetailsSchemaLocation -> SmartContractMonitoringDetailsSchema { smartContractMonitoringDetailsSchemaLocation, ..} ) <$> f smartContractMonitoringDetailsSchemaLocation
{-# INLINE smartContractMonitoringDetailsSchemaLocationL #-}

-- | 'smartContractMonitoringDetailsSchemaType' Lens
smartContractMonitoringDetailsSchemaTypeL :: Lens_' SmartContractMonitoringDetailsSchema (Maybe Text)
smartContractMonitoringDetailsSchemaTypeL f SmartContractMonitoringDetailsSchema{..} = (\smartContractMonitoringDetailsSchemaType -> SmartContractMonitoringDetailsSchema { smartContractMonitoringDetailsSchemaType, ..} ) <$> f smartContractMonitoringDetailsSchemaType
{-# INLINE smartContractMonitoringDetailsSchemaTypeL #-}

-- | 'smartContractMonitoringDetailsSchemaStatus' Lens
smartContractMonitoringDetailsSchemaStatusL :: Lens_' SmartContractMonitoringDetailsSchema (Maybe Status)
smartContractMonitoringDetailsSchemaStatusL f SmartContractMonitoringDetailsSchema{..} = (\smartContractMonitoringDetailsSchemaStatus -> SmartContractMonitoringDetailsSchema { smartContractMonitoringDetailsSchemaStatus, ..} ) <$> f smartContractMonitoringDetailsSchemaStatus
{-# INLINE smartContractMonitoringDetailsSchemaStatusL #-}

-- | 'smartContractMonitoringDetailsSchemaTimestamp' Lens
smartContractMonitoringDetailsSchemaTimestampL :: Lens_' SmartContractMonitoringDetailsSchema (Maybe DateTime)
smartContractMonitoringDetailsSchemaTimestampL f SmartContractMonitoringDetailsSchema{..} = (\smartContractMonitoringDetailsSchemaTimestamp -> SmartContractMonitoringDetailsSchema { smartContractMonitoringDetailsSchemaTimestamp, ..} ) <$> f smartContractMonitoringDetailsSchemaTimestamp
{-# INLINE smartContractMonitoringDetailsSchemaTimestampL #-}



-- * SmartContractMonitoringSchema

-- | 'smartContractMonitoringSchemaSmartContractEventMonitoringDetails' Lens
smartContractMonitoringSchemaSmartContractEventMonitoringDetailsL :: Lens_' SmartContractMonitoringSchema (Maybe ResourceMonitoringSmartContractEventDetails)
smartContractMonitoringSchemaSmartContractEventMonitoringDetailsL f SmartContractMonitoringSchema{..} = (\smartContractMonitoringSchemaSmartContractEventMonitoringDetails -> SmartContractMonitoringSchema { smartContractMonitoringSchemaSmartContractEventMonitoringDetails, ..} ) <$> f smartContractMonitoringSchemaSmartContractEventMonitoringDetails
{-# INLINE smartContractMonitoringSchemaSmartContractEventMonitoringDetailsL #-}

-- | 'smartContractMonitoringSchemaResourceMonitoring' Lens
smartContractMonitoringSchemaResourceMonitoringL :: Lens_' SmartContractMonitoringSchema (Maybe ResourceMonitoringDetails)
smartContractMonitoringSchemaResourceMonitoringL f SmartContractMonitoringSchema{..} = (\smartContractMonitoringSchemaResourceMonitoring -> SmartContractMonitoringSchema { smartContractMonitoringSchemaResourceMonitoring, ..} ) <$> f smartContractMonitoringSchemaResourceMonitoring
{-# INLINE smartContractMonitoringSchemaResourceMonitoringL #-}



-- * SmartContractOutputParameterSchema

-- | 'smartContractOutputParameterSchemaType' Lens
smartContractOutputParameterSchemaTypeL :: Lens_' SmartContractOutputParameterSchema (Maybe Text)
smartContractOutputParameterSchemaTypeL f SmartContractOutputParameterSchema{..} = (\smartContractOutputParameterSchemaType -> SmartContractOutputParameterSchema { smartContractOutputParameterSchemaType, ..} ) <$> f smartContractOutputParameterSchemaType
{-# INLINE smartContractOutputParameterSchemaTypeL #-}



-- * SmartContractPaymentSchema

-- | 'smartContractPaymentSchemaAmount' Lens
smartContractPaymentSchemaAmountL :: Lens_' SmartContractPaymentSchema (Maybe Text)
smartContractPaymentSchemaAmountL f SmartContractPaymentSchema{..} = (\smartContractPaymentSchemaAmount -> SmartContractPaymentSchema { smartContractPaymentSchemaAmount, ..} ) <$> f smartContractPaymentSchemaAmount
{-# INLINE smartContractPaymentSchemaAmountL #-}

-- | 'smartContractPaymentSchemaUnit' Lens
smartContractPaymentSchemaUnitL :: Lens_' SmartContractPaymentSchema (Maybe Text)
smartContractPaymentSchemaUnitL f SmartContractPaymentSchema{..} = (\smartContractPaymentSchemaUnit -> SmartContractPaymentSchema { smartContractPaymentSchemaUnit, ..} ) <$> f smartContractPaymentSchemaUnit
{-# INLINE smartContractPaymentSchemaUnitL #-}



-- * SmartContractReadFunctionSchema

-- | 'smartContractReadFunctionSchemaFunctionId' Lens
smartContractReadFunctionSchemaFunctionIdL :: Lens_' SmartContractReadFunctionSchema (Maybe Text)
smartContractReadFunctionSchemaFunctionIdL f SmartContractReadFunctionSchema{..} = (\smartContractReadFunctionSchemaFunctionId -> SmartContractReadFunctionSchema { smartContractReadFunctionSchemaFunctionId, ..} ) <$> f smartContractReadFunctionSchemaFunctionId
{-# INLINE smartContractReadFunctionSchemaFunctionIdL #-}

-- | 'smartContractReadFunctionSchemaName' Lens
smartContractReadFunctionSchemaNameL :: Lens_' SmartContractReadFunctionSchema (Maybe Text)
smartContractReadFunctionSchemaNameL f SmartContractReadFunctionSchema{..} = (\smartContractReadFunctionSchemaName -> SmartContractReadFunctionSchema { smartContractReadFunctionSchemaName, ..} ) <$> f smartContractReadFunctionSchemaName
{-# INLINE smartContractReadFunctionSchemaNameL #-}

-- | 'smartContractReadFunctionSchemaInputParameters' Lens
smartContractReadFunctionSchemaInputParametersL :: Lens_' SmartContractReadFunctionSchema (Maybe [SmartContractInputParameterSchema])
smartContractReadFunctionSchemaInputParametersL f SmartContractReadFunctionSchema{..} = (\smartContractReadFunctionSchemaInputParameters -> SmartContractReadFunctionSchema { smartContractReadFunctionSchemaInputParameters, ..} ) <$> f smartContractReadFunctionSchemaInputParameters
{-# INLINE smartContractReadFunctionSchemaInputParametersL #-}

-- | 'smartContractReadFunctionSchemaOutputParameters' Lens
smartContractReadFunctionSchemaOutputParametersL :: Lens_' SmartContractReadFunctionSchema (Maybe [SmartContractInputParameterSchema])
smartContractReadFunctionSchemaOutputParametersL f SmartContractReadFunctionSchema{..} = (\smartContractReadFunctionSchemaOutputParameters -> SmartContractReadFunctionSchema { smartContractReadFunctionSchemaOutputParameters, ..} ) <$> f smartContractReadFunctionSchemaOutputParameters
{-# INLINE smartContractReadFunctionSchemaOutputParametersL #-}



-- * SmartContractReadSchema

-- | 'smartContractReadSchemaFunction' Lens
smartContractReadSchemaFunctionL :: Lens_' SmartContractReadSchema (Maybe SmartContractReadFunctionSchema)
smartContractReadSchemaFunctionL f SmartContractReadSchema{..} = (\smartContractReadSchemaFunction -> SmartContractReadSchema { smartContractReadSchemaFunction, ..} ) <$> f smartContractReadSchemaFunction
{-# INLINE smartContractReadSchemaFunctionL #-}

-- | 'smartContractReadSchemaSmartContractId' Lens
smartContractReadSchemaSmartContractIdL :: Lens_' SmartContractReadSchema (Maybe Text)
smartContractReadSchemaSmartContractIdL f SmartContractReadSchema{..} = (\smartContractReadSchemaSmartContractId -> SmartContractReadSchema { smartContractReadSchemaSmartContractId, ..} ) <$> f smartContractReadSchemaSmartContractId
{-# INLINE smartContractReadSchemaSmartContractIdL #-}



-- * SmartContractRequestDetailsOrigin

-- | 'smartContractRequestDetailsOriginOriginId' Lens
smartContractRequestDetailsOriginOriginIdL :: Lens_' SmartContractRequestDetailsOrigin (Maybe Text)
smartContractRequestDetailsOriginOriginIdL f SmartContractRequestDetailsOrigin{..} = (\smartContractRequestDetailsOriginOriginId -> SmartContractRequestDetailsOrigin { smartContractRequestDetailsOriginOriginId, ..} ) <$> f smartContractRequestDetailsOriginOriginId
{-# INLINE smartContractRequestDetailsOriginOriginIdL #-}



-- * SmartContractSchema

-- | 'smartContractSchemaFunction' Lens
smartContractSchemaFunctionL :: Lens_' SmartContractSchema (Maybe SmartContractFunctionSchema)
smartContractSchemaFunctionL f SmartContractSchema{..} = (\smartContractSchemaFunction -> SmartContractSchema { smartContractSchemaFunction, ..} ) <$> f smartContractSchemaFunction
{-# INLINE smartContractSchemaFunctionL #-}



-- * SmartContractSearchDestinationSchema

-- | 'smartContractSearchDestinationSchemaSmartContract' Lens
smartContractSearchDestinationSchemaSmartContractL :: Lens_' SmartContractSearchDestinationSchema (Maybe SmartContractSearchSchema)
smartContractSearchDestinationSchemaSmartContractL f SmartContractSearchDestinationSchema{..} = (\smartContractSearchDestinationSchemaSmartContract -> SmartContractSearchDestinationSchema { smartContractSearchDestinationSchemaSmartContract, ..} ) <$> f smartContractSearchDestinationSchemaSmartContract
{-# INLINE smartContractSearchDestinationSchemaSmartContractL #-}



-- * SmartContractSearchFunctionSchema

-- | 'smartContractSearchFunctionSchemaName' Lens
smartContractSearchFunctionSchemaNameL :: Lens_' SmartContractSearchFunctionSchema (Maybe Text)
smartContractSearchFunctionSchemaNameL f SmartContractSearchFunctionSchema{..} = (\smartContractSearchFunctionSchemaName -> SmartContractSearchFunctionSchema { smartContractSearchFunctionSchemaName, ..} ) <$> f smartContractSearchFunctionSchemaName
{-# INLINE smartContractSearchFunctionSchemaNameL #-}

-- | 'smartContractSearchFunctionSchemaInputParameters' Lens
smartContractSearchFunctionSchemaInputParametersL :: Lens_' SmartContractSearchFunctionSchema (Maybe [SmartContractInputParameterSchema])
smartContractSearchFunctionSchemaInputParametersL f SmartContractSearchFunctionSchema{..} = (\smartContractSearchFunctionSchemaInputParameters -> SmartContractSearchFunctionSchema { smartContractSearchFunctionSchemaInputParameters, ..} ) <$> f smartContractSearchFunctionSchemaInputParameters
{-# INLINE smartContractSearchFunctionSchemaInputParametersL #-}

-- | 'smartContractSearchFunctionSchemaOutputParameters' Lens
smartContractSearchFunctionSchemaOutputParametersL :: Lens_' SmartContractSearchFunctionSchema (Maybe [SmartContractOutputParameterSchema])
smartContractSearchFunctionSchemaOutputParametersL f SmartContractSearchFunctionSchema{..} = (\smartContractSearchFunctionSchemaOutputParameters -> SmartContractSearchFunctionSchema { smartContractSearchFunctionSchemaOutputParameters, ..} ) <$> f smartContractSearchFunctionSchemaOutputParameters
{-# INLINE smartContractSearchFunctionSchemaOutputParametersL #-}



-- * SmartContractSearchRequestDetails

-- | 'smartContractSearchRequestDetailsDestination' Lens
smartContractSearchRequestDetailsDestinationL :: Lens_' SmartContractSearchRequestDetails (Maybe [SmartContractSearchDestinationSchema])
smartContractSearchRequestDetailsDestinationL f SmartContractSearchRequestDetails{..} = (\smartContractSearchRequestDetailsDestination -> SmartContractSearchRequestDetails { smartContractSearchRequestDetailsDestination, ..} ) <$> f smartContractSearchRequestDetailsDestination
{-# INLINE smartContractSearchRequestDetailsDestinationL #-}



-- * SmartContractSearchSchema

-- | 'smartContractSearchSchemaFunction' Lens
smartContractSearchSchemaFunctionL :: Lens_' SmartContractSearchSchema (Maybe SmartContractSearchFunctionSchema)
smartContractSearchSchemaFunctionL f SmartContractSearchSchema{..} = (\smartContractSearchSchemaFunction -> SmartContractSearchSchema { smartContractSearchSchemaFunction, ..} ) <$> f smartContractSearchSchemaFunction
{-# INLINE smartContractSearchSchemaFunctionL #-}

-- | 'smartContractSearchSchemaSmartContractId' Lens
smartContractSearchSchemaSmartContractIdL :: Lens_' SmartContractSearchSchema (Maybe Text)
smartContractSearchSchemaSmartContractIdL f SmartContractSearchSchema{..} = (\smartContractSearchSchemaSmartContractId -> SmartContractSearchSchema { smartContractSearchSchemaSmartContractId, ..} ) <$> f smartContractSearchSchemaSmartContractId
{-# INLINE smartContractSearchSchemaSmartContractIdL #-}



-- * Status

-- | 'statusCode' Lens
statusCodeL :: Lens_' Status (Maybe Text)
statusCodeL f Status{..} = (\statusCode -> Status { statusCode, ..} ) <$> f statusCode
{-# INLINE statusCodeL #-}

-- | 'statusDescription' Lens
statusDescriptionL :: Lens_' Status (Maybe Text)
statusDescriptionL f Status{..} = (\statusDescription -> Status { statusDescription, ..} ) <$> f statusDescription
{-# INLINE statusDescriptionL #-}

-- | 'statusMessage' Lens
statusMessageL :: Lens_' Status (Maybe Text)
statusMessageL f Status{..} = (\statusMessage -> Status { statusMessage, ..} ) <$> f statusMessage
{-# INLINE statusMessageL #-}

-- | 'statusValue' Lens
statusValueL :: Lens_' Status (Maybe Text)
statusValueL f Status{..} = (\statusValue -> Status { statusValue, ..} ) <$> f statusValue
{-# INLINE statusValueL #-}

-- | 'statusTimestamp' Lens
statusTimestampL :: Lens_' Status (Maybe Text)
statusTimestampL f Status{..} = (\statusTimestamp -> Status { statusTimestamp, ..} ) <$> f statusTimestamp
{-# INLINE statusTimestampL #-}



-- * StatusUpdateMonitoringRequestSchema

-- | 'statusUpdateMonitoringRequestSchemaStatusUpdate' Lens
statusUpdateMonitoringRequestSchemaStatusUpdateL :: Lens_' StatusUpdateMonitoringRequestSchema (Maybe StatusUpdateSchema)
statusUpdateMonitoringRequestSchemaStatusUpdateL f StatusUpdateMonitoringRequestSchema{..} = (\statusUpdateMonitoringRequestSchemaStatusUpdate -> StatusUpdateMonitoringRequestSchema { statusUpdateMonitoringRequestSchemaStatusUpdate, ..} ) <$> f statusUpdateMonitoringRequestSchemaStatusUpdate
{-# INLINE statusUpdateMonitoringRequestSchemaStatusUpdateL #-}



-- * StatusUpdateSchema

-- | 'statusUpdateSchemaValue' Lens
statusUpdateSchemaValueL :: Lens_' StatusUpdateSchema (Maybe Text)
statusUpdateSchemaValueL f StatusUpdateSchema{..} = (\statusUpdateSchemaValue -> StatusUpdateSchema { statusUpdateSchemaValue, ..} ) <$> f statusUpdateSchemaValue
{-# INLINE statusUpdateSchemaValueL #-}



-- * SubscriptionDeletionResponse

-- | 'subscriptionDeletionResponseSubscriptionDetails' Lens
subscriptionDeletionResponseSubscriptionDetailsL :: Lens_' SubscriptionDeletionResponse (Maybe SubscriptionDetails)
subscriptionDeletionResponseSubscriptionDetailsL f SubscriptionDeletionResponse{..} = (\subscriptionDeletionResponseSubscriptionDetails -> SubscriptionDeletionResponse { subscriptionDeletionResponseSubscriptionDetails, ..} ) <$> f subscriptionDeletionResponseSubscriptionDetails
{-# INLINE subscriptionDeletionResponseSubscriptionDetailsL #-}

-- | 'subscriptionDeletionResponseCallbackUrl' Lens
subscriptionDeletionResponseCallbackUrlL :: Lens_' SubscriptionDeletionResponse (Maybe Text)
subscriptionDeletionResponseCallbackUrlL f SubscriptionDeletionResponse{..} = (\subscriptionDeletionResponseCallbackUrl -> SubscriptionDeletionResponse { subscriptionDeletionResponseCallbackUrl, ..} ) <$> f subscriptionDeletionResponseCallbackUrl
{-# INLINE subscriptionDeletionResponseCallbackUrlL #-}

-- | 'subscriptionDeletionResponseSubscriptionId' Lens
subscriptionDeletionResponseSubscriptionIdL :: Lens_' SubscriptionDeletionResponse (Maybe Text)
subscriptionDeletionResponseSubscriptionIdL f SubscriptionDeletionResponse{..} = (\subscriptionDeletionResponseSubscriptionId -> SubscriptionDeletionResponse { subscriptionDeletionResponseSubscriptionId, ..} ) <$> f subscriptionDeletionResponseSubscriptionId
{-# INLINE subscriptionDeletionResponseSubscriptionIdL #-}

-- | 'subscriptionDeletionResponseType' Lens
subscriptionDeletionResponseTypeL :: Lens_' SubscriptionDeletionResponse (Maybe Text)
subscriptionDeletionResponseTypeL f SubscriptionDeletionResponse{..} = (\subscriptionDeletionResponseType -> SubscriptionDeletionResponse { subscriptionDeletionResponseType, ..} ) <$> f subscriptionDeletionResponseType
{-# INLINE subscriptionDeletionResponseTypeL #-}



-- * SubscriptionDetails

-- | 'subscriptionDetailsIds' Lens
subscriptionDetailsIdsL :: Lens_' SubscriptionDetails (Maybe [Text])
subscriptionDetailsIdsL f SubscriptionDetails{..} = (\subscriptionDetailsIds -> SubscriptionDetails { subscriptionDetailsIds, ..} ) <$> f subscriptionDetailsIds
{-# INLINE subscriptionDetailsIdsL #-}

-- | 'subscriptionDetailsStatus' Lens
subscriptionDetailsStatusL :: Lens_' SubscriptionDetails (Maybe Status)
subscriptionDetailsStatusL f SubscriptionDetails{..} = (\subscriptionDetailsStatus -> SubscriptionDetails { subscriptionDetailsStatus, ..} ) <$> f subscriptionDetailsStatus
{-# INLINE subscriptionDetailsStatusL #-}



-- * SubscriptionDetailsSchema

-- | 'subscriptionDetailsSchemaIds' Lens
subscriptionDetailsSchemaIdsL :: Lens_' SubscriptionDetailsSchema (Maybe [Text])
subscriptionDetailsSchemaIdsL f SubscriptionDetailsSchema{..} = (\subscriptionDetailsSchemaIds -> SubscriptionDetailsSchema { subscriptionDetailsSchemaIds, ..} ) <$> f subscriptionDetailsSchemaIds
{-# INLINE subscriptionDetailsSchemaIdsL #-}

-- | 'subscriptionDetailsSchemaStatus' Lens
subscriptionDetailsSchemaStatusL :: Lens_' SubscriptionDetailsSchema (Maybe Status)
subscriptionDetailsSchemaStatusL f SubscriptionDetailsSchema{..} = (\subscriptionDetailsSchemaStatus -> SubscriptionDetailsSchema { subscriptionDetailsSchemaStatus, ..} ) <$> f subscriptionDetailsSchemaStatus
{-# INLINE subscriptionDetailsSchemaStatusL #-}



-- * SubscriptionUpdateResponse

-- | 'subscriptionUpdateResponseSubscriptionDetails' Lens
subscriptionUpdateResponseSubscriptionDetailsL :: Lens_' SubscriptionUpdateResponse (Maybe SubscriptionDetails)
subscriptionUpdateResponseSubscriptionDetailsL f SubscriptionUpdateResponse{..} = (\subscriptionUpdateResponseSubscriptionDetails -> SubscriptionUpdateResponse { subscriptionUpdateResponseSubscriptionDetails, ..} ) <$> f subscriptionUpdateResponseSubscriptionDetails
{-# INLINE subscriptionUpdateResponseSubscriptionDetailsL #-}

-- | 'subscriptionUpdateResponseCallbackUrl' Lens
subscriptionUpdateResponseCallbackUrlL :: Lens_' SubscriptionUpdateResponse (Maybe Text)
subscriptionUpdateResponseCallbackUrlL f SubscriptionUpdateResponse{..} = (\subscriptionUpdateResponseCallbackUrl -> SubscriptionUpdateResponse { subscriptionUpdateResponseCallbackUrl, ..} ) <$> f subscriptionUpdateResponseCallbackUrl
{-# INLINE subscriptionUpdateResponseCallbackUrlL #-}

-- | 'subscriptionUpdateResponseSubscriptionId' Lens
subscriptionUpdateResponseSubscriptionIdL :: Lens_' SubscriptionUpdateResponse (Maybe Text)
subscriptionUpdateResponseSubscriptionIdL f SubscriptionUpdateResponse{..} = (\subscriptionUpdateResponseSubscriptionId -> SubscriptionUpdateResponse { subscriptionUpdateResponseSubscriptionId, ..} ) <$> f subscriptionUpdateResponseSubscriptionId
{-# INLINE subscriptionUpdateResponseSubscriptionIdL #-}

-- | 'subscriptionUpdateResponseType' Lens
subscriptionUpdateResponseTypeL :: Lens_' SubscriptionUpdateResponse (Maybe Text)
subscriptionUpdateResponseTypeL f SubscriptionUpdateResponse{..} = (\subscriptionUpdateResponseType -> SubscriptionUpdateResponse { subscriptionUpdateResponseType, ..} ) <$> f subscriptionUpdateResponseType
{-# INLINE subscriptionUpdateResponseTypeL #-}



-- * Transaction

-- | 'transactionSignature' Lens
transactionSignatureL :: Lens_' Transaction (Maybe [Text])
transactionSignatureL f Transaction{..} = (\transactionSignature -> Transaction { transactionSignature, ..} ) <$> f transactionSignature
{-# INLINE transactionSignatureL #-}

-- | 'transactionOrigin' Lens
transactionOriginL :: Lens_' Transaction (Maybe [Origin])
transactionOriginL f Transaction{..} = (\transactionOrigin -> Transaction { transactionOrigin, ..} ) <$> f transactionOrigin
{-# INLINE transactionOriginL #-}

-- | 'transactionFee' Lens
transactionFeeL :: Lens_' Transaction (Maybe Fee)
transactionFeeL f Transaction{..} = (\transactionFee -> Transaction { transactionFee, ..} ) <$> f transactionFee
{-# INLINE transactionFeeL #-}

-- | 'transactionDestination' Lens
transactionDestinationL :: Lens_' Transaction (Maybe [Destination])
transactionDestinationL f Transaction{..} = (\transactionDestination -> Transaction { transactionDestination, ..} ) <$> f transactionDestination
{-# INLINE transactionDestinationL #-}

-- | 'transactionSigned' Lens
transactionSignedL :: Lens_' Transaction (Maybe Text)
transactionSignedL f Transaction{..} = (\transactionSigned -> Transaction { transactionSigned, ..} ) <$> f transactionSigned
{-# INLINE transactionSignedL #-}

-- | 'transactionTotalPaymentAmount' Lens
transactionTotalPaymentAmountL :: Lens_' Transaction (Maybe [Payment])
transactionTotalPaymentAmountL f Transaction{..} = (\transactionTotalPaymentAmount -> Transaction { transactionTotalPaymentAmount, ..} ) <$> f transactionTotalPaymentAmount
{-# INLINE transactionTotalPaymentAmountL #-}

-- | 'transactionMessage' Lens
transactionMessageL :: Lens_' Transaction (Maybe Text)
transactionMessageL f Transaction{..} = (\transactionMessage -> Transaction { transactionMessage, ..} ) <$> f transactionMessage
{-# INLINE transactionMessageL #-}

-- | 'transactionTransactionId' Lens
transactionTransactionIdL :: Lens_' Transaction (Maybe Text)
transactionTransactionIdL f Transaction{..} = (\transactionTransactionId -> Transaction { transactionTransactionId, ..} ) <$> f transactionTransactionId
{-# INLINE transactionTransactionIdL #-}

-- | 'transactionEncoded' Lens
transactionEncodedL :: Lens_' Transaction (Maybe [Text])
transactionEncodedL f Transaction{..} = (\transactionEncoded -> Transaction { transactionEncoded, ..} ) <$> f transactionEncoded
{-# INLINE transactionEncodedL #-}

-- | 'transactionNativeData' Lens
transactionNativeDataL :: Lens_' Transaction (Maybe A.Value)
transactionNativeDataL f Transaction{..} = (\transactionNativeData -> Transaction { transactionNativeData, ..} ) <$> f transactionNativeData
{-# INLINE transactionNativeDataL #-}

-- | 'transactionExtraFields' Lens
transactionExtraFieldsL :: Lens_' Transaction (Maybe A.Value)
transactionExtraFieldsL f Transaction{..} = (\transactionExtraFields -> Transaction { transactionExtraFields, ..} ) <$> f transactionExtraFields
{-# INLINE transactionExtraFieldsL #-}



-- * Transfer

-- | 'transferTokenId' Lens
transferTokenIdL :: Lens_' Transfer (Maybe Text)
transferTokenIdL f Transfer{..} = (\transferTokenId -> Transfer { transferTokenId, ..} ) <$> f transferTokenId
{-# INLINE transferTokenIdL #-}

-- | 'transferTokenName' Lens
transferTokenNameL :: Lens_' Transfer (Maybe Text)
transferTokenNameL f Transfer{..} = (\transferTokenName -> Transfer { transferTokenName, ..} ) <$> f transferTokenName
{-# INLINE transferTokenNameL #-}



-- * TransferRequestDetailsSchema

-- | 'transferRequestDetailsSchemaOverledgerSigningType' Lens
transferRequestDetailsSchemaOverledgerSigningTypeL :: Lens_' TransferRequestDetailsSchema (Maybe Text)
transferRequestDetailsSchemaOverledgerSigningTypeL f TransferRequestDetailsSchema{..} = (\transferRequestDetailsSchemaOverledgerSigningType -> TransferRequestDetailsSchema { transferRequestDetailsSchemaOverledgerSigningType, ..} ) <$> f transferRequestDetailsSchemaOverledgerSigningType
{-# INLINE transferRequestDetailsSchemaOverledgerSigningTypeL #-}

-- | 'transferRequestDetailsSchemaOrigin' Lens
transferRequestDetailsSchemaOriginL :: Lens_' TransferRequestDetailsSchema (Maybe [OriginTransferSchema])
transferRequestDetailsSchemaOriginL f TransferRequestDetailsSchema{..} = (\transferRequestDetailsSchemaOrigin -> TransferRequestDetailsSchema { transferRequestDetailsSchemaOrigin, ..} ) <$> f transferRequestDetailsSchemaOrigin
{-# INLINE transferRequestDetailsSchemaOriginL #-}

-- | 'transferRequestDetailsSchemaDestination' Lens
transferRequestDetailsSchemaDestinationL :: Lens_' TransferRequestDetailsSchema (Maybe [DestinationTransferSchema])
transferRequestDetailsSchemaDestinationL f TransferRequestDetailsSchema{..} = (\transferRequestDetailsSchemaDestination -> TransferRequestDetailsSchema { transferRequestDetailsSchemaDestination, ..} ) <$> f transferRequestDetailsSchemaDestination
{-# INLINE transferRequestDetailsSchemaDestinationL #-}

-- | 'transferRequestDetailsSchemaMessage' Lens
transferRequestDetailsSchemaMessageL :: Lens_' TransferRequestDetailsSchema (Maybe Text)
transferRequestDetailsSchemaMessageL f TransferRequestDetailsSchema{..} = (\transferRequestDetailsSchemaMessage -> TransferRequestDetailsSchema { transferRequestDetailsSchemaMessage, ..} ) <$> f transferRequestDetailsSchemaMessage
{-# INLINE transferRequestDetailsSchemaMessageL #-}



-- * TransferSchema

-- | 'transferSchemaTokenId' Lens
transferSchemaTokenIdL :: Lens_' TransferSchema (Maybe Text)
transferSchemaTokenIdL f TransferSchema{..} = (\transferSchemaTokenId -> TransferSchema { transferSchemaTokenId, ..} ) <$> f transferSchemaTokenId
{-# INLINE transferSchemaTokenIdL #-}

-- | 'transferSchemaTokenName' Lens
transferSchemaTokenNameL :: Lens_' TransferSchema (Maybe Text)
transferSchemaTokenNameL f TransferSchema{..} = (\transferSchemaTokenName -> TransferSchema { transferSchemaTokenName, ..} ) <$> f transferSchemaTokenName
{-# INLINE transferSchemaTokenNameL #-}



-- * UTXODestination

-- | 'uTXODestinationSmartContract' Lens
uTXODestinationSmartContractL :: Lens_' UTXODestination (Maybe UTXOSmartContract)
uTXODestinationSmartContractL f UTXODestination{..} = (\uTXODestinationSmartContract -> UTXODestination { uTXODestinationSmartContract, ..} ) <$> f uTXODestinationSmartContract
{-# INLINE uTXODestinationSmartContractL #-}

-- | 'uTXODestinationPayment' Lens
uTXODestinationPaymentL :: Lens_' UTXODestination (Maybe Payment)
uTXODestinationPaymentL f UTXODestination{..} = (\uTXODestinationPayment -> UTXODestination { uTXODestinationPayment, ..} ) <$> f uTXODestinationPayment
{-# INLINE uTXODestinationPaymentL #-}

-- | 'uTXODestinationDestinationId' Lens
uTXODestinationDestinationIdL :: Lens_' UTXODestination (Maybe Text)
uTXODestinationDestinationIdL f UTXODestination{..} = (\uTXODestinationDestinationId -> UTXODestination { uTXODestinationDestinationId, ..} ) <$> f uTXODestinationDestinationId
{-# INLINE uTXODestinationDestinationIdL #-}



-- * UTXONativeData

-- | 'uTXONativeDataVout' Lens
uTXONativeDataVoutL :: Lens_' UTXONativeData (Maybe [Vout])
uTXONativeDataVoutL f UTXONativeData{..} = (\uTXONativeDataVout -> UTXONativeData { uTXONativeDataVout, ..} ) <$> f uTXONativeDataVout
{-# INLINE uTXONativeDataVoutL #-}



-- * UTXOSmartContract

-- | 'uTXOSmartContractDetail' Lens
uTXOSmartContractDetailL :: Lens_' UTXOSmartContract (Maybe Text)
uTXOSmartContractDetailL f UTXOSmartContract{..} = (\uTXOSmartContractDetail -> UTXOSmartContract { uTXOSmartContractDetail, ..} ) <$> f uTXOSmartContractDetail
{-# INLINE uTXOSmartContractDetailL #-}

-- | 'uTXOSmartContractType' Lens
uTXOSmartContractTypeL :: Lens_' UTXOSmartContract (Maybe Text)
uTXOSmartContractTypeL f UTXOSmartContract{..} = (\uTXOSmartContractType -> UTXOSmartContract { uTXOSmartContractType, ..} ) <$> f uTXOSmartContractType
{-# INLINE uTXOSmartContractTypeL #-}

-- | 'uTXOSmartContractExtraFields' Lens
uTXOSmartContractExtraFieldsL :: Lens_' UTXOSmartContract (Maybe ExtraFields)
uTXOSmartContractExtraFieldsL f UTXOSmartContract{..} = (\uTXOSmartContractExtraFields -> UTXOSmartContract { uTXOSmartContractExtraFields, ..} ) <$> f uTXOSmartContractExtraFields
{-# INLINE uTXOSmartContractExtraFieldsL #-}



-- * UTXOTimestampSchema

-- | 'uTXOTimestampSchemaNano' Lens
uTXOTimestampSchemaNanoL :: Lens_' UTXOTimestampSchema (Maybe Text)
uTXOTimestampSchemaNanoL f UTXOTimestampSchema{..} = (\uTXOTimestampSchemaNano -> UTXOTimestampSchema { uTXOTimestampSchemaNano, ..} ) <$> f uTXOTimestampSchemaNano
{-# INLINE uTXOTimestampSchemaNanoL #-}

-- | 'uTXOTimestampSchemaEpochSecond' Lens
uTXOTimestampSchemaEpochSecondL :: Lens_' UTXOTimestampSchema (Maybe Text)
uTXOTimestampSchemaEpochSecondL f UTXOTimestampSchema{..} = (\uTXOTimestampSchemaEpochSecond -> UTXOTimestampSchema { uTXOTimestampSchemaEpochSecond, ..} ) <$> f uTXOTimestampSchemaEpochSecond
{-# INLINE uTXOTimestampSchemaEpochSecondL #-}



-- * UpdateAddressMonitoringSchema

-- | 'updateAddressMonitoringSchemaAddressMonitoringDetails' Lens
updateAddressMonitoringSchemaAddressMonitoringDetailsL :: Lens_' UpdateAddressMonitoringSchema (Maybe ResourceMonitoringAddressDetails)
updateAddressMonitoringSchemaAddressMonitoringDetailsL f UpdateAddressMonitoringSchema{..} = (\updateAddressMonitoringSchemaAddressMonitoringDetails -> UpdateAddressMonitoringSchema { updateAddressMonitoringSchemaAddressMonitoringDetails, ..} ) <$> f updateAddressMonitoringSchemaAddressMonitoringDetails
{-# INLINE updateAddressMonitoringSchemaAddressMonitoringDetailsL #-}

-- | 'updateAddressMonitoringSchemaResourceMonitoring' Lens
updateAddressMonitoringSchemaResourceMonitoringL :: Lens_' UpdateAddressMonitoringSchema (Maybe ResourceMonitoringDetails)
updateAddressMonitoringSchemaResourceMonitoringL f UpdateAddressMonitoringSchema{..} = (\updateAddressMonitoringSchemaResourceMonitoring -> UpdateAddressMonitoringSchema { updateAddressMonitoringSchemaResourceMonitoring, ..} ) <$> f updateAddressMonitoringSchemaResourceMonitoring
{-# INLINE updateAddressMonitoringSchemaResourceMonitoringL #-}



-- * UpdateSubscriptionRequestSchema

-- | 'updateSubscriptionRequestSchemaStatusUpdate' Lens
updateSubscriptionRequestSchemaStatusUpdateL :: Lens_' UpdateSubscriptionRequestSchema (Maybe StatusUpdateSchema)
updateSubscriptionRequestSchemaStatusUpdateL f UpdateSubscriptionRequestSchema{..} = (\updateSubscriptionRequestSchemaStatusUpdate -> UpdateSubscriptionRequestSchema { updateSubscriptionRequestSchemaStatusUpdate, ..} ) <$> f updateSubscriptionRequestSchemaStatusUpdate
{-# INLINE updateSubscriptionRequestSchemaStatusUpdateL #-}

-- | 'updateSubscriptionRequestSchemaCallbackUrl' Lens
updateSubscriptionRequestSchemaCallbackUrlL :: Lens_' UpdateSubscriptionRequestSchema (Maybe Text)
updateSubscriptionRequestSchemaCallbackUrlL f UpdateSubscriptionRequestSchema{..} = (\updateSubscriptionRequestSchemaCallbackUrl -> UpdateSubscriptionRequestSchema { updateSubscriptionRequestSchemaCallbackUrl, ..} ) <$> f updateSubscriptionRequestSchemaCallbackUrl
{-# INLINE updateSubscriptionRequestSchemaCallbackUrlL #-}



-- * Vout

-- | 'voutScriptPubKey' Lens
voutScriptPubKeyL :: Lens_' Vout (Maybe ScriptPubKey)
voutScriptPubKeyL f Vout{..} = (\voutScriptPubKey -> Vout { voutScriptPubKey, ..} ) <$> f voutScriptPubKey
{-# INLINE voutScriptPubKeyL #-}

-- | 'voutValue' Lens
voutValueL :: Lens_' Vout (Maybe Double)
voutValueL f Vout{..} = (\voutValue -> Vout { voutValue, ..} ) <$> f voutValue
{-# INLINE voutValueL #-}

-- | 'voutN' Lens
voutNL :: Lens_' Vout (Maybe Double)
voutNL f Vout{..} = (\voutN -> Vout { voutN, ..} ) <$> f voutN
{-# INLINE voutNL #-}


