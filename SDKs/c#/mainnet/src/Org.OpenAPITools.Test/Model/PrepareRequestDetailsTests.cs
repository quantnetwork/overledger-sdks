/*
 * Quant Overledger API
 *
 * Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing PrepareRequestDetails
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PrepareRequestDetailsTests
    {
        // TODO uncomment below to declare an instance variable for PrepareRequestDetails
        //private PrepareRequestDetails instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of PrepareRequestDetails
            //instance = new PrepareRequestDetails();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PrepareRequestDetails
        /// </summary>
        [Test]
        public void PrepareRequestDetailsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" PrepareRequestDetails
            //Assert.IsInstanceOf(typeof(PrepareRequestDetails), instance);
        }


        /// <summary>
        /// Test the property 'Mandate'
        /// </summary>
        [Test]
        public void MandateTest()
        {
            // TODO unit test for the property 'Mandate'
        }
        /// <summary>
        /// Test the property 'AliasDetails'
        /// </summary>
        [Test]
        public void AliasDetailsTest()
        {
            // TODO unit test for the property 'AliasDetails'
        }
        /// <summary>
        /// Test the property 'Pagination'
        /// </summary>
        [Test]
        public void PaginationTest()
        {
            // TODO unit test for the property 'Pagination'
        }
        /// <summary>
        /// Test the property 'Origin'
        /// </summary>
        [Test]
        public void OriginTest()
        {
            // TODO unit test for the property 'Origin'
        }
        /// <summary>
        /// Test the property 'Destination'
        /// </summary>
        [Test]
        public void DestinationTest()
        {
            // TODO unit test for the property 'Destination'
        }
        /// <summary>
        /// Test the property 'TokenName'
        /// </summary>
        [Test]
        public void TokenNameTest()
        {
            // TODO unit test for the property 'TokenName'
        }
        /// <summary>
        /// Test the property 'BlockSearchType'
        /// </summary>
        [Test]
        public void BlockSearchTypeTest()
        {
            // TODO unit test for the property 'BlockSearchType'
        }
        /// <summary>
        /// Test the property 'Payer'
        /// </summary>
        [Test]
        public void PayerTest()
        {
            // TODO unit test for the property 'Payer'
        }
        /// <summary>
        /// Test the property 'Collector'
        /// </summary>
        [Test]
        public void CollectorTest()
        {
            // TODO unit test for the property 'Collector'
        }
        /// <summary>
        /// Test the property 'Payee'
        /// </summary>
        [Test]
        public void PayeeTest()
        {
            // TODO unit test for the property 'Payee'
        }
        /// <summary>
        /// Test the property 'AdditionalOwner'
        /// </summary>
        [Test]
        public void AdditionalOwnerTest()
        {
            // TODO unit test for the property 'AdditionalOwner'
        }
        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Test]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }
        /// <summary>
        /// Test the property 'Creator'
        /// </summary>
        [Test]
        public void CreatorTest()
        {
            // TODO unit test for the property 'Creator'
        }
        /// <summary>
        /// Test the property 'Receiver'
        /// </summary>
        [Test]
        public void ReceiverTest()
        {
            // TODO unit test for the property 'Receiver'
        }
        /// <summary>
        /// Test the property 'TokenId'
        /// </summary>
        [Test]
        public void TokenIdTest()
        {
            // TODO unit test for the property 'TokenId'
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Test]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'LockDetails'
        /// </summary>
        [Test]
        public void LockDetailsTest()
        {
            // TODO unit test for the property 'LockDetails'
        }
        /// <summary>
        /// Test the property 'BlockId'
        /// </summary>
        [Test]
        public void BlockIdTest()
        {
            // TODO unit test for the property 'BlockId'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Test]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'TokenUnit'
        /// </summary>
        [Test]
        public void TokenUnitTest()
        {
            // TODO unit test for the property 'TokenUnit'
        }
        /// <summary>
        /// Test the property 'Beneficiary'
        /// </summary>
        [Test]
        public void BeneficiaryTest()
        {
            // TODO unit test for the property 'Beneficiary'
        }
        /// <summary>
        /// Test the property 'Sender'
        /// </summary>
        [Test]
        public void SenderTest()
        {
            // TODO unit test for the property 'Sender'
        }
        /// <summary>
        /// Test the property 'AccountDetails'
        /// </summary>
        [Test]
        public void AccountDetailsTest()
        {
            // TODO unit test for the property 'AccountDetails'
        }
        /// <summary>
        /// Test the property 'OverledgerSigningType'
        /// </summary>
        [Test]
        public void OverledgerSigningTypeTest()
        {
            // TODO unit test for the property 'OverledgerSigningType'
        }
        /// <summary>
        /// Test the property 'TotalPaymentAmount'
        /// </summary>
        [Test]
        public void TotalPaymentAmountTest()
        {
            // TODO unit test for the property 'TotalPaymentAmount'
        }
        /// <summary>
        /// Test the property 'SignerAccount'
        /// </summary>
        [Test]
        public void SignerAccountTest()
        {
            // TODO unit test for the property 'SignerAccount'
        }

    }

}
