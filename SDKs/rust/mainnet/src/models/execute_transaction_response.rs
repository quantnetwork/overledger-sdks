/*
 * Quant Overledger API
 *
 * Quant's Overledger API allows developers to create applications for multiple DLT's using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps â€“ prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ExecuteTransactionResponse {
    #[serde(rename = "urgency", skip_serializing_if = "Option::is_none")]
    pub urgency: Option<String>,
    /// The ID assigned to a preparation request in Overledger
    #[serde(rename = "requestId", skip_serializing_if = "Option::is_none")]
    pub request_id: Option<String>,
    #[serde(rename = "overledgerTransactionId", skip_serializing_if = "Option::is_none")]
    pub overledger_transaction_id: Option<String>,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<Box<crate::models::Location>>,
    /// The type of the transaction executed
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    /// The ID assigned by Overledger to a transaction submitted to a DLT via Overledger
    #[serde(rename = "transactionId", skip_serializing_if = "Option::is_none")]
    pub transaction_id: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::Status>>,
}

impl ExecuteTransactionResponse {
    pub fn new() -> ExecuteTransactionResponse {
        ExecuteTransactionResponse {
            urgency: None,
            request_id: None,
            overledger_transaction_id: None,
            location: None,
            _type: None,
            transaction_id: None,
            status: None,
        }
    }
}


