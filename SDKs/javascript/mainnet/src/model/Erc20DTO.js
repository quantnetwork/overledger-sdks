/**
 * Quant Overledger API
 * Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocationDTO from './LocationDTO';
import TierFunctionDTO from './TierFunctionDTO';

/**
 * The Erc20DTO model module.
 * @module model/Erc20DTO
 * @version 2.0
 */
class Erc20DTO {
    /**
     * Constructs a new <code>Erc20DTO</code>.
     * @alias module:model/Erc20DTO
     */
    constructor() { 
        
        Erc20DTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Erc20DTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Erc20DTO} obj Optional instance to populate.
     * @return {module:model/Erc20DTO} The populated <code>Erc20DTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Erc20DTO();

            if (data.hasOwnProperty('isQrc20')) {
                obj['isQrc20'] = ApiClient.convertToType(data['isQrc20'], 'Boolean');
            }
            if (data.hasOwnProperty('tokenUnit')) {
                obj['tokenUnit'] = ApiClient.convertToType(data['tokenUnit'], 'String');
            }
            if (data.hasOwnProperty('decimalPlaces')) {
                obj['decimalPlaces'] = ApiClient.convertToType(data['decimalPlaces'], 'Number');
            }
            if (data.hasOwnProperty('functions')) {
                obj['functions'] = ApiClient.convertToType(data['functions'], [TierFunctionDTO]);
            }
            if (data.hasOwnProperty('tokenName')) {
                obj['tokenName'] = ApiClient.convertToType(data['tokenName'], 'String');
            }
            if (data.hasOwnProperty('smartContractAddress')) {
                obj['smartContractAddress'] = ApiClient.convertToType(data['smartContractAddress'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = LocationDTO.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('auditDate')) {
                obj['auditDate'] = ApiClient.convertToType(data['auditDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} isQrc20
 */
Erc20DTO.prototype['isQrc20'] = undefined;

/**
 * @member {String} tokenUnit
 */
Erc20DTO.prototype['tokenUnit'] = undefined;

/**
 * @member {Number} decimalPlaces
 */
Erc20DTO.prototype['decimalPlaces'] = undefined;

/**
 * @member {Array.<module:model/TierFunctionDTO>} functions
 */
Erc20DTO.prototype['functions'] = undefined;

/**
 * @member {String} tokenName
 */
Erc20DTO.prototype['tokenName'] = undefined;

/**
 * @member {String} smartContractAddress
 */
Erc20DTO.prototype['smartContractAddress'] = undefined;

/**
 * @member {module:model/LocationDTO} location
 */
Erc20DTO.prototype['location'] = undefined;

/**
 * @member {String} version
 */
Erc20DTO.prototype['version'] = undefined;

/**
 * @member {String} url
 */
Erc20DTO.prototype['url'] = undefined;

/**
 * @member {Date} auditDate
 */
Erc20DTO.prototype['auditDate'] = undefined;






export default Erc20DTO;

