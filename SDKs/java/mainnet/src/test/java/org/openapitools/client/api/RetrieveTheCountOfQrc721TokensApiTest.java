/*
 * Quant Overledger API
 * Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorList;
import org.openapitools.client.model.InternalServerErrorSchema;
import org.openapitools.client.model.ReadBalanceRequestSchema;
import org.openapitools.client.model.TokenReadQRC721Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RetrieveTheCountOfQrc721TokensApi
 */
@Ignore
public class RetrieveTheCountOfQrc721TokensApiTest {

    private final RetrieveTheCountOfQrc721TokensApi api = new RetrieveTheCountOfQrc721TokensApi();

    
    /**
     * Retrieve the count of a QRC721 token for a particular account
     *
     * Submits a query to the DLN and returns the number of QRC721 tokens held by the given account ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTokenCountTest() throws ApiException {
        String authorization = null;
        ReadBalanceRequestSchema readBalanceRequestSchema = null;
                TokenReadQRC721Response response = api.getTokenCount(authorization, readBalanceRequestSchema);
        // TODO: test validations
    }
    
}
