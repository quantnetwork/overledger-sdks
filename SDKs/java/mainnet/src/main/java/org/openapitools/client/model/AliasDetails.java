/*
 * Quant Overledger API
 * Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Alias Details of an account
 */
@ApiModel(description = "Alias Details of an account")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-29T09:46:50.106642+01:00[Europe/London]")
public class AliasDetails {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;

  public static final String SERIALIZED_NAME_DISPOSABLE_ALIAS = "disposableAlias";
  @SerializedName(SERIALIZED_NAME_DISPOSABLE_ALIAS)
  private Boolean disposableAlias;

  public static final String SERIALIZED_NAME_ALIAS_HASH = "aliasHash";
  @SerializedName(SERIALIZED_NAME_ALIAS_HASH)
  private String aliasHash;

  public static final String SERIALIZED_NAME_ALIAS_TYPE = "aliasType";
  @SerializedName(SERIALIZED_NAME_ALIAS_TYPE)
  private String aliasType;

  public static final String SERIALIZED_NAME_ESIP_ID = "esipId";
  @SerializedName(SERIALIZED_NAME_ESIP_ID)
  private String esipId;


  public AliasDetails accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public AliasDetails unit(String unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnit() {
    return unit;
  }


  public void setUnit(String unit) {
    this.unit = unit;
  }


  public AliasDetails disposableAlias(Boolean disposableAlias) {
    
    this.disposableAlias = disposableAlias;
    return this;
  }

   /**
   * Get disposableAlias
   * @return disposableAlias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDisposableAlias() {
    return disposableAlias;
  }


  public void setDisposableAlias(Boolean disposableAlias) {
    this.disposableAlias = disposableAlias;
  }


  public AliasDetails aliasHash(String aliasHash) {
    
    this.aliasHash = aliasHash;
    return this;
  }

   /**
   * Get aliasHash
   * @return aliasHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAliasHash() {
    return aliasHash;
  }


  public void setAliasHash(String aliasHash) {
    this.aliasHash = aliasHash;
  }


  public AliasDetails aliasType(String aliasType) {
    
    this.aliasType = aliasType;
    return this;
  }

   /**
   * Get aliasType
   * @return aliasType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAliasType() {
    return aliasType;
  }


  public void setAliasType(String aliasType) {
    this.aliasType = aliasType;
  }


  public AliasDetails esipId(String esipId) {
    
    this.esipId = esipId;
    return this;
  }

   /**
   * Get esipId
   * @return esipId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEsipId() {
    return esipId;
  }


  public void setEsipId(String esipId) {
    this.esipId = esipId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AliasDetails aliasDetails = (AliasDetails) o;
    return Objects.equals(this.accountId, aliasDetails.accountId) &&
        Objects.equals(this.unit, aliasDetails.unit) &&
        Objects.equals(this.disposableAlias, aliasDetails.disposableAlias) &&
        Objects.equals(this.aliasHash, aliasDetails.aliasHash) &&
        Objects.equals(this.aliasType, aliasDetails.aliasType) &&
        Objects.equals(this.esipId, aliasDetails.esipId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, unit, disposableAlias, aliasHash, aliasType, esipId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AliasDetails {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    disposableAlias: ").append(toIndentedString(disposableAlias)).append("\n");
    sb.append("    aliasHash: ").append(toIndentedString(aliasHash)).append("\n");
    sb.append("    aliasType: ").append(toIndentedString(aliasType)).append("\n");
    sb.append("    esipId: ").append(toIndentedString(esipId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

