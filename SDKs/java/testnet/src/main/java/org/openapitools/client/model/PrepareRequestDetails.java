/*
 * Quant Overledger API
 * Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AccountDetails;
import org.openapitools.client.model.AdditionalOwner;
import org.openapitools.client.model.AliasDetails;
import org.openapitools.client.model.Beneficiary;
import org.openapitools.client.model.Collector;
import org.openapitools.client.model.Creator;
import org.openapitools.client.model.Destination;
import org.openapitools.client.model.LockDetails;
import org.openapitools.client.model.Mandate;
import org.openapitools.client.model.Origin;
import org.openapitools.client.model.Owner;
import org.openapitools.client.model.Pagination;
import org.openapitools.client.model.Payee;
import org.openapitools.client.model.Payer;
import org.openapitools.client.model.Payment;
import org.openapitools.client.model.Receiver;
import org.openapitools.client.model.Sender;
import org.openapitools.client.model.SignerAccount;

/**
 * PrepareRequestDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-29T09:47:12.017872+01:00[Europe/London]")
public class PrepareRequestDetails {
  public static final String SERIALIZED_NAME_MANDATE = "mandate";
  @SerializedName(SERIALIZED_NAME_MANDATE)
  private List<Mandate> mandate = null;

  public static final String SERIALIZED_NAME_ALIAS_DETAILS = "aliasDetails";
  @SerializedName(SERIALIZED_NAME_ALIAS_DETAILS)
  private AliasDetails aliasDetails;

  public static final String SERIALIZED_NAME_PAGINATION = "pagination";
  @SerializedName(SERIALIZED_NAME_PAGINATION)
  private Pagination pagination;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private List<Origin> origin = null;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private List<Destination> destination = null;

  public static final String SERIALIZED_NAME_TOKEN_NAME = "tokenName";
  @SerializedName(SERIALIZED_NAME_TOKEN_NAME)
  private String tokenName;

  public static final String SERIALIZED_NAME_BLOCK_SEARCH_TYPE = "blockSearchType";
  @SerializedName(SERIALIZED_NAME_BLOCK_SEARCH_TYPE)
  private String blockSearchType;

  public static final String SERIALIZED_NAME_PAYER = "payer";
  @SerializedName(SERIALIZED_NAME_PAYER)
  private List<Payer> payer = null;

  public static final String SERIALIZED_NAME_COLLECTOR = "collector";
  @SerializedName(SERIALIZED_NAME_COLLECTOR)
  private Collector collector;

  public static final String SERIALIZED_NAME_PAYEE = "payee";
  @SerializedName(SERIALIZED_NAME_PAYEE)
  private List<Payee> payee = null;

  public static final String SERIALIZED_NAME_ADDITIONAL_OWNER = "additionalOwner";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_OWNER)
  private AdditionalOwner additionalOwner;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private Owner owner;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private Creator creator;

  public static final String SERIALIZED_NAME_RECEIVER = "receiver";
  @SerializedName(SERIALIZED_NAME_RECEIVER)
  private List<Receiver> receiver = null;

  public static final String SERIALIZED_NAME_TOKEN_ID = "tokenId";
  @SerializedName(SERIALIZED_NAME_TOKEN_ID)
  private String tokenId;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_LOCK_DETAILS = "lockDetails";
  @SerializedName(SERIALIZED_NAME_LOCK_DETAILS)
  private LockDetails lockDetails;

  public static final String SERIALIZED_NAME_BLOCK_ID = "blockId";
  @SerializedName(SERIALIZED_NAME_BLOCK_ID)
  private String blockId;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_TOKEN_UNIT = "tokenUnit";
  @SerializedName(SERIALIZED_NAME_TOKEN_UNIT)
  private String tokenUnit;

  public static final String SERIALIZED_NAME_BENEFICIARY = "beneficiary";
  @SerializedName(SERIALIZED_NAME_BENEFICIARY)
  private Beneficiary beneficiary;

  public static final String SERIALIZED_NAME_SENDER = "sender";
  @SerializedName(SERIALIZED_NAME_SENDER)
  private List<Sender> sender = null;

  public static final String SERIALIZED_NAME_ACCOUNT_DETAILS = "accountDetails";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DETAILS)
  private AccountDetails accountDetails;

  public static final String SERIALIZED_NAME_OVERLEDGER_SIGNING_TYPE = "overledgerSigningType";
  @SerializedName(SERIALIZED_NAME_OVERLEDGER_SIGNING_TYPE)
  private String overledgerSigningType;

  public static final String SERIALIZED_NAME_TOTAL_PAYMENT_AMOUNT = "totalPaymentAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYMENT_AMOUNT)
  private Payment totalPaymentAmount;

  public static final String SERIALIZED_NAME_SIGNER_ACCOUNT = "signerAccount";
  @SerializedName(SERIALIZED_NAME_SIGNER_ACCOUNT)
  private SignerAccount signerAccount;


  public PrepareRequestDetails mandate(List<Mandate> mandate) {
    
    this.mandate = mandate;
    return this;
  }

  public PrepareRequestDetails addMandateItem(Mandate mandateItem) {
    if (this.mandate == null) {
      this.mandate = new ArrayList<Mandate>();
    }
    this.mandate.add(mandateItem);
    return this;
  }

   /**
   * Get mandate
   * @return mandate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Mandate> getMandate() {
    return mandate;
  }


  public void setMandate(List<Mandate> mandate) {
    this.mandate = mandate;
  }


  public PrepareRequestDetails aliasDetails(AliasDetails aliasDetails) {
    
    this.aliasDetails = aliasDetails;
    return this;
  }

   /**
   * Get aliasDetails
   * @return aliasDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AliasDetails getAliasDetails() {
    return aliasDetails;
  }


  public void setAliasDetails(AliasDetails aliasDetails) {
    this.aliasDetails = aliasDetails;
  }


  public PrepareRequestDetails pagination(Pagination pagination) {
    
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Pagination getPagination() {
    return pagination;
  }


  public void setPagination(Pagination pagination) {
    this.pagination = pagination;
  }


  public PrepareRequestDetails origin(List<Origin> origin) {
    
    this.origin = origin;
    return this;
  }

  public PrepareRequestDetails addOriginItem(Origin originItem) {
    if (this.origin == null) {
      this.origin = new ArrayList<Origin>();
    }
    this.origin.add(originItem);
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Origin> getOrigin() {
    return origin;
  }


  public void setOrigin(List<Origin> origin) {
    this.origin = origin;
  }


  public PrepareRequestDetails destination(List<Destination> destination) {
    
    this.destination = destination;
    return this;
  }

  public PrepareRequestDetails addDestinationItem(Destination destinationItem) {
    if (this.destination == null) {
      this.destination = new ArrayList<Destination>();
    }
    this.destination.add(destinationItem);
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Destination> getDestination() {
    return destination;
  }


  public void setDestination(List<Destination> destination) {
    this.destination = destination;
  }


  public PrepareRequestDetails tokenName(String tokenName) {
    
    this.tokenName = tokenName;
    return this;
  }

   /**
   * Name of the token
   * @return tokenName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the token")

  public String getTokenName() {
    return tokenName;
  }


  public void setTokenName(String tokenName) {
    this.tokenName = tokenName;
  }


  public PrepareRequestDetails blockSearchType(String blockSearchType) {
    
    this.blockSearchType = blockSearchType;
    return this;
  }

   /**
   * Get blockSearchType
   * @return blockSearchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBlockSearchType() {
    return blockSearchType;
  }


  public void setBlockSearchType(String blockSearchType) {
    this.blockSearchType = blockSearchType;
  }


  public PrepareRequestDetails payer(List<Payer> payer) {
    
    this.payer = payer;
    return this;
  }

  public PrepareRequestDetails addPayerItem(Payer payerItem) {
    if (this.payer == null) {
      this.payer = new ArrayList<Payer>();
    }
    this.payer.add(payerItem);
    return this;
  }

   /**
   * Get payer
   * @return payer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Payer> getPayer() {
    return payer;
  }


  public void setPayer(List<Payer> payer) {
    this.payer = payer;
  }


  public PrepareRequestDetails collector(Collector collector) {
    
    this.collector = collector;
    return this;
  }

   /**
   * Get collector
   * @return collector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Collector getCollector() {
    return collector;
  }


  public void setCollector(Collector collector) {
    this.collector = collector;
  }


  public PrepareRequestDetails payee(List<Payee> payee) {
    
    this.payee = payee;
    return this;
  }

  public PrepareRequestDetails addPayeeItem(Payee payeeItem) {
    if (this.payee == null) {
      this.payee = new ArrayList<Payee>();
    }
    this.payee.add(payeeItem);
    return this;
  }

   /**
   * Get payee
   * @return payee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Payee> getPayee() {
    return payee;
  }


  public void setPayee(List<Payee> payee) {
    this.payee = payee;
  }


  public PrepareRequestDetails additionalOwner(AdditionalOwner additionalOwner) {
    
    this.additionalOwner = additionalOwner;
    return this;
  }

   /**
   * Get additionalOwner
   * @return additionalOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdditionalOwner getAdditionalOwner() {
    return additionalOwner;
  }


  public void setAdditionalOwner(AdditionalOwner additionalOwner) {
    this.additionalOwner = additionalOwner;
  }


  public PrepareRequestDetails owner(Owner owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Owner getOwner() {
    return owner;
  }


  public void setOwner(Owner owner) {
    this.owner = owner;
  }


  public PrepareRequestDetails creator(Creator creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Creator getCreator() {
    return creator;
  }


  public void setCreator(Creator creator) {
    this.creator = creator;
  }


  public PrepareRequestDetails receiver(List<Receiver> receiver) {
    
    this.receiver = receiver;
    return this;
  }

  public PrepareRequestDetails addReceiverItem(Receiver receiverItem) {
    if (this.receiver == null) {
      this.receiver = new ArrayList<Receiver>();
    }
    this.receiver.add(receiverItem);
    return this;
  }

   /**
   * Get receiver
   * @return receiver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Receiver> getReceiver() {
    return receiver;
  }


  public void setReceiver(List<Receiver> receiver) {
    this.receiver = receiver;
  }


  public PrepareRequestDetails tokenId(String tokenId) {
    
    this.tokenId = tokenId;
    return this;
  }

   /**
   * Unique identifier for the specific token
   * @return tokenId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for the specific token")

  public String getTokenId() {
    return tokenId;
  }


  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }


  public PrepareRequestDetails message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public PrepareRequestDetails lockDetails(LockDetails lockDetails) {
    
    this.lockDetails = lockDetails;
    return this;
  }

   /**
   * Get lockDetails
   * @return lockDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LockDetails getLockDetails() {
    return lockDetails;
  }


  public void setLockDetails(LockDetails lockDetails) {
    this.lockDetails = lockDetails;
  }


  public PrepareRequestDetails blockId(String blockId) {
    
    this.blockId = blockId;
    return this;
  }

   /**
   * Get blockId
   * @return blockId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBlockId() {
    return blockId;
  }


  public void setBlockId(String blockId) {
    this.blockId = blockId;
  }


  public PrepareRequestDetails accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * The unique identifiers of the account
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifiers of the account")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public PrepareRequestDetails tokenUnit(String tokenUnit) {
    
    this.tokenUnit = tokenUnit;
    return this;
  }

   /**
   * The unit of this token
   * @return tokenUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unit of this token")

  public String getTokenUnit() {
    return tokenUnit;
  }


  public void setTokenUnit(String tokenUnit) {
    this.tokenUnit = tokenUnit;
  }


  public PrepareRequestDetails beneficiary(Beneficiary beneficiary) {
    
    this.beneficiary = beneficiary;
    return this;
  }

   /**
   * Get beneficiary
   * @return beneficiary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Beneficiary getBeneficiary() {
    return beneficiary;
  }


  public void setBeneficiary(Beneficiary beneficiary) {
    this.beneficiary = beneficiary;
  }


  public PrepareRequestDetails sender(List<Sender> sender) {
    
    this.sender = sender;
    return this;
  }

  public PrepareRequestDetails addSenderItem(Sender senderItem) {
    if (this.sender == null) {
      this.sender = new ArrayList<Sender>();
    }
    this.sender.add(senderItem);
    return this;
  }

   /**
   * Get sender
   * @return sender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Sender> getSender() {
    return sender;
  }


  public void setSender(List<Sender> sender) {
    this.sender = sender;
  }


  public PrepareRequestDetails accountDetails(AccountDetails accountDetails) {
    
    this.accountDetails = accountDetails;
    return this;
  }

   /**
   * Get accountDetails
   * @return accountDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountDetails getAccountDetails() {
    return accountDetails;
  }


  public void setAccountDetails(AccountDetails accountDetails) {
    this.accountDetails = accountDetails;
  }


  public PrepareRequestDetails overledgerSigningType(String overledgerSigningType) {
    
    this.overledgerSigningType = overledgerSigningType;
    return this;
  }

   /**
   * Get overledgerSigningType
   * @return overledgerSigningType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOverledgerSigningType() {
    return overledgerSigningType;
  }


  public void setOverledgerSigningType(String overledgerSigningType) {
    this.overledgerSigningType = overledgerSigningType;
  }


  public PrepareRequestDetails totalPaymentAmount(Payment totalPaymentAmount) {
    
    this.totalPaymentAmount = totalPaymentAmount;
    return this;
  }

   /**
   * Get totalPaymentAmount
   * @return totalPaymentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Payment getTotalPaymentAmount() {
    return totalPaymentAmount;
  }


  public void setTotalPaymentAmount(Payment totalPaymentAmount) {
    this.totalPaymentAmount = totalPaymentAmount;
  }


  public PrepareRequestDetails signerAccount(SignerAccount signerAccount) {
    
    this.signerAccount = signerAccount;
    return this;
  }

   /**
   * Get signerAccount
   * @return signerAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SignerAccount getSignerAccount() {
    return signerAccount;
  }


  public void setSignerAccount(SignerAccount signerAccount) {
    this.signerAccount = signerAccount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrepareRequestDetails prepareRequestDetails = (PrepareRequestDetails) o;
    return Objects.equals(this.mandate, prepareRequestDetails.mandate) &&
        Objects.equals(this.aliasDetails, prepareRequestDetails.aliasDetails) &&
        Objects.equals(this.pagination, prepareRequestDetails.pagination) &&
        Objects.equals(this.origin, prepareRequestDetails.origin) &&
        Objects.equals(this.destination, prepareRequestDetails.destination) &&
        Objects.equals(this.tokenName, prepareRequestDetails.tokenName) &&
        Objects.equals(this.blockSearchType, prepareRequestDetails.blockSearchType) &&
        Objects.equals(this.payer, prepareRequestDetails.payer) &&
        Objects.equals(this.collector, prepareRequestDetails.collector) &&
        Objects.equals(this.payee, prepareRequestDetails.payee) &&
        Objects.equals(this.additionalOwner, prepareRequestDetails.additionalOwner) &&
        Objects.equals(this.owner, prepareRequestDetails.owner) &&
        Objects.equals(this.creator, prepareRequestDetails.creator) &&
        Objects.equals(this.receiver, prepareRequestDetails.receiver) &&
        Objects.equals(this.tokenId, prepareRequestDetails.tokenId) &&
        Objects.equals(this.message, prepareRequestDetails.message) &&
        Objects.equals(this.lockDetails, prepareRequestDetails.lockDetails) &&
        Objects.equals(this.blockId, prepareRequestDetails.blockId) &&
        Objects.equals(this.accountId, prepareRequestDetails.accountId) &&
        Objects.equals(this.tokenUnit, prepareRequestDetails.tokenUnit) &&
        Objects.equals(this.beneficiary, prepareRequestDetails.beneficiary) &&
        Objects.equals(this.sender, prepareRequestDetails.sender) &&
        Objects.equals(this.accountDetails, prepareRequestDetails.accountDetails) &&
        Objects.equals(this.overledgerSigningType, prepareRequestDetails.overledgerSigningType) &&
        Objects.equals(this.totalPaymentAmount, prepareRequestDetails.totalPaymentAmount) &&
        Objects.equals(this.signerAccount, prepareRequestDetails.signerAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mandate, aliasDetails, pagination, origin, destination, tokenName, blockSearchType, payer, collector, payee, additionalOwner, owner, creator, receiver, tokenId, message, lockDetails, blockId, accountId, tokenUnit, beneficiary, sender, accountDetails, overledgerSigningType, totalPaymentAmount, signerAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrepareRequestDetails {\n");
    sb.append("    mandate: ").append(toIndentedString(mandate)).append("\n");
    sb.append("    aliasDetails: ").append(toIndentedString(aliasDetails)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    tokenName: ").append(toIndentedString(tokenName)).append("\n");
    sb.append("    blockSearchType: ").append(toIndentedString(blockSearchType)).append("\n");
    sb.append("    payer: ").append(toIndentedString(payer)).append("\n");
    sb.append("    collector: ").append(toIndentedString(collector)).append("\n");
    sb.append("    payee: ").append(toIndentedString(payee)).append("\n");
    sb.append("    additionalOwner: ").append(toIndentedString(additionalOwner)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    receiver: ").append(toIndentedString(receiver)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    lockDetails: ").append(toIndentedString(lockDetails)).append("\n");
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    tokenUnit: ").append(toIndentedString(tokenUnit)).append("\n");
    sb.append("    beneficiary: ").append(toIndentedString(beneficiary)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    accountDetails: ").append(toIndentedString(accountDetails)).append("\n");
    sb.append("    overledgerSigningType: ").append(toIndentedString(overledgerSigningType)).append("\n");
    sb.append("    totalPaymentAmount: ").append(toIndentedString(totalPaymentAmount)).append("\n");
    sb.append("    signerAccount: ").append(toIndentedString(signerAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

