/*
 * Quant Overledger API
 * Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ErrorResponseMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-29T09:47:12.017872+01:00[Europe/London]")
public class ErrorResponseMessage {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private Integer code;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE_EXTRA_DETAILS = "errorMessageExtraDetails";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE_EXTRA_DETAILS)
  private Object errorMessageExtraDetails;

  public static final String SERIALIZED_NAME_SUB_CODE = "subCode";
  @SerializedName(SERIALIZED_NAME_SUB_CODE)
  private Integer subCode;

  public static final String SERIALIZED_NAME_LOG_TRACE_ID = "logTraceId";
  @SerializedName(SERIALIZED_NAME_LOG_TRACE_ID)
  private String logTraceId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;


  public ErrorResponseMessage code(Integer code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCode() {
    return code;
  }


  public void setCode(Integer code) {
    this.code = code;
  }


  public ErrorResponseMessage errorMessageExtraDetails(Object errorMessageExtraDetails) {
    
    this.errorMessageExtraDetails = errorMessageExtraDetails;
    return this;
  }

   /**
   * Get errorMessageExtraDetails
   * @return errorMessageExtraDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getErrorMessageExtraDetails() {
    return errorMessageExtraDetails;
  }


  public void setErrorMessageExtraDetails(Object errorMessageExtraDetails) {
    this.errorMessageExtraDetails = errorMessageExtraDetails;
  }


  public ErrorResponseMessage subCode(Integer subCode) {
    
    this.subCode = subCode;
    return this;
  }

   /**
   * Get subCode
   * @return subCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSubCode() {
    return subCode;
  }


  public void setSubCode(Integer subCode) {
    this.subCode = subCode;
  }


  public ErrorResponseMessage logTraceId(String logTraceId) {
    
    this.logTraceId = logTraceId;
    return this;
  }

   /**
   * Get logTraceId
   * @return logTraceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLogTraceId() {
    return logTraceId;
  }


  public void setLogTraceId(String logTraceId) {
    this.logTraceId = logTraceId;
  }


  public ErrorResponseMessage type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ErrorResponseMessage title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public ErrorResponseMessage message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorResponseMessage errorResponseMessage = (ErrorResponseMessage) o;
    return Objects.equals(this.code, errorResponseMessage.code) &&
        Objects.equals(this.errorMessageExtraDetails, errorResponseMessage.errorMessageExtraDetails) &&
        Objects.equals(this.subCode, errorResponseMessage.subCode) &&
        Objects.equals(this.logTraceId, errorResponseMessage.logTraceId) &&
        Objects.equals(this.type, errorResponseMessage.type) &&
        Objects.equals(this.title, errorResponseMessage.title) &&
        Objects.equals(this.message, errorResponseMessage.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, errorMessageExtraDetails, subCode, logTraceId, type, title, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorResponseMessage {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    errorMessageExtraDetails: ").append(toIndentedString(errorMessageExtraDetails)).append("\n");
    sb.append("    subCode: ").append(toIndentedString(subCode)).append("\n");
    sb.append("    logTraceId: ").append(toIndentedString(logTraceId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

