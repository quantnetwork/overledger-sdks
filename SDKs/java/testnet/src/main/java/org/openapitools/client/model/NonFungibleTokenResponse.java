/*
 * Quant Overledger API
 * Quant’s Overledger API allows developers to create applications for multiple DLT’s using a single standard set of operations and data structures.In order to maintain the security of private keys, most operations have two steps – prepare and execute. The prepare step is the point at which all arguments are specified and standardised payloads are sent. Overledger converts this standard payload into a DLT-specific transaction object. In the execute step, the SDK signs the transaction object that Overledger created and submits it to Overledger to perform the operation
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Function;
import org.openapitools.client.model.Location;

/**
 * NonFungibleTokenResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-29T09:47:12.017872+01:00[Europe/London]")
public class NonFungibleTokenResponse {
  public static final String SERIALIZED_NAME_TOKEN_NAME = "tokenName";
  @SerializedName(SERIALIZED_NAME_TOKEN_NAME)
  private String tokenName;

  public static final String SERIALIZED_NAME_DOCUMENTATION_URL = "documentationUrl";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION_URL)
  private String documentationUrl;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Location location;

  public static final String SERIALIZED_NAME_FUNCTIONS = "functions";
  @SerializedName(SERIALIZED_NAME_FUNCTIONS)
  private List<Function> functions = null;

  public static final String SERIALIZED_NAME_CONTRACT_TYPE = "contractType";
  @SerializedName(SERIALIZED_NAME_CONTRACT_TYPE)
  private String contractType;

  public static final String SERIALIZED_NAME_SMART_CONTRACT_ID = "smartContractId";
  @SerializedName(SERIALIZED_NAME_SMART_CONTRACT_ID)
  private String smartContractId;


  public NonFungibleTokenResponse tokenName(String tokenName) {
    
    this.tokenName = tokenName;
    return this;
  }

   /**
   * Get tokenName
   * @return tokenName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTokenName() {
    return tokenName;
  }


  public void setTokenName(String tokenName) {
    this.tokenName = tokenName;
  }


  public NonFungibleTokenResponse documentationUrl(String documentationUrl) {
    
    this.documentationUrl = documentationUrl;
    return this;
  }

   /**
   * Get documentationUrl
   * @return documentationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentationUrl() {
    return documentationUrl;
  }


  public void setDocumentationUrl(String documentationUrl) {
    this.documentationUrl = documentationUrl;
  }


  public NonFungibleTokenResponse location(Location location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Location getLocation() {
    return location;
  }


  public void setLocation(Location location) {
    this.location = location;
  }


  public NonFungibleTokenResponse functions(List<Function> functions) {
    
    this.functions = functions;
    return this;
  }

  public NonFungibleTokenResponse addFunctionsItem(Function functionsItem) {
    if (this.functions == null) {
      this.functions = new ArrayList<Function>();
    }
    this.functions.add(functionsItem);
    return this;
  }

   /**
   * Get functions
   * @return functions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Function> getFunctions() {
    return functions;
  }


  public void setFunctions(List<Function> functions) {
    this.functions = functions;
  }


  public NonFungibleTokenResponse contractType(String contractType) {
    
    this.contractType = contractType;
    return this;
  }

   /**
   * Get contractType
   * @return contractType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContractType() {
    return contractType;
  }


  public void setContractType(String contractType) {
    this.contractType = contractType;
  }


  public NonFungibleTokenResponse smartContractId(String smartContractId) {
    
    this.smartContractId = smartContractId;
    return this;
  }

   /**
   * Get smartContractId
   * @return smartContractId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSmartContractId() {
    return smartContractId;
  }


  public void setSmartContractId(String smartContractId) {
    this.smartContractId = smartContractId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NonFungibleTokenResponse nonFungibleTokenResponse = (NonFungibleTokenResponse) o;
    return Objects.equals(this.tokenName, nonFungibleTokenResponse.tokenName) &&
        Objects.equals(this.documentationUrl, nonFungibleTokenResponse.documentationUrl) &&
        Objects.equals(this.location, nonFungibleTokenResponse.location) &&
        Objects.equals(this.functions, nonFungibleTokenResponse.functions) &&
        Objects.equals(this.contractType, nonFungibleTokenResponse.contractType) &&
        Objects.equals(this.smartContractId, nonFungibleTokenResponse.smartContractId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenName, documentationUrl, location, functions, contractType, smartContractId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NonFungibleTokenResponse {\n");
    sb.append("    tokenName: ").append(toIndentedString(tokenName)).append("\n");
    sb.append("    documentationUrl: ").append(toIndentedString(documentationUrl)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    functions: ").append(toIndentedString(functions)).append("\n");
    sb.append("    contractType: ").append(toIndentedString(contractType)).append("\n");
    sb.append("    smartContractId: ").append(toIndentedString(smartContractId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

